using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using SGE.Model.Comun;
using SGE.Model.Entidades;
using SGE.Model.Entidades.Interfaces;
using SGE.Model.Repositorio;
using SGE.Repositorio.Modelo;
using System.Data.Common;
using System.Data.Objects;

namespace SGE.Repositorio
{

    public class BeneficiarioRepositorio : BaseRepositorio, IBeneficiarioRepositorio
    {
        private readonly DataSGE _mdb;

        public BeneficiarioRepositorio()
        {
            _mdb = new DataSGE();
        }

        private IQueryable<IBeneficiario> QBeneficiario()
        {
            var a = (from c in _mdb.T_BENEFICIARIOS
                     from cu in
                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                     from suc in
                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                     from mon in
                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                     from iva in
                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                     from nac in
                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                     from fichappp in
                         _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                     select
                         new Beneficiario
                             {
                                 IdBeneficiario = c.ID_BENEFICIARIO,
                                 IdEstado = c.ID_ESTADO ?? 0,
                                 FechaSistema = c.FEC_SIST,
                                 IdFicha = c.ID_FICHA ?? 0,
                                 IdPrograma = c.ID_PROGRAMA ?? 0,
                                 IdUsuarioSistema = c.ID_USR_SIST,
                                 IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                 NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                 CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                 CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                 CondicionIva = iva.COD_BCO_CBA ?? "0",
                                 Nacionalidad = c.NACIONALIDAD ?? 0,
                                 Residente = c.RESIDENTE,
                                 TipoPersona = c.TIPO_PERSONA,
                                 CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                 CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                 NombreEstado = c.T_ESTADOS.N_ESTADO,
                                 Cbu = cu.CBU ?? "",
                                 ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                 NumeroCuenta = cu.NRO_CTA,
                                 Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                 MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                 TieneApoderado = c.TIENE_APODERADO,
                                 Modalidad = (c.T_FICHAS.T_FICHA_PPP.MODALIDAD ?? 0) == 1 ? "E" : "C",
                                 AltaTemprana = c.T_FICHAS.T_FICHA_PPP.ALTA_TEMPRANA == null ? "N" : "S",
                                 Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                 FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                 IdSucursal = cu.ID_SUCURSAL ?? 0,
                                 UsuarioSistema = c.T_USUARIOS.LOGIN,
                                 FechaNotificacion = c.FEC_NOTIF,
                                 Notificado = (c.NOTIFICADO ?? "N") == "N" ? false : true,
                                 FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                 FechaBajaBeneficio = c.FEC_BAJA,
                                 Ficha =
                                     new Ficha
                                         {

                                             Apellido = c.T_FICHAS.APELLIDO,
                                             Barrio = c.T_FICHAS.BARRIO,
                                             Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                             IdFicha = c.T_FICHAS.ID_FICHA,
                                             Calle = c.T_FICHAS.CALLE,
                                             CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                             CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                             CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                             Contacto = c.T_FICHAS.CONTACTO,
                                             Cuil = c.T_FICHAS.CUIL,
                                             DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                             TieneDeficienciaMental =
                                                 c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                             TieneDeficienciaMotora =
                                                 c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                             TieneDeficienciaPsicologia =
                                                 c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                             TieneDeficienciaSensorial =
                                                 c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                             Dpto = c.T_FICHAS.DPTO ?? "0",
                                             EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                             EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                             EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                             FechaNacimiento = c.T_FICHAS.FER_NAC,
                                             Mail = c.T_FICHAS.MAIL,
                                             Manzana = c.T_FICHAS.MANZANA ?? "0",
                                             Monoblock = c.T_FICHAS.MONOBLOCK ?? "0",
                                             Nombre = c.T_FICHAS.NOMBRE,
                                             Numero = c.T_FICHAS.NUMERO,
                                             NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                             Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                             Piso = c.T_FICHAS.PISO ?? "0",
                                             Sexo = c.T_FICHAS.SEXO,
                                             TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                             TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                             TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                             TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                             TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                             FechaSistema = c.FEC_SIST,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FichaPpp =
                                                 new FichaPPP
                                                     {
                                                         Empresa =
                                                             new Empresa
                                                                 {
                                                                     NombreEmpresa =
                                                                         c.T_FICHAS.T_FICHA_PPP.T_EMPRESAS.N_EMPRESA
                                                                 }
                                                     }
                                         }
                             });

            return a;
        }

        private IQueryable<IBeneficiario> QBeneficiarioCompleto(int idprograma)
        {
            var a = (from c in _mdb.T_BENEFICIARIOS
                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                     from fiterc in
                         _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                     from fiUniv in
                         _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                     from cu in
                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                     from suc in
                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                     from mon in
                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                     from iva in
                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                     from nac in
                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                     from fichappp in
                         _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                     from ap in
                         _mdb.T_APODERADOS.Where(
                             ap =>
                             ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                             ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                     from sucapo in
                         _mdb.T_TABLAS_BCO_CBA.Where(
                             sucapo =>
                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == 1).
                         DefaultIfEmpty()
                     where c.ID_PROGRAMA == idprograma && fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                     select
                         new Beneficiario
                             {
                                 IdBeneficiario = c.ID_BENEFICIARIO,
                                 IdEstado = c.ID_ESTADO ?? 0,
                                 FechaSistema = c.FEC_SIST,
                                 IdFicha = c.ID_FICHA ?? 0,
                                 IdPrograma = c.ID_PROGRAMA ?? 0,
                                 IdUsuarioSistema = c.ID_USR_SIST,
                                 IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                 NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                 CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                 CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                 CondicionIva = iva.COD_BCO_CBA ?? "0",
                                 Nacionalidad = c.NACIONALIDAD ?? 0,
                                 Residente = c.RESIDENTE,
                                 TipoPersona = c.TIPO_PERSONA,
                                 CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                 CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                 NombreEstado = c.T_ESTADOS.N_ESTADO,
                                 Cbu = cu.CBU ?? "",
                                 ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                 NumeroCuenta = cu.NRO_CTA ?? 0,
                                 Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                 MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                 TieneApoderado = c.TIENE_APODERADO,
                                 FechaNotificacion = c.FEC_NOTIF,
                                 Notificado = c.NOTIFICADO == "S" ? true : false,
                                 Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                 FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                 IdSucursal = cu.ID_SUCURSAL ?? 0,
                                 UsuarioSistema = c.T_USUARIOS.LOGIN,
                                 FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                 FechaBajaBeneficio = c.FEC_BAJA,
                                 Apoderado =
                                     new Apoderado
                                         {
                                             IdApoderadoNullable = ap.ID_APODERADO,
                                             Nombre = ap.NOMBRE ?? " ",
                                             Apellido = ap.APELLIDO ?? " ",
                                             Barrio = ap.BARRIO,
                                             Calle = ap.CALLE,
                                             Cbu = ap.CBU,
                                             CodigoPostal = ap.CODIGO_POSTAL,
                                             Cuil = ap.CUIL,
                                             Dpto = ap.DPTO,
                                             EntreCalles = ap.ENTRECALLES,
                                             FechaNacimiento = ap.FER_NAC ?? DateTime.Now,
                                             FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                             IdEstadoApoderado = ap.ID_ESTADO_APODERADO ?? 0,
                                             IdSistema = ap.ID_SISTEMA ?? 0,
                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                             Mail = ap.MAIL,
                                             Numero = ap.NUMERO,
                                             LocalidadApoderado =
                                                 new Localidad
                                                     {
                                                         IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                         NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                         Departamento =
                                                             new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                     },

                                             Manzana = ap.MANZANA,
                                             Monoblock = ap.MONOBLOCK,
                                             NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                             NumeroCuentaBco = ap.NRO_CUENTA_BCO ?? 0,
                                             NumeroDocumento = ap.NRO_DOCUMENTO ?? " ",
                                             Parcela = ap.PARCELA,
                                             Piso = ap.PISO,
                                             Sexo = ap.SEXO,
                                             TelefonoCelular = ap.TEL_CELULAR,
                                             TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                             TelefonoFijo = ap.TEL_FIJO,
                                             UsuarioBanco = ap.USUARIO_BANCO,
                                             SucursalApoderado =
                                                 new Sucursal
                                                     {
                                                         CodigoBanco = sucapo.COD_BCO_CBA,
                                                         IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                         Detalle = sucapo.DESCRIPCION
                                                     }

                                         },
                                 Ficha =
                                     new Ficha
                                         {

                                             Apellido = c.T_FICHAS.APELLIDO,
                                             Barrio = c.T_FICHAS.BARRIO,
                                             Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                             IdFicha = c.T_FICHAS.ID_FICHA,
                                             Calle = c.T_FICHAS.CALLE,
                                             CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                             CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                             CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                             Contacto = c.T_FICHAS.CONTACTO,
                                             Cuil = c.T_FICHAS.CUIL,
                                             DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                             TieneDeficienciaMental =
                                                 c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                             TieneDeficienciaMotora =
                                                 c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                             TieneDeficienciaPsicologia =
                                                 c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                             TieneDeficienciaSensorial =
                                                 c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                             Dpto = c.T_FICHAS.DPTO ?? "0",
                                             EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                             EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                             EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                             FechaNacimiento = c.T_FICHAS.FER_NAC,
                                             Mail = c.T_FICHAS.MAIL,
                                             Manzana = c.T_FICHAS.MANZANA ?? "0",
                                             Monoblock = c.T_FICHAS.MONOBLOCK ?? "0",
                                             Nombre = c.T_FICHAS.NOMBRE,
                                             Numero = c.T_FICHAS.NUMERO,
                                             NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                             Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                             Piso = c.T_FICHAS.PISO ?? "0",
                                             Sexo = c.T_FICHAS.SEXO,
                                             TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                             TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                             TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                             TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                             TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                             IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                             NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                             FechaSistema = c.FEC_SIST,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,

                                             // Fichas Universitarias
                                             PromedioUniversitaria = fiUniv.PROMEDIO,
                                             OtraCarreraUniversitaria = fiUniv.OTRA_CARRERA,
                                             OtraInstitucionUniversitaria = fiUniv.OTRA_INSTITUCION,
                                             IdCarreraUniversitaria = fiUniv.ID_CARRERA,
                                             IdEscuelaUniversitaria = fiUniv.ID_ESCUELA,
                                             OtroSectorUniversitaria = fiUniv.OTRO_SECTOR,

                                             //Fichas Terciarias

                                             PromedioTerciaria = fiterc.PROMEDIO,
                                             OtraCarreraTerciaria = fiterc.OTRA_CARRERA,
                                             OtraInstitucionTerciaria = fiterc.OTRA_INSTITUCION,
                                             IdCarreraTerciaria = fiterc.ID_CARRERA ?? 0,
                                             IdEscuelaTerciaria = fiterc.ID_ESCUELA ?? 0,
                                             NombreEscuela = fiterc.T_ESCUELAS.N_ESCUELA,
                                             OtroSectorTerciaria = fiterc.OTRO_SECTOR,
                                             EscuelaFicha =
                                                 new Escuela
                                                     {
                                                         Anexo = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.ANEXO : fiUniv.T_ESCUELAS.ANEXO),
                                                         Barrio = fiterc.T_ESCUELAS.BARRIO,
                                                         Cue = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.CUE : fiUniv.T_ESCUELAS.CUE),
                                                         Id_Escuela = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.ID_ESCUELA ?? 0 : fiUniv.ID_ESCUELA ?? 0),
                                                         Nombre_Escuela = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.N_ESCUELA : fiUniv.T_ESCUELAS.N_ESCUELA),
                                                         LocalidadEscuela =
                                                             new Localidad
                                                                 {
                                                                     IdLocalidad = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.ID_LOCALIDAD ?? 0 : fiUniv.T_ESCUELAS.ID_LOCALIDAD ?? 0),
                                                                     NombreLocalidad = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD : fiUniv.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD),
                                                                     Departamento =
                                                                         new Departamento
                                                                             {
                                                                                 IdDepartamento = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0 : fiUniv.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0),
                                                                                 NombreDepartamento = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO : fiUniv.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO)
                                                                             }
                                                                 }
                                                     },

                                             CarreraFicha =
                                                 new Carrera
                                                     {
                                                         IdCarrera = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.ID_CARRERA ?? 0 : fiUniv.ID_CARRERA ?? 0),
                                                         NombreCarrera = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.N_CARRERA : fiUniv.T_CARRERAS.N_CARRERA),
                                                         SectorCarrera =
                                                             new Sector
                                                                 {
                                                                     IdSector = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.ID_SECTOR ?? 0 : fiUniv.T_CARRERAS.ID_SECTOR ?? 0),
                                                                     NombreSector = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR : fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR)
                                                                 },
                                                         NivelCarrera =
                                                             new Nivel
                                                                 {
                                                                     IdNivel = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.ID_NIVEL ?? 0 : fiUniv.T_CARRERAS.ID_NIVEL ?? 0),
                                                                     NombreNivel = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.T_NIVEL.N_NIVEL : fiUniv.T_CARRERAS.T_NIVEL.N_NIVEL)
                                                                 },
                                                         InstitucionCarrera =
                                                             new Institucion
                                                                 {
                                                                     IdInstitucion = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.ID_INSTITUCION ?? 0 : fiUniv.T_CARRERAS.ID_INSTITUCION ?? 0),
                                                                     NombreInstitucion = (idprograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION : fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION)
                                                                 }
                                                     },

                                             //------------
                                             FichaPpp =
                                                 new FichaPPP
                                                     {
                                                         AltaTemprana = fichappp.ALTA_TEMPRANA == null ? "N" : "S",
                                                         Finalizado = (fichappp.FINALIZADO == "S" ? true : false),
                                                         Cursando = (fichappp.CURSANDO == "S" ? true : false),
                                                         IdEmpresa = fichappp.ID_EMPRESA ?? 0,
                                                         DeseaTermNivel =
                                                             (fichappp.DESEA_TERM_NIVEL == "S" ? true : false),
                                                         IdNivelEscolaridad = fichappp.ID_NIVEL_ESCOLARIDAD,
                                                         Modalidad = fichappp.MODALIDAD,
                                                         IdSede = fichappp.ID_SEDE,
                                                         Tareas = fichappp.TAREAS,
                                                         FechaInicioActividad = fichappp.AT_FECHA_INICIO,
                                                         FechaFinActividad = fichappp.AT_FECHA_CESE,
                                                         IdModalidadAfip = fichappp.ID_MOD_CONT_AFIP,
                                                         ModalidadAfip = fichappp.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                         Empresa =
                                                             new Empresa
                                                                 {
                                                                     Calle = fichappp.T_EMPRESAS.CALLE,
                                                                     CantidadEmpleados =
                                                                         fichappp.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                     CodigoActividad =
                                                                         fichappp.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                     CodigoPostal = fichappp.T_EMPRESAS.CODIGO_POSTAL,
                                                                     Cuit = fichappp.T_EMPRESAS.CUIT,
                                                                     DomicilioLaboralIdem =
                                                                         fichappp.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                     IdEmpresa = fichappp.ID_EMPRESA ?? 0,
                                                                     NombreEmpresa = fichappp.T_EMPRESAS.N_EMPRESA,
                                                                     Numero = fichappp.T_EMPRESAS.NUMERO,
                                                                     Piso = fichappp.T_EMPRESAS.PISO,
                                                                     Telefono = fichappp.T_EMPRESAS.PISO,
                                                                     LocalidadEmpresa =
                                                                         new Localidad
                                                                             {
                                                                                 IdLocalidad =
                                                                                     fichappp.T_EMPRESAS.ID_LOCALIDAD ??
                                                                                     0,
                                                                                 NombreLocalidad =
                                                                                     fichappp.T_EMPRESAS.T_LOCALIDADES.
                                                                                     N_LOCALIDAD,
                                                                                 Departamento =
                                                                                     new Departamento
                                                                                         {
                                                                                             IdDepartamento =
                                                                                                 fichappp.T_EMPRESAS.
                                                                                                     T_LOCALIDADES.
                                                                                                     ID_DEPARTAMENTO ??
                                                                                                 0,
                                                                                             NombreDepartamento =
                                                                                                 fichappp.T_EMPRESAS.
                                                                                                 T_LOCALIDADES.
                                                                                                 T_DEPARTAMENTOS.
                                                                                                 N_DEPARTAMENTO
                                                                                         }
                                                                             },
                                                                     Usuario =
                                                                         new UsuarioEmpresa
                                                                             {
                                                                                 ApellidoUsuario =
                                                                                     fichappp.T_EMPRESAS.
                                                                                     T_USUARIOS_EMPRESA.APELLIDO,
                                                                                 Cuil =
                                                                                     fichappp.T_EMPRESAS.
                                                                                     T_USUARIOS_EMPRESA.CUIL,
                                                                                 IdUsuarioEmpresa =
                                                                                     fichappp.T_EMPRESAS.ID_USUARIO ?? 0
                                                                                 ,
                                                                                 Mail =
                                                                                     fichappp.T_EMPRESAS.
                                                                                     T_USUARIOS_EMPRESA.MAIL,
                                                                                 NombreUsuario =
                                                                                     fichappp.T_EMPRESAS.
                                                                                     T_USUARIOS_EMPRESA.NOMBRE
                                                                             }
                                                                 }
                                                     },
                                             LocalidadFicha =
                                                 new Localidad
                                                     {
                                                         IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                         NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                         Departamento =
                                                             new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                         N_DEPARTAMENTO
                                                                 }
                                                     }
                                         }
                             });

            return a;
        }

        /// <summary>
        /// 01/07/2013 - DI CAMPLI LEANDRO - QBENEFICIARIO COMPLETO CON TODOS LOS FILTROS
        /// </summary>
        /// <param name="nombre"></param>
        /// <param name="apellido"></param>
        /// <param name="cuil"></param>
        /// <param name="numeroDocumento"></param>
        /// <param name="idPrograma"></param>
        /// <param name="conApoderados"></param>
        /// <param name="modalidad"></param>
        /// <param name="discapacitado"></param>
        /// <param name="altaTemprana"></param>
        /// <param name="idEstado"></param>
        /// <param name="apellidonombreapoderado"></param>
        /// <param name="idEtapa"></param>
        /// <returns></returns>
        private IQueryable<IBeneficiario> QBeneficiarioCompleto(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa)
        {
            #region ppp
            //var a = (from c in _mdb.T_BENEFICIARIOS
            //         join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
            //         from fiterc in
            //             _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
            //         from fiUniv in
            //             _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
            //         from cu in
            //             _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
            //         from suc in
            //             _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
            //         from mon in
            //             _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
            //         from iva in
            //             _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
            //         from nac in
            //             _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
            //         from fichappp in
            //             _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
            //         from ap in
            //             _mdb.T_APODERADOS.Where(
            //                 ap =>
            //                 ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
            //                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
            //         from sucapo in
            //             _mdb.T_TABLAS_BCO_CBA.Where(
            //                 sucapo =>
            //                 sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == 1).
            //             DefaultIfEmpty()
            //         from emp in
            //             _mdb.T_EMPRESAS.Where(emp => emp.ID_EMPRESA == fichappp.ID_EMPRESA).DefaultIfEmpty()

            //         where c.ID_PROGRAMA == idPrograma && fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario

            //                && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
            //                ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
            //                ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
            //                (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
            //                (modalidad != "T" ? (fichappp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
            //                (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
            //                (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
            //                (altaTemprana != "T" ? fichappp.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
            //                (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
            //                && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

            //         select
            //             new Beneficiario
            //             {
            //                 IdBeneficiario = c.ID_BENEFICIARIO,
            //                 IdEstado = c.ID_ESTADO ?? 0,
            //                 FechaSistema = c.FEC_SIST,
            //                 IdFicha = c.ID_FICHA ?? 0,
            //                 IdPrograma = c.ID_PROGRAMA ?? 0,
            //                 IdUsuarioSistema = c.ID_USR_SIST,
            //                 IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
            //                 NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
            //                 CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
            //                 CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
            //                 CondicionIva = iva.COD_BCO_CBA ?? "0",
            //                 Nacionalidad = c.NACIONALIDAD ?? 0,
            //                 Residente = c.RESIDENTE,
            //                 TipoPersona = c.TIPO_PERSONA,
            //                 CodigoMoneda = mon.COD_BCO_CBA ?? "0",
            //                 CodigoSucursal = suc.COD_BCO_CBA ?? "0",
            //                 NombreEstado = c.T_ESTADOS.N_ESTADO,
            //                 Cbu = cu.CBU ?? "",
            //                 ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
            //                 NumeroCuenta = cu.NRO_CTA ?? 0,
            //                 Programa = c.T_PROGRAMAS.N_PROGRAMA,
            //                 MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
            //                 TieneApoderado = c.TIENE_APODERADO,
            //                 FechaNotificacion = c.FEC_NOTIF,
            //                 Notificado = c.NOTIFICADO == "S" ? true : false,
            //                 Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
            //                 FechaSolicitudCuenta = cu.FEC_SOL_CTA,
            //                 IdSucursal = cu.ID_SUCURSAL ?? 0,
            //                 UsuarioSistema = c.T_USUARIOS.LOGIN,
            //                 FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
            //                 FechaBajaBeneficio = c.FEC_BAJA,
            //                 Apoderado =
            //                     new Apoderado
            //                     {
            //                         IdApoderadoNullable = ap.ID_APODERADO,
            //                         Nombre = ap.NOMBRE ?? " ",
            //                         Apellido = ap.APELLIDO ?? " ",
            //                         Barrio = ap.BARRIO,
            //                         Calle = ap.CALLE,
            //                         Cbu = ap.CBU,
            //                         CodigoPostal = ap.CODIGO_POSTAL,
            //                         Cuil = ap.CUIL,
            //                         Dpto = ap.DPTO,
            //                         EntreCalles = ap.ENTRECALLES,
            //                         FechaNacimiento = ap.FER_NAC ?? DateTime.Now,
            //                         FechaSolicitudCuenta = ap.FEC_SOL_CTA,
            //                         IdEstadoApoderado = ap.ID_ESTADO_APODERADO ?? 0,
            //                         IdSistema = ap.ID_SISTEMA ?? 0,
            //                         IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
            //                         Mail = ap.MAIL,
            //                         Numero = ap.NUMERO,
            //                         LocalidadApoderado =
            //                             new Localidad
            //                             {
            //                                 IdLocalidad = ap.ID_LOCALIDAD ?? 0,
            //                                 NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
            //                                 Departamento =
            //                                     new Departamento
            //                                     {
            //                                         IdDepartamento =
            //                                             ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
            //                                         NombreDepartamento =
            //                                             ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
            //                                     }
            //                             },

            //                         Manzana = ap.MANZANA,
            //                         Monoblock = ap.MONOBLOCK,
            //                         NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
            //                         NumeroCuentaBco = ap.NRO_CUENTA_BCO ?? 0,
            //                         NumeroDocumento = ap.NRO_DOCUMENTO ?? " ",
            //                         Parcela = ap.PARCELA,
            //                         Piso = ap.PISO,
            //                         Sexo = ap.SEXO,
            //                         TelefonoCelular = ap.TEL_CELULAR,
            //                         TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
            //                         TelefonoFijo = ap.TEL_FIJO,
            //                         UsuarioBanco = ap.USUARIO_BANCO,
            //                         SucursalApoderado =
            //                             new Sucursal
            //                             {
            //                                 CodigoBanco = sucapo.COD_BCO_CBA,
            //                                 IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
            //                                 Detalle = sucapo.DESCRIPCION
            //                             }

            //                     },
            //                 Ficha =
            //                     new Ficha
            //                     {

            //                         Apellido = c.T_FICHAS.APELLIDO,
            //                         Barrio = c.T_FICHAS.BARRIO,
            //                         Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
            //                         IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
            //                         IdFicha = c.T_FICHAS.ID_FICHA,
            //                         Calle = c.T_FICHAS.CALLE,
            //                         CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
            //                         CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
            //                         CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
            //                         Contacto = c.T_FICHAS.CONTACTO,
            //                         Cuil = c.T_FICHAS.CUIL,
            //                         DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
            //                         TieneDeficienciaMental =
            //                             c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
            //                         TieneDeficienciaMotora =
            //                             c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
            //                         TieneDeficienciaPsicologia =
            //                             c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
            //                         TieneDeficienciaSensorial =
            //                             c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
            //                         Dpto = c.T_FICHAS.DPTO ?? "0",
            //                         EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
            //                         EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
            //                         EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
            //                         FechaNacimiento = c.T_FICHAS.FER_NAC,
            //                         Mail = c.T_FICHAS.MAIL,
            //                         Manzana = c.T_FICHAS.MANZANA ?? "0",
            //                         Monoblock = c.T_FICHAS.MONOBLOCK ?? "0",
            //                         Nombre = c.T_FICHAS.NOMBRE,
            //                         Numero = c.T_FICHAS.NUMERO,
            //                         NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
            //                         Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
            //                         Piso = c.T_FICHAS.PISO ?? "0",
            //                         Sexo = c.T_FICHAS.SEXO,
            //                         TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
            //                         TelefonoFijo = c.T_FICHAS.TEL_FIJO,
            //                         TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
            //                         TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
            //                         TipoFicha = c.T_FICHAS.TIPO_FICHA,
            //                         IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
            //                         NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
            //                         FechaSistema = c.FEC_SIST,
            //                         IdUsuarioSistema = c.ID_USR_SIST,
            //                         UsuarioSistema = c.T_USUARIOS.LOGIN,

            //                         // Fichas Universitarias
            //                         PromedioUniversitaria = fiUniv.PROMEDIO,
            //                         OtraCarreraUniversitaria = fiUniv.OTRA_CARRERA,
            //                         OtraInstitucionUniversitaria = fiUniv.OTRA_INSTITUCION,
            //                         IdCarreraUniversitaria = fiUniv.ID_CARRERA,
            //                         IdEscuelaUniversitaria = fiUniv.ID_ESCUELA,
            //                         OtroSectorUniversitaria = fiUniv.OTRO_SECTOR,

            //                         //Fichas Terciarias

            //                         PromedioTerciaria = fiterc.PROMEDIO,
            //                         OtraCarreraTerciaria = fiterc.OTRA_CARRERA,
            //                         OtraInstitucionTerciaria = fiterc.OTRA_INSTITUCION,
            //                         IdCarreraTerciaria = fiterc.ID_CARRERA ?? 0,
            //                         IdEscuelaTerciaria = fiterc.ID_ESCUELA ?? 0,
            //                         NombreEscuela = fiterc.T_ESCUELAS.N_ESCUELA,
            //                         OtroSectorTerciaria = fiterc.OTRO_SECTOR,
            //                         EscuelaFicha =
            //                             new Escuela
            //                             {
            //                                 Anexo = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.ANEXO : fiUniv.T_ESCUELAS.ANEXO),
            //                                 Barrio = fiterc.T_ESCUELAS.BARRIO,
            //                                 Cue = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.CUE : fiUniv.T_ESCUELAS.CUE),
            //                                 Id_Escuela = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.ID_ESCUELA ?? 0 : fiUniv.ID_ESCUELA ?? 0),
            //                                 Nombre_Escuela = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.N_ESCUELA : fiUniv.T_ESCUELAS.N_ESCUELA),
            //                                 LocalidadEscuela =
            //                                     new Localidad
            //                                     {
            //                                         IdLocalidad = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.ID_LOCALIDAD ?? 0 : fiUniv.T_ESCUELAS.ID_LOCALIDAD ?? 0),
            //                                         NombreLocalidad = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD : fiUniv.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD),
            //                                         Departamento =
            //                                             new Departamento
            //                                             {
            //                                                 IdDepartamento = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0 : fiUniv.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0),
            //                                                 NombreDepartamento = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO : fiUniv.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO)
            //                                             }
            //                                     }
            //                             },

            //                         CarreraFicha =
            //                             new Carrera
            //                             {
            //                                 IdCarrera = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.ID_CARRERA ?? 0 : fiUniv.ID_CARRERA ?? 0),
            //                                 NombreCarrera = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.N_CARRERA : fiUniv.T_CARRERAS.N_CARRERA),
            //                                 SectorCarrera =
            //                                     new Sector
            //                                     {
            //                                         IdSector = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.ID_SECTOR ?? 0 : fiUniv.T_CARRERAS.ID_SECTOR ?? 0),
            //                                         NombreSector = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR : fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR)
            //                                     },
            //                                 NivelCarrera =
            //                                     new Nivel
            //                                     {
            //                                         IdNivel = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.ID_NIVEL ?? 0 : fiUniv.T_CARRERAS.ID_NIVEL ?? 0),
            //                                         NombreNivel = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.T_NIVEL.N_NIVEL : fiUniv.T_CARRERAS.T_NIVEL.N_NIVEL)
            //                                     },
            //                                 InstitucionCarrera =
            //                                     new Institucion
            //                                     {
            //                                         IdInstitucion = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.ID_INSTITUCION ?? 0 : fiUniv.T_CARRERAS.ID_INSTITUCION ?? 0),
            //                                         NombreInstitucion = (idPrograma == (int)Enums.TipoFicha.Terciaria ? fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION : fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION)
            //                                     }
            //                             },

            //                         //------------
            //                         FichaPpp =
            //                             new FichaPPP
            //                             {
            //                                 AltaTemprana = fichappp.ALTA_TEMPRANA == null ? "N" : "S",
            //                                 Finalizado = (fichappp.FINALIZADO == "S" ? true : false),
            //                                 Cursando = (fichappp.CURSANDO == "S" ? true : false),
            //                                 IdEmpresa = fichappp.ID_EMPRESA ?? 0,
            //                                 DeseaTermNivel =
            //                                     (fichappp.DESEA_TERM_NIVEL == "S" ? true : false),
            //                                 IdNivelEscolaridad = fichappp.ID_NIVEL_ESCOLARIDAD,
            //                                 Modalidad = fichappp.MODALIDAD,
            //                                 IdSede = fichappp.ID_SEDE,
            //                                 Tareas = fichappp.TAREAS,
            //                                 FechaInicioActividad = fichappp.AT_FECHA_INICIO,
            //                                 FechaFinActividad = fichappp.AT_FECHA_CESE,
            //                                 IdModalidadAfip = fichappp.ID_MOD_CONT_AFIP,
            //                                 ModalidadAfip = fichappp.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
            //                                 Empresa =
            //                                     new Empresa
            //                                     {
            //                                         Calle = emp.CALLE,//fichappp.T_EMPRESAS.CALLE,
            //                                         CantidadEmpleados = emp.CANTIDAD_EMPLEADOS, //fichappp.T_EMPRESAS.CANTIDAD_EMPLEADOS,
            //                                         CodigoActividad = emp.CODIGO_ACTIVIDAD,//fichappp.T_EMPRESAS.CODIGO_ACTIVIDAD,
            //                                         CodigoPostal = emp.CODIGO_POSTAL,//fichappp.T_EMPRESAS.CODIGO_POSTAL,
            //                                         Cuit = emp.CUIT,//fichappp.T_EMPRESAS.CUIT,
            //                                         DomicilioLaboralIdem = emp.DOMICLIO_LABORAL_IDEM,//fichappp.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
            //                                         IdEmpresa = emp.ID_EMPRESA == null ? 0 : emp.ID_EMPRESA,//fichappp.ID_EMPRESA ?? 0,
            //                                         NombreEmpresa = emp.N_EMPRESA,//fichappp.T_EMPRESAS.N_EMPRESA,
            //                                         Numero = emp.NUMERO,//fichappp.T_EMPRESAS.NUMERO,
            //                                         Piso = emp.PISO,//fichappp.T_EMPRESAS.PISO,
            //                                         Telefono = emp.TELEFONO,//fichappp.T_EMPRESAS.PISO,
            //                                         LocalidadEmpresa =
            //                                             new Localidad
            //                                             {
            //                                                 IdLocalidad =
            //                                                     /*fichappp.T_EMPRESAS*/emp.ID_LOCALIDAD ??
            //                                                     0,
            //                                                 NombreLocalidad =
            //                                                     /*fichappp.T_EMPRESAS*/emp.T_LOCALIDADES.
            //                                                     N_LOCALIDAD,
            //                                                 Departamento =
            //                                                     new Departamento
            //                                                     {
            //                                                         IdDepartamento =
            //                                                             /*fichappp.T_EMPRESAS*/emp.
            //                                                                 T_LOCALIDADES.
            //                                                                 ID_DEPARTAMENTO ??
            //                                                             0,
            //                                                         NombreDepartamento =
            //                                                             /*fichappp.T_EMPRESAS*/emp.
            //                                                             T_LOCALIDADES.
            //                                                             T_DEPARTAMENTOS.
            //                                                             N_DEPARTAMENTO
            //                                                     }
            //                                             },
            //                                         Usuario =
            //                                             new UsuarioEmpresa
            //                                             {
            //                                                 ApellidoUsuario =
            //                                                     /*fichappp.T_EMPRESAS*/emp.
            //                                                     T_USUARIOS_EMPRESA.APELLIDO,
            //                                                 Cuil =
            //                                                     /*fichappp.T_EMPRESAS*/emp.
            //                                                     T_USUARIOS_EMPRESA.CUIL,
            //                                                 IdUsuarioEmpresa =
            //                                                     /*fichappp.T_EMPRESAS*/emp.ID_USUARIO ?? 0
            //                                                 ,
            //                                                 Mail =
            //                                                     /*fichappp.T_EMPRESAS*/emp.
            //                                                     T_USUARIOS_EMPRESA.MAIL,
            //                                                 NombreUsuario =
            //                                                     /*fichappp.T_EMPRESAS*/emp.
            //                                                     T_USUARIOS_EMPRESA.NOMBRE
            //                                             }
            //                                     }
            //                             },
            //                         LocalidadFicha =
            //                             new Localidad
            //                             {
            //                                 IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
            //                                 NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
            //                                 Departamento =
            //                                     new Departamento
            //                                     {
            //                                         IdDepartamento =
            //                                             c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
            //                                         NombreDepartamento =
            //                                             c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
            //                                             N_DEPARTAMENTO
            //                                     }
            //                             }
            //                     }
            //             });


            //return a;

            #endregion


            switch (idPrograma)
            {
                case (int)Enums.Programas.Terciaria:

                    #region terciarios

                    var fichaterc = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     from fiterc in
                                         _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     //from fiUniv in
                                     //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma && fic.ID_FICHA == idPrograma &&
                                        fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                         //&&  beneficiarios.Contains(c.ID_BENEFICIARIO)
                                         && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                        ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                        ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                        (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                        (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                        (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                        (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                        && (fic.ID_ETAPA == idEtapa || idEtapa == 0)


                                     select

                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {

                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,

                                                     //Fichas Terciarias
                                                     PromedioTerciaria = fiterc.PROMEDIO,
                                                     OtraCarreraTerciaria = fiterc.OTRA_CARRERA,
                                                     OtraInstitucionTerciaria = fiterc.OTRA_INSTITUCION,
                                                     IdCarreraTerciaria = fiterc.ID_CARRERA,
                                                     IdEscuelaTerciaria = fiterc.ID_ESCUELA,
                                                     IdLocalidadEscTerc = fiterc.T_ESCUELAS.ID_LOCALIDAD,
                                                     NombreEscuela = fiterc.T_ESCUELAS.N_ESCUELA,
                                                     OtroSectorTerciaria = fiterc.OTRO_SECTOR,
                                                     EscuelaFicha =
                                                         new Escuela
                                                         {
                                                             Anexo = fiterc.T_ESCUELAS.ANEXO,
                                                             Barrio = fiterc.T_ESCUELAS.BARRIO,
                                                             Cue = fiterc.T_ESCUELAS.CUE,
                                                             Id_Escuela = fiterc.ID_ESCUELA ?? 0,
                                                             Nombre_Escuela = fiterc.T_ESCUELAS.N_ESCUELA,
                                                             LocalidadEscuela =
                                                                 new Localidad
                                                                 {
                                                                     IdLocalidad = fiterc.T_ESCUELAS.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = fiterc.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                         {
                                                                             IdDepartamento = fiterc.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                             NombreDepartamento = fiterc.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                         }
                                                                 }
                                                         },
                                                     CarreraFicha =
                                                         new Carrera
                                                         {
                                                             IdCarrera = fiterc.ID_CARRERA ?? 0,
                                                             NombreCarrera = fiterc.T_CARRERAS.N_CARRERA,
                                                             IdSector = fiterc.T_CARRERAS.ID_SECTOR,
                                                             SectorCarrera =
                                                                 new Sector
                                                                 {
                                                                     IdSector = fiterc.T_CARRERAS.ID_SECTOR ?? 0,
                                                                     NombreSector = fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR
                                                                 },
                                                             IdNivel = fiterc.T_CARRERAS.ID_NIVEL,
                                                             NivelCarrera =
                                                                 new Nivel
                                                                 {
                                                                     IdNivel = fiterc.T_CARRERAS.ID_NIVEL ?? 0,
                                                                     NombreNivel = fiterc.T_CARRERAS.T_NIVEL.N_NIVEL
                                                                 },
                                                             IdInstitucion = fiterc.T_CARRERAS.ID_INSTITUCION,
                                                             InstitucionCarrera =
                                                                 new Institucion
                                                                 {
                                                                     IdInstitucion = fiterc.T_CARRERAS.ID_INSTITUCION ?? 0,
                                                                     NombreInstitucion = fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return fichaterc;
                    #endregion

                case (int)Enums.Programas.Universitaria:
                    #region univeristarios
                    var fichauniv = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     //from fiterc in
                                     //    _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from fiUniv in
                                         _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()

                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where  c.ID_PROGRAMA == idPrograma && 
                                            fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                            && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                                ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                                ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                                (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                                (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                                     select
                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {
                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,

                                                     // Fichas Universitarias
                                                     PromedioUniversitaria = fiUniv.PROMEDIO,
                                                     OtraCarreraUniversitaria = fiUniv.OTRA_CARRERA,
                                                     OtraInstitucionUniversitaria = fiUniv.OTRA_INSTITUCION,
                                                     IdCarreraUniversitaria = fiUniv.ID_CARRERA,
                                                     IdEscuelaUniversitaria = fiUniv.ID_ESCUELA,
                                                     OtroSectorUniversitaria = fiUniv.OTRO_SECTOR,
                                                     EscuelaFicha =
                                                         new Escuela
                                                         {
                                                             Anexo = fiUniv.T_ESCUELAS.ANEXO,
                                                             Barrio = fiUniv.T_ESCUELAS.BARRIO,
                                                             Cue = fiUniv.T_ESCUELAS.CUE,
                                                             Id_Escuela = fiUniv.ID_ESCUELA ?? 0,
                                                             Nombre_Escuela = fiUniv.T_ESCUELAS.N_ESCUELA,
                                                             Id_Localidad = fiUniv.T_ESCUELAS.ID_LOCALIDAD,
                                                             LocalidadEscuela =
                                                                 new Localidad
                                                                 {
                                                                     IdLocalidad = fiUniv.T_ESCUELAS.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = fiUniv.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                         {
                                                                             IdDepartamento = fiUniv.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                             NombreDepartamento = fiUniv.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                         }
                                                                 }
                                                         },
                                                     CarreraFicha =
                                                         new Carrera
                                                         {
                                                             IdCarrera = fiUniv.ID_CARRERA ?? 0,
                                                             NombreCarrera = fiUniv.T_CARRERAS.N_CARRERA,
                                                             IdSector = fiUniv.T_CARRERAS.ID_SECTOR,
                                                             SectorCarrera =
                                                                 new Sector
                                                                 {
                                                                     IdSector = fiUniv.T_CARRERAS.ID_SECTOR ?? 0,
                                                                     NombreSector = fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR
                                                                 },
                                                             IdNivel = fiUniv.T_CARRERAS.ID_NIVEL,
                                                             NivelCarrera =
                                                                 new Nivel
                                                                 {
                                                                     IdNivel = fiUniv.T_CARRERAS.ID_NIVEL ?? 0,
                                                                     NombreNivel = fiUniv.T_CARRERAS.T_NIVEL.N_NIVEL
                                                                 },
                                                             IdInstitucion = fiUniv.T_CARRERAS.ID_INSTITUCION,
                                                             InstitucionCarrera =
                                                                 new Institucion
                                                                 {
                                                                     IdInstitucion = fiUniv.T_CARRERAS.ID_INSTITUCION ?? 0,
                                                                     NombreInstitucion = fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return fichauniv;
                    #endregion
                case (int)Enums.Programas.Ppp:
                    #region Planpp
                    var ppp = (from c in _mdb.T_BENEFICIARIOS
                               join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                               from fiterc in
                                   _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from fiUniv in
                                   _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from fichappp in
                                   _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                               from ap in
                                   _mdb.T_APODERADOS.Where(
                                   ap =>
                                   ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                               from sucapo in
                                   _mdb.T_TABLAS_BCO_CBA.Where(
                                       sucapo =>
                                       sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                   DefaultIfEmpty()
                               //from emp in
                               //    _mdb.T_EMPRESAS.Where(emp => emp.ID_EMPRESA == fichappp.ID_EMPRESA).DefaultIfEmpty()

                               where c.ID_PROGRAMA == idPrograma && fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                   //&& beneficiarios.Contains(c.ID_BENEFICIARIO)
                                     && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                    ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                    ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                    (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                    (modalidad != "T" ? (fichappp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                    (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                    (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                    (altaTemprana != "T" ? fichappp.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                    (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                    && (fic.ID_ETAPA == idEtapa || idEtapa == 0)


                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA,
                                       Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                       MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       Notificado = c.NOTIFICADO == "S" ? true : false,
                                       Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                       SucursalDescripcion = suc.DESCRIPCION,
                                       FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                       IdSucursal = cu.ID_SUCURSAL,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       Apoderado =
                                           new Apoderado
                                           {
                                               IdApoderadoNullable = ap.ID_APODERADO,
                                               Nombre = ap.NOMBRE,
                                               Apellido = ap.APELLIDO,
                                               Barrio = ap.BARRIO,
                                               Calle = ap.CALLE,
                                               Cbu = ap.CBU,
                                               CodigoPostal = ap.CODIGO_POSTAL,
                                               Cuil = ap.CUIL,
                                               Dpto = ap.DPTO,
                                               EntreCalles = ap.ENTRECALLES,
                                               FechaNacimiento = ap.FER_NAC,
                                               FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                               IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                               IdSistema = ap.ID_SISTEMA ?? 0,
                                               IdSucursal = ap.ID_SUCURSAL_BCO,
                                               Mail = ap.MAIL,
                                               Numero = ap.NUMERO,
                                               IdLocalidad = ap.ID_LOCALIDAD,
                                               LocalidadApoderado =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   },
                                               Manzana = ap.MANZANA,
                                               Monoblock = ap.MONOBLOCK,
                                               NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                               NumeroDocumento = ap.NRO_DOCUMENTO,
                                               Parcela = ap.PARCELA,
                                               Piso = ap.PISO,
                                               Sexo = ap.SEXO,
                                               TelefonoCelular = ap.TEL_CELULAR,
                                               TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                               TelefonoFijo = ap.TEL_FIJO,
                                               UsuarioBanco = ap.USUARIO_BANCO,
                                               SucursalApoderado =
                                                   new Sucursal
                                                   {
                                                       CodigoBanco = sucapo.COD_BCO_CBA,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                       Detalle = sucapo.DESCRIPCION
                                                   }
                                           },
                                       Ficha =
                                           new Ficha
                                           {

                                               Apellido = c.T_FICHAS.APELLIDO,
                                               Barrio = c.T_FICHAS.BARRIO,
                                               Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                               IdFicha = c.T_FICHAS.ID_FICHA,
                                               Calle = c.T_FICHAS.CALLE,
                                               CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                               CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                               CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = c.T_FICHAS.DPTO ?? " ",
                                               EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                               EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                               FechaNacimiento = c.T_FICHAS.FER_NAC,
                                               Mail = c.T_FICHAS.MAIL,
                                               Manzana = c.T_FICHAS.MANZANA ?? " ",
                                               Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                               Nombre = c.T_FICHAS.NOMBRE,
                                               Numero = c.T_FICHAS.NUMERO,
                                               NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                               Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                               Piso = c.T_FICHAS.PISO ?? " ",
                                               Sexo = c.T_FICHAS.SEXO,
                                               TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                               TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                               TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                               TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                               IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                               NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               FichaPpp =
                                                   new FichaPPP
                                                   {
                                                       AltaTemprana = fichappp.ALTA_TEMPRANA == null ? "N" : "S",
                                                       FechaInicioActividad = fichappp.AT_FECHA_INICIO,
                                                       FechaFinActividad = fichappp.AT_FECHA_CESE,
                                                       IdModalidadAfip = fichappp.ID_MOD_CONT_AFIP,
                                                       ModalidadAfip = fichappp.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                       Finalizado = (fichappp.FINALIZADO == "S" ? true : false),
                                                       Cursando = (fichappp.CURSANDO == "S" ? true : false),
                                                       IdEmpresa = fichappp.ID_EMPRESA,
                                                       DeseaTermNivel = (fichappp.DESEA_TERM_NIVEL == "S" ? true : false),
                                                       IdNivelEscolaridad = fichappp.ID_NIVEL_ESCOLARIDAD,
                                                       Modalidad = fichappp.MODALIDAD,
                                                       IdSede = fichappp.ID_SEDE,
                                                       Tareas = fichappp.TAREAS,
                                                       Empresa =
                                                           new Empresa
                                                           {
                                                               Calle = fichappp.T_EMPRESAS.CALLE,
                                                               CantidadEmpleados = fichappp.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                               CodigoActividad = fichappp.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                               CodigoPostal = fichappp.T_EMPRESAS.CODIGO_POSTAL,
                                                               Cuit = fichappp.T_EMPRESAS.CUIT,
                                                               DomicilioLaboralIdem = fichappp.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                               IdEmpresa = fichappp.ID_EMPRESA ?? 0,
                                                               NombreEmpresa = fichappp.T_EMPRESAS.N_EMPRESA,
                                                               Numero = fichappp.T_EMPRESAS.NUMERO,
                                                               Piso = fichappp.T_EMPRESAS.PISO,
                                                               Telefono = fichappp.T_EMPRESAS.PISO,
                                                               IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD,
                                                               LocalidadEmpresa =
                                                                   new Localidad
                                                                   {
                                                                       IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                       NombreLocalidad = fichappp.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                       Departamento =
                                                                           new Departamento
                                                                           {
                                                                               IdDepartamento =
                                                                                   fichappp.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                               NombreDepartamento =
                                                                                   fichappp.T_EMPRESAS.
                                                                                   T_LOCALIDADES.
                                                                                   T_DEPARTAMENTOS.
                                                                                   N_DEPARTAMENTO
                                                                           }
                                                                   },
                                                               Usuario =
                                                                   new UsuarioEmpresa
                                                                   {
                                                                       ApellidoUsuario = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.APELLIDO,
                                                                       Cuil = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.CUIL,
                                                                       IdUsuarioEmpresa = fichappp.T_EMPRESAS.ID_USUARIO,
                                                                       Mail = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.MAIL,
                                                                       NombreUsuario = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.NOMBRE
                                                                   }
                                                           }
                                                   },
                                               LocalidadFicha =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                   N_DEPARTAMENTO
                                                           }
                                                   }
                                           }
                                   });
                    return ppp;
                    #endregion
                case (int)Enums.Programas.PppProf:
                    #region Ppprof
                    var pppProf = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                                   join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                   //from fiterc in
                                   //    _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                   //from fiUniv in
                                   //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                   from cu in
                                       _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                   from suc in
                                       _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                   from mon in
                                       _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                   from iva in
                                       _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                   from nac in
                                       _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                   from fichapppProf in
                                       _mdb.T_FICHA_PPP_PROF.Where(fichapppProf => fichapppProf.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                                   from ap in
                                       _mdb.T_APODERADOS.Where(
                                       ap =>
                                       ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                                   from sucapo in
                                       _mdb.T_TABLAS_BCO_CBA.Where(
                                           sucapo =>
                                           sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                       DefaultIfEmpty()
                                   where c.ID_PROGRAMA == idPrograma && fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                       //&& beneficiarios.Contains(c.ID_BENEFICIARIO)
                                   && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                        ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                        ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                        (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                        (modalidad != "T" ? (fichapppProf.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                        (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                        (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                        (altaTemprana != "T" ? fichapppProf.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                        (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                        && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                                   select
                                       new Beneficiario
                                       {
                                           IdBeneficiario = c.ID_BENEFICIARIO,
                                           IdEstado = c.ID_ESTADO ?? 0,
                                           FechaSistema = c.FEC_SIST,
                                           IdFicha = c.ID_FICHA ?? 0,
                                           IdPrograma = c.ID_PROGRAMA ?? 0,
                                           IdUsuarioSistema = c.ID_USR_SIST,
                                           IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                           NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                           CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                           CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                           CondicionIva = iva.COD_BCO_CBA ?? "0",
                                           Nacionalidad = c.NACIONALIDAD ?? 0,
                                           Residente = c.RESIDENTE,
                                           TipoPersona = c.TIPO_PERSONA,
                                           CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                           CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                           NombreEstado = c.T_ESTADOS.N_ESTADO,
                                           Cbu = cu.CBU ?? "",
                                           ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                           NumeroCuenta = cu.NRO_CTA,
                                           Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                           MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                           TieneApoderado = c.TIENE_APODERADO,
                                           FechaNotificacion = c.FEC_NOTIF,
                                           Notificado = c.NOTIFICADO == "S" ? true : false,
                                           Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                           SucursalDescripcion = suc.DESCRIPCION,
                                           FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                           IdSucursal = cu.ID_SUCURSAL,
                                           UsuarioSistema = c.T_USUARIOS.LOGIN,
                                           FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                           FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                           Apoderado =
                                               new Apoderado
                                               {
                                                   IdApoderadoNullable = ap.ID_APODERADO,
                                                   Nombre = ap.NOMBRE,
                                                   Apellido = ap.APELLIDO,
                                                   Barrio = ap.BARRIO,
                                                   Calle = ap.CALLE,
                                                   Cbu = ap.CBU,
                                                   CodigoPostal = ap.CODIGO_POSTAL,
                                                   Cuil = ap.CUIL,
                                                   Dpto = ap.DPTO,
                                                   EntreCalles = ap.ENTRECALLES,
                                                   FechaNacimiento = ap.FER_NAC,
                                                   FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                   IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                   IdSistema = ap.ID_SISTEMA ?? 0,
                                                   IdSucursal = ap.ID_SUCURSAL_BCO,
                                                   Mail = ap.MAIL,
                                                   Numero = ap.NUMERO,
                                                   IdLocalidad = ap.ID_LOCALIDAD,
                                                   LocalidadApoderado =
                                                       new Localidad
                                                       {
                                                           IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                           NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                           Departamento =
                                                               new Departamento
                                                               {
                                                                   IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                   NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                               }
                                                       },
                                                   Manzana = ap.MANZANA,
                                                   Monoblock = ap.MONOBLOCK,
                                                   NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                   NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                   NumeroDocumento = ap.NRO_DOCUMENTO,
                                                   Parcela = ap.PARCELA,
                                                   Piso = ap.PISO,
                                                   Sexo = ap.SEXO,
                                                   TelefonoCelular = ap.TEL_CELULAR,
                                                   TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                   TelefonoFijo = ap.TEL_FIJO,
                                                   UsuarioBanco = ap.USUARIO_BANCO,
                                                   SucursalApoderado =
                                                       new Sucursal
                                                       {
                                                           CodigoBanco = sucapo.COD_BCO_CBA,
                                                           IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                           Detalle = sucapo.DESCRIPCION
                                                       }
                                               },
                                           Ficha =
                                               new Ficha
                                               {
                                                   Apellido = c.T_FICHAS.APELLIDO,
                                                   Barrio = c.T_FICHAS.BARRIO,
                                                   Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                   IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                   IdFicha = c.T_FICHAS.ID_FICHA,
                                                   Calle = c.T_FICHAS.CALLE,
                                                   CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                   CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                   CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                   Contacto = c.T_FICHAS.CONTACTO,
                                                   Cuil = c.T_FICHAS.CUIL,
                                                   DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                   TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                   TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                   TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                   TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                   Dpto = c.T_FICHAS.DPTO ?? " ",
                                                   EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                   EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                   EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                   FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                   Mail = c.T_FICHAS.MAIL,
                                                   Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                   Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                   Nombre = c.T_FICHAS.NOMBRE,
                                                   Numero = c.T_FICHAS.NUMERO,
                                                   NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                   Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                   Piso = c.T_FICHAS.PISO ?? " ",
                                                   Sexo = c.T_FICHAS.SEXO,
                                                   TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                   TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                   TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                   TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                   TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                   IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                   NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                   FechaSistema = c.FEC_SIST,
                                                   IdUsuarioSistema = c.ID_USR_SIST,
                                                   UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                   FichaPppp =
                                                       new FichaPPPP
                                                       {
                                                           AltaTemprana = fichapppProf.ALTA_TEMPRANA,
                                                           Promedio = fichapppProf.PROMEDIO,
                                                           IdTitulo = fichapppProf.ID_TITULO,
                                                           FechaEgreso = fichapppProf.FECHA_EGRESO,
                                                           IdEmpresa = fichapppProf.ID_EMPRESA,
                                                           Modalidad = fichapppProf.MODALIDAD,
                                                           IdSede = fichapppProf.ID_SEDE,
                                                           Tareas = fichapppProf.TAREAS,
                                                           FechaInicioActividad = fichapppProf.AT_FECHA_INICIO,
                                                           FechaFinActividad = fichapppProf.AT_FECHA_CESE,
                                                           IdModalidadAFIP = fichapppProf.ID_MOD_CONT_AFIP,
                                                           ModalidadAFIP = fichapppProf.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                           Empresa =
                                                               new Empresa
                                                               {
                                                                   Calle = fichapppProf.T_EMPRESAS.CALLE,
                                                                   CantidadEmpleados = fichapppProf.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                   CodigoActividad = fichapppProf.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                   CodigoPostal = fichapppProf.T_EMPRESAS.CODIGO_POSTAL,
                                                                   Cuit = fichapppProf.T_EMPRESAS.CUIT,
                                                                   DomicilioLaboralIdem = fichapppProf.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                   IdEmpresa = fichapppProf.ID_EMPRESA ?? 0,
                                                                   NombreEmpresa = fichapppProf.T_EMPRESAS.N_EMPRESA,
                                                                   Numero = fichapppProf.T_EMPRESAS.NUMERO,
                                                                   Piso = fichapppProf.T_EMPRESAS.PISO,
                                                                   Telefono = fichapppProf.T_EMPRESAS.PISO,
                                                                   IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD,
                                                                   LocalidadEmpresa =
                                                                       new Localidad
                                                                       {
                                                                           IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                           NombreLocalidad = fichapppProf.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                           Departamento =
                                                                               new Departamento
                                                                               {
                                                                                   IdDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                   NombreDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                               }
                                                                       },
                                                                   IdUsuario = fichapppProf.T_EMPRESAS.ID_USUARIO,
                                                                   Usuario =
                                                                       new UsuarioEmpresa
                                                                       {
                                                                           ApellidoUsuario =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.APELLIDO,
                                                                           Cuil =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.CUIL,
                                                                           IdUsuarioEmpresa =
                                                                               fichapppProf.T_EMPRESAS.ID_USUARIO ?? 0,
                                                                           Mail =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.MAIL,
                                                                           NombreUsuario =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.NOMBRE
                                                                       }
                                                               }
                                                       },
                                                   LocalidadFicha =
                                                       new Localidad
                                                       {
                                                           IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                           NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                           Departamento =
                                                               new Departamento
                                                               {
                                                                   IdDepartamento =
                                                                       c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                   NombreDepartamento =
                                                                       c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                       N_DEPARTAMENTO
                                                               }
                                                       }
                                               }
                                       });
                    return pppProf;
                    #endregion
                case (int)Enums.Programas.Vat:
                    #region VAT
                    var vat = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                               join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                               //from fiterc in
                               //    _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               //from fiUniv in
                               //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from fichaVat in
                                   _mdb.T_FICHA_VAT.Where(fichaVat => fichaVat.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                               from ap in
                                   _mdb.T_APODERADOS.Where(
                                   ap =>
                                   ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                               from sucapo in
                                   _mdb.T_TABLAS_BCO_CBA.Where(
                                       sucapo =>
                                       sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                   DefaultIfEmpty()
                               where c.ID_PROGRAMA == idPrograma && fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                   //&& beneficiarios.Contains(c.ID_BENEFICIARIO)
                                    && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                        ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                        ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                        (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                        (modalidad != "T" ? (fichaVat.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                        (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                        (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                        (altaTemprana != "T" ? fichaVat.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                        (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                        && (fic.ID_ETAPA == idEtapa || idEtapa == 0)
                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA,
                                       Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                       MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       Notificado = c.NOTIFICADO == "S" ? true : false,
                                       Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                       SucursalDescripcion = suc.DESCRIPCION,
                                       FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                       IdSucursal = cu.ID_SUCURSAL,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       Apoderado =
                                           new Apoderado
                                           {
                                               IdApoderadoNullable = ap.ID_APODERADO,
                                               Nombre = ap.NOMBRE,
                                               Apellido = ap.APELLIDO,
                                               Barrio = ap.BARRIO,
                                               Calle = ap.CALLE,
                                               Cbu = ap.CBU,
                                               CodigoPostal = ap.CODIGO_POSTAL,
                                               Cuil = ap.CUIL,
                                               Dpto = ap.DPTO,
                                               EntreCalles = ap.ENTRECALLES,
                                               FechaNacimiento = ap.FER_NAC,
                                               FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                               IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                               IdSistema = ap.ID_SISTEMA ?? 0,
                                               IdSucursal = ap.ID_SUCURSAL_BCO,
                                               Mail = ap.MAIL,
                                               Numero = ap.NUMERO,
                                               IdLocalidad = ap.ID_LOCALIDAD,
                                               LocalidadApoderado =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento =
                                                                   ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento =
                                                                   ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   },
                                               Manzana = ap.MANZANA,
                                               Monoblock = ap.MONOBLOCK,
                                               NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                               NumeroDocumento = ap.NRO_DOCUMENTO,
                                               Parcela = ap.PARCELA,
                                               Piso = ap.PISO,
                                               Sexo = ap.SEXO,
                                               TelefonoCelular = ap.TEL_CELULAR,
                                               TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                               TelefonoFijo = ap.TEL_FIJO,
                                               UsuarioBanco = ap.USUARIO_BANCO,
                                               SucursalApoderado =
                                                   new Sucursal
                                                   {
                                                       CodigoBanco = sucapo.COD_BCO_CBA,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                       Detalle = sucapo.DESCRIPCION
                                                   }
                                           },
                                       Ficha =
                                           new Ficha
                                           {
                                               Apellido = c.T_FICHAS.APELLIDO,
                                               Barrio = c.T_FICHAS.BARRIO,
                                               Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                               IdFicha = c.T_FICHAS.ID_FICHA,
                                               Calle = c.T_FICHAS.CALLE,
                                               CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                               CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                               CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = c.T_FICHAS.DPTO ?? " ",
                                               EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                               EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                               FechaNacimiento = c.T_FICHAS.FER_NAC,
                                               Mail = c.T_FICHAS.MAIL,
                                               Manzana = c.T_FICHAS.MANZANA ?? " ",
                                               Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                               Nombre = c.T_FICHAS.NOMBRE,
                                               Numero = c.T_FICHAS.NUMERO,
                                               NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                               Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                               Piso = c.T_FICHAS.PISO ?? " ",
                                               Sexo = c.T_FICHAS.SEXO,
                                               TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                               TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                               TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                               TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                               IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                               NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               FichaVat =
                                                            new FichaVAT
                                                            {
                                                                AltaTemprana = fichaVat.ALTA_TEMPRANA,
                                                                AniosAportes = fichaVat.ANIOS_APORTES,
                                                                Finalizado = (fichaVat.FINALIZADO == "S" ? true : false),
                                                                Cursando = (fichaVat.CURSANDO == "S" ? true : false),
                                                                IdEmpresa = fichaVat.ID_EMPRESA,
                                                                IdNivelEscolaridad = fichaVat.ID_NIVEL_ESCOLARIDAD,
                                                                Modalidad = fichaVat.MODALIDAD,
                                                                IdSede = fichaVat.ID_SEDE,
                                                                Tareas = fichaVat.TAREAS,
                                                                FechaInicioActividad = fichaVat.AT_FECHA_INICIO,
                                                                FechaFinActividad = fichaVat.AT_FECHA_CESE,
                                                                IdModalidadAFIP = fichaVat.ID_MOD_CONT_AFIP,
                                                                ModalidadAFIP = fichaVat.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                                Empresa =
                                                                    new Empresa
                                                                    {
                                                                        Calle = fichaVat.T_EMPRESAS.CALLE,
                                                                        CantidadEmpleados = fichaVat.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                        CodigoActividad = fichaVat.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                        CodigoPostal = fichaVat.T_EMPRESAS.CODIGO_POSTAL,
                                                                        Cuit = fichaVat.T_EMPRESAS.CUIT,
                                                                        DomicilioLaboralIdem = fichaVat.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                        IdEmpresa = fichaVat.ID_EMPRESA ?? 0,
                                                                        NombreEmpresa = fichaVat.T_EMPRESAS.N_EMPRESA,
                                                                        Numero = fichaVat.T_EMPRESAS.NUMERO,
                                                                        Piso = fichaVat.T_EMPRESAS.PISO,
                                                                        Telefono = fichaVat.T_EMPRESAS.PISO,
                                                                        IdLocalidad = fichaVat.T_EMPRESAS.ID_LOCALIDAD,
                                                                        LocalidadEmpresa =
                                                                            new Localidad
                                                                            {
                                                                                IdLocalidad = fichaVat.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                NombreLocalidad = fichaVat.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                Departamento =
                                                                                    new Departamento
                                                                                    {
                                                                                        IdDepartamento =
                                                                                            fichaVat.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ??
                                                                                            0,
                                                                                        NombreDepartamento = fichaVat.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                    }
                                                                            },
                                                                        IdUsuario = fichaVat.T_EMPRESAS.ID_USUARIO,
                                                                        Usuario =
                                                                            new UsuarioEmpresa
                                                                            {
                                                                                ApellidoUsuario = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.APELLIDO,
                                                                                Cuil = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.CUIL,
                                                                                IdUsuarioEmpresa = fichaVat.T_EMPRESAS.ID_USUARIO ?? 0,
                                                                                Mail = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.MAIL,
                                                                                NombreUsuario = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.NOMBRE
                                                                            }
                                                                    }
                                                            },
                                               LocalidadFicha =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   }
                                           }
                                   });
                    return vat;
                    #endregion
                case (int)Enums.Programas.ReconversionProductiva:
                    #region Reconversion
                    var reconversion = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                                        join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                        //from fiterc in
                                        //    _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                        //from fiUniv in
                                        //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                        from cu in
                                            _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                        from suc in
                                            _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                        from mon in
                                            _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                        from iva in
                                            _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                        from nac in
                                            _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                        from ficharecprod in
                                            _mdb.T_FICHA_REC_PROD.Where(ficharecprod => ficharecprod.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                        from ap in
                                            _mdb.T_APODERADOS.Where(
                                            ap =>
                                            ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                                        from sucapo in
                                            _mdb.T_TABLAS_BCO_CBA.Where(
                                                sucapo =>
                                                sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                            DefaultIfEmpty()
                                        where c.ID_PROGRAMA == idPrograma && fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                            //&& beneficiarios.Contains(c.ID_BENEFICIARIO)
                                                && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                                ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                                ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                                (modalidad != "T" ? (ficharecprod.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                                (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                                (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                (altaTemprana != "T" ? ficharecprod.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                                (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                && (fic.ID_ETAPA == idEtapa || idEtapa == 0)
                                        select
                                            new Beneficiario
                                            {
                                                IdBeneficiario = c.ID_BENEFICIARIO,
                                                IdEstado = c.ID_ESTADO ?? 0,
                                                FechaSistema = c.FEC_SIST,
                                                IdFicha = c.ID_FICHA ?? 0,
                                                IdPrograma = c.ID_PROGRAMA ?? 0,
                                                IdUsuarioSistema = c.ID_USR_SIST,
                                                IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                                CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                                CondicionIva = iva.COD_BCO_CBA ?? "0",
                                                Nacionalidad = c.NACIONALIDAD ?? 0,
                                                Residente = c.RESIDENTE,
                                                TipoPersona = c.TIPO_PERSONA,
                                                CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                                CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                                NombreEstado = c.T_ESTADOS.N_ESTADO,
                                                Cbu = cu.CBU ?? "",
                                                ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                NumeroCuenta = cu.NRO_CTA,
                                                Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                                MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                TieneApoderado = c.TIENE_APODERADO,
                                                FechaNotificacion = c.FEC_NOTIF,
                                                Notificado = c.NOTIFICADO == "S" ? true : false,
                                                Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                                SucursalDescripcion = suc.DESCRIPCION,
                                                FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                                IdSucursal = cu.ID_SUCURSAL,
                                                UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                                FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                                Apoderado =
                                                    new Apoderado
                                                    {
                                                        IdApoderadoNullable = ap.ID_APODERADO,
                                                        Nombre = ap.NOMBRE,
                                                        Apellido = ap.APELLIDO,
                                                        Barrio = ap.BARRIO,
                                                        Calle = ap.CALLE,
                                                        Cbu = ap.CBU,
                                                        CodigoPostal = ap.CODIGO_POSTAL,
                                                        Cuil = ap.CUIL,
                                                        Dpto = ap.DPTO,
                                                        EntreCalles = ap.ENTRECALLES,
                                                        FechaNacimiento = ap.FER_NAC,
                                                        FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                        IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                        IdSistema = ap.ID_SISTEMA ?? 0,
                                                        IdSucursal = ap.ID_SUCURSAL_BCO,
                                                        Mail = ap.MAIL,
                                                        Numero = ap.NUMERO,
                                                        IdLocalidad = ap.ID_LOCALIDAD,
                                                        LocalidadApoderado =
                                                            new Localidad
                                                            {
                                                                IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                                NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                                Departamento =
                                                                    new Departamento
                                                                    {
                                                                        IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                        NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                    }
                                                            },
                                                        Manzana = ap.MANZANA,
                                                        Monoblock = ap.MONOBLOCK,
                                                        NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                        NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                        NumeroDocumento = ap.NRO_DOCUMENTO,
                                                        Parcela = ap.PARCELA,
                                                        Piso = ap.PISO,
                                                        Sexo = ap.SEXO,
                                                        TelefonoCelular = ap.TEL_CELULAR,
                                                        TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                        TelefonoFijo = ap.TEL_FIJO,
                                                        UsuarioBanco = ap.USUARIO_BANCO,
                                                        SucursalApoderado =
                                                            new Sucursal
                                                            {
                                                                CodigoBanco = sucapo.COD_BCO_CBA,
                                                                IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                                Detalle = sucapo.DESCRIPCION
                                                            }
                                                    },
                                                Ficha =
                                                    new Ficha
                                                    {

                                                        Apellido = c.T_FICHAS.APELLIDO,
                                                        Barrio = c.T_FICHAS.BARRIO,
                                                        Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                        IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                        IdFicha = c.T_FICHAS.ID_FICHA,
                                                        Calle = c.T_FICHAS.CALLE,
                                                        CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                        CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                        CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                        Contacto = c.T_FICHAS.CONTACTO,
                                                        Cuil = c.T_FICHAS.CUIL,
                                                        DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                        TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                        TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                        TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                        TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                        Dpto = c.T_FICHAS.DPTO ?? " ",
                                                        EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                        EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                        EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                        FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                        Mail = c.T_FICHAS.MAIL,
                                                        Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                        Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                        Nombre = c.T_FICHAS.NOMBRE,
                                                        Numero = c.T_FICHAS.NUMERO,
                                                        NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                        Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                        Piso = c.T_FICHAS.PISO ?? " ",
                                                        Sexo = c.T_FICHAS.SEXO,
                                                        TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                        TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                        TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                        TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                        TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                        IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                        NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                        FechaSistema = c.FEC_SIST,
                                                        IdUsuarioSistema = c.ID_USR_SIST,
                                                        UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                        FichaReconversion =
                                                            new FichaReconversion()
                                                            {
                                                                AltaTemprana = ficharecprod.ALTA_TEMPRANA,
                                                                IdEmpresa = ficharecprod.ID_EMPRESA,
                                                                Modalidad = ficharecprod.MODALIDAD,
                                                                IdSede = ficharecprod.ID_SEDE,
                                                                FechaInicioActividad = ficharecprod.AT_FECHA_INICIO,
                                                                FechaFinActividad = ficharecprod.AT_FECHA_CESE,
                                                                IdModalidadAfip = ficharecprod.ID_MOD_CONT_AFIP,
                                                                ModalidadAfip = ficharecprod.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                                IdSubprograma = ficharecprod.ID_SUBPROGRAMA,
                                                                Subprograma = ficharecprod.T_SUBPROGRAMAS.N_SUBPROGRAMA,
                                                                AportesDeLaEmpresa = ficharecprod.APORTES_EMP,
                                                                ApellidoTutor = ficharecprod.APELLIDO_TUTOR,
                                                                NombreTutor = ficharecprod.NOMBRE_TUTOR,
                                                                NroDocumentoTutor = ficharecprod.DNI_TUTOR,
                                                                PuestoTutor = ficharecprod.PUESTO_TUTOR,
                                                                Proyecto =
                                                                new Proyecto
                                                                {
                                                                    IdProyecto = ficharecprod.T_PROYECTOS.ID_PROYECTO,
                                                                    NombreProyecto = ficharecprod.T_PROYECTOS.N_PROYECTO,
                                                                    CantidadAcapacitar = ficharecprod.T_PROYECTOS.CANT_CAPACITAR,
                                                                    FechaInicioProyecto = ficharecprod.T_PROYECTOS.FEC_INICIO,
                                                                    FechaFinProyecto = ficharecprod.T_PROYECTOS.FEC_FIN,
                                                                    MesesDuracionProyecto = ficharecprod.T_PROYECTOS.MESES_DURAC
                                                                },
                                                                Sede =
                                                                new Sede
                                                                {
                                                                    IdSede = ficharecprod.ID_SEDE ?? 0,
                                                                    NombreSede = ficharecprod.T_SEDES.N_SEDE,
                                                                    Calle = ficharecprod.T_SEDES.CALLE,
                                                                    Numero = ficharecprod.T_SEDES.NUMERO,
                                                                    Piso = ficharecprod.T_SEDES.PISO,
                                                                    Dpto = ficharecprod.T_SEDES.DPTO,
                                                                    CodigoPostal = ficharecprod.T_SEDES.CODIGO_POSTAL,
                                                                    NombreLocalidad = ficharecprod.T_SEDES.T_LOCALIDADES.N_LOCALIDAD,
                                                                    ApellidoContacto = ficharecprod.T_SEDES.APE_CONTACTO,
                                                                    NombreContacto = ficharecprod.T_SEDES.NOM_CONTACTO,
                                                                    Telefono = ficharecprod.T_SEDES.TELEFONO,
                                                                    Fax = ficharecprod.T_SEDES.FAX,
                                                                    Email = ficharecprod.T_SEDES.EMAIL
                                                                },
                                                                Empresa =
                                                                    new Empresa
                                                                    {
                                                                        Calle = ficharecprod.T_EMPRESAS.CALLE,
                                                                        CantidadEmpleados =
                                                                            ficharecprod.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                        CodigoActividad =
                                                                            ficharecprod.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                        CodigoPostal = ficharecprod.T_EMPRESAS.CODIGO_POSTAL,
                                                                        Cuit = ficharecprod.T_EMPRESAS.CUIT,
                                                                        DomicilioLaboralIdem =
                                                                            ficharecprod.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                        IdEmpresa = ficharecprod.ID_EMPRESA ?? 0,
                                                                        NombreEmpresa = ficharecprod.T_EMPRESAS.N_EMPRESA,
                                                                        Numero = ficharecprod.T_EMPRESAS.NUMERO,
                                                                        Piso = ficharecprod.T_EMPRESAS.PISO,
                                                                        Telefono = ficharecprod.T_EMPRESAS.PISO,
                                                                        LocalidadEmpresa =
                                                                            new Localidad
                                                                            {
                                                                                IdLocalidad =
                                                                                    ficharecprod.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                NombreLocalidad =
                                                                                    ficharecprod.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                Departamento =
                                                                                    new Departamento
                                                                                    {
                                                                                        IdDepartamento =
                                                                                            ficharecprod.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                        NombreDepartamento =
                                                                                            ficharecprod.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                                            N_DEPARTAMENTO
                                                                                    }
                                                                            },
                                                                        Usuario =
                                                                            new UsuarioEmpresa
                                                                            {
                                                                                ApellidoUsuario =
                                                                                    ficharecprod.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.APELLIDO,
                                                                                Cuil =
                                                                                    ficharecprod.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.CUIL,
                                                                                IdUsuarioEmpresa =
                                                                                    ficharecprod.T_EMPRESAS.ID_USUARIO,
                                                                                Mail =
                                                                                    ficharecprod.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.MAIL,
                                                                                NombreUsuario =
                                                                                    ficharecprod.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.NOMBRE
                                                                            }
                                                                    }
                                                            },
                                                        LocalidadFicha =
                                                            new Localidad
                                                            {
                                                                IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                                NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                Departamento =
                                                                    new Departamento
                                                                    {
                                                                        IdDepartamento =
                                                                            c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                        NombreDepartamento =
                                                                            c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                            N_DEPARTAMENTO
                                                                    }
                                                            }
                                                    }
                                            });
                    return reconversion;
                    #endregion
                case (int)Enums.Programas.EfectoresSociales:
                    #region efectores
                    var efectores = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     //from fiterc in
                                     //    _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     //from fiUniv in
                                     //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                     from fichaefecsoc in
                                         _mdb.T_FICHA_EFEC_SOC.Where(fichaefecsoc => fichaefecsoc.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma && fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                         //&& beneficiarios.Contains(c.ID_BENEFICIARIO)
                                                && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                                ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                                ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                                (modalidad != "T" ? (fichaefecsoc.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                                (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                                (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                (altaTemprana != "T" ? fichaefecsoc.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                                (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                                     select
                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {

                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                     FichaEfectores =
                                                         new FichaEfectoresSociales()
                                                         {
                                                             AltaTemprana = fichaefecsoc.ALTA_TEMPRANA,
                                                             IdEmpresa = fichaefecsoc.ID_EMPRESA,
                                                             Modalidad = fichaefecsoc.MODALIDAD,
                                                             IdSede = fichaefecsoc.ID_SEDE,
                                                             FechaInicioActividad = fichaefecsoc.AT_FECHA_INICIO,
                                                             FechaFinActividad = fichaefecsoc.AT_FECHA_CESE,
                                                             IdModalidadAfip = fichaefecsoc.ID_MOD_CONT_AFIP,
                                                             ModalidadAfip = fichaefecsoc.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                             IdSubprograma = fichaefecsoc.ID_SUBPROGRAMA,
                                                             Subprograma = fichaefecsoc.T_SUBPROGRAMAS.N_SUBPROGRAMA,
                                                             AportesDeLaEmpresa = fichaefecsoc.APORTES_EMP,
                                                             ApellidoTutor = fichaefecsoc.APELLIDO_TUTOR,
                                                             NombreTutor = fichaefecsoc.NOMBRE_TUTOR,
                                                             NroDocumentoTutor = fichaefecsoc.DNI_TUTOR,
                                                             PuestoTutor = fichaefecsoc.PUESTO_TUTOR,
                                                             Proyecto =
                                                             new Proyecto
                                                             {
                                                                 IdProyecto = fichaefecsoc.T_PROYECTOS.ID_PROYECTO,
                                                                 NombreProyecto = fichaefecsoc.T_PROYECTOS.N_PROYECTO,
                                                                 CantidadAcapacitar = fichaefecsoc.T_PROYECTOS.CANT_CAPACITAR,
                                                                 FechaInicioProyecto = fichaefecsoc.T_PROYECTOS.FEC_INICIO,
                                                                 FechaFinProyecto = fichaefecsoc.T_PROYECTOS.FEC_FIN,
                                                                 MesesDuracionProyecto = fichaefecsoc.T_PROYECTOS.MESES_DURAC
                                                             },
                                                             Sede =
                                                             new Sede
                                                             {
                                                                 IdSede = fichaefecsoc.ID_SEDE ?? 0,
                                                                 NombreSede = fichaefecsoc.T_SEDES.N_SEDE,
                                                                 Calle = fichaefecsoc.T_SEDES.CALLE,
                                                                 Numero = fichaefecsoc.T_SEDES.NUMERO,
                                                                 Piso = fichaefecsoc.T_SEDES.PISO,
                                                                 Dpto = fichaefecsoc.T_SEDES.DPTO,
                                                                 CodigoPostal = fichaefecsoc.T_SEDES.CODIGO_POSTAL,
                                                                 NombreLocalidad = fichaefecsoc.T_SEDES.T_LOCALIDADES.N_LOCALIDAD,
                                                                 ApellidoContacto = fichaefecsoc.T_SEDES.APE_CONTACTO,
                                                                 NombreContacto = fichaefecsoc.T_SEDES.NOM_CONTACTO,
                                                                 Telefono = fichaefecsoc.T_SEDES.TELEFONO,
                                                                 Fax = fichaefecsoc.T_SEDES.FAX,
                                                                 Email = fichaefecsoc.T_SEDES.EMAIL
                                                             },
                                                             Empresa =
                                                                 new Empresa
                                                                 {
                                                                     Calle = fichaefecsoc.T_EMPRESAS.CALLE,
                                                                     CantidadEmpleados =
                                                                         fichaefecsoc.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                     CodigoActividad =
                                                                         fichaefecsoc.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                     CodigoPostal = fichaefecsoc.T_EMPRESAS.CODIGO_POSTAL,
                                                                     Cuit = fichaefecsoc.T_EMPRESAS.CUIT,
                                                                     DomicilioLaboralIdem =
                                                                         fichaefecsoc.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                     IdEmpresa = fichaefecsoc.ID_EMPRESA ?? 0,
                                                                     NombreEmpresa = fichaefecsoc.T_EMPRESAS.N_EMPRESA,
                                                                     Numero = fichaefecsoc.T_EMPRESAS.NUMERO,
                                                                     Piso = fichaefecsoc.T_EMPRESAS.PISO,
                                                                     Telefono = fichaefecsoc.T_EMPRESAS.PISO,
                                                                     LocalidadEmpresa =
                                                                         new Localidad
                                                                         {
                                                                             IdLocalidad =
                                                                                 fichaefecsoc.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                             NombreLocalidad =
                                                                                 fichaefecsoc.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                             Departamento =
                                                                                 new Departamento
                                                                                 {
                                                                                     IdDepartamento =
                                                                                         fichaefecsoc.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                     NombreDepartamento =
                                                                                         fichaefecsoc.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                                         N_DEPARTAMENTO
                                                                                 }
                                                                         },
                                                                     Usuario =
                                                                         new UsuarioEmpresa
                                                                         {
                                                                             ApellidoUsuario =
                                                                                 fichaefecsoc.T_EMPRESAS.
                                                                                 T_USUARIOS_EMPRESA.APELLIDO,
                                                                             Cuil =
                                                                                 fichaefecsoc.T_EMPRESAS.
                                                                                 T_USUARIOS_EMPRESA.CUIL,
                                                                             IdUsuarioEmpresa =
                                                                                 fichaefecsoc.T_EMPRESAS.ID_USUARIO,
                                                                             Mail =
                                                                                 fichaefecsoc.T_EMPRESAS.
                                                                                 T_USUARIOS_EMPRESA.MAIL,
                                                                             NombreUsuario =
                                                                                 fichaefecsoc.T_EMPRESAS.
                                                                                 T_USUARIOS_EMPRESA.NOMBRE
                                                                         }
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                         N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return efectores;
                    #endregion
                default:
                    return null;


            }
        }

        private IQueryable<IBeneficiario> QBenefTodos(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa)
        {

            switch (idPrograma)
            {
                case (int)Enums.Programas.Terciaria:

                                       #region terciarios

                    var fichaterc = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     from fiterc in
                                         _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     //from fiUniv in
                                     //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                         ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma &&
                                          fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                         && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                        ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                        ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                        (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                        (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                        (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                        (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                        && (fic.ID_ETAPA == idEtapa || idEtapa == 0)


                                     select

                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {

                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,

                                                     //Fichas Terciarias
                                                     PromedioTerciaria = fiterc.PROMEDIO,
                                                     OtraCarreraTerciaria = fiterc.OTRA_CARRERA,
                                                     OtraInstitucionTerciaria = fiterc.OTRA_INSTITUCION,
                                                     IdCarreraTerciaria = fiterc.ID_CARRERA,
                                                     IdEscuelaTerciaria = fiterc.ID_ESCUELA,
                                                     IdLocalidadEscTerc = fiterc.T_ESCUELAS.ID_LOCALIDAD,
                                                     NombreEscuela = fiterc.T_ESCUELAS.N_ESCUELA,
                                                     OtroSectorTerciaria = fiterc.OTRO_SECTOR,
                                                     EscuelaFicha =
                                                         new Escuela
                                                         {
                                                             Anexo = fiterc.T_ESCUELAS.ANEXO,
                                                             Barrio = fiterc.T_ESCUELAS.BARRIO,
                                                             Cue = fiterc.T_ESCUELAS.CUE,
                                                             Id_Escuela = fiterc.ID_ESCUELA ?? 0,
                                                             Nombre_Escuela = fiterc.T_ESCUELAS.N_ESCUELA,
                                                             LocalidadEscuela =
                                                                 new Localidad
                                                                 {
                                                                     IdLocalidad = fiterc.T_ESCUELAS.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = fiterc.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                         {
                                                                             IdDepartamento = fiterc.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                             NombreDepartamento = fiterc.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                         }
                                                                 }
                                                         },
                                                     CarreraFicha =
                                                         new Carrera
                                                         {
                                                             IdCarrera = fiterc.ID_CARRERA ?? 0,
                                                             NombreCarrera = fiterc.T_CARRERAS.N_CARRERA,
                                                             IdSector = fiterc.T_CARRERAS.ID_SECTOR,
                                                             SectorCarrera =
                                                                 new Sector
                                                                 {
                                                                     IdSector = fiterc.T_CARRERAS.ID_SECTOR ?? 0,
                                                                     NombreSector = fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR
                                                                 },
                                                             IdNivel = fiterc.T_CARRERAS.ID_NIVEL,
                                                             NivelCarrera =
                                                                 new Nivel
                                                                 {
                                                                     IdNivel = fiterc.T_CARRERAS.ID_NIVEL ?? 0,
                                                                     NombreNivel = fiterc.T_CARRERAS.T_NIVEL.N_NIVEL
                                                                 },
                                                             IdInstitucion = fiterc.T_CARRERAS.ID_INSTITUCION,
                                                             InstitucionCarrera =
                                                                 new Institucion
                                                                 {
                                                                     IdInstitucion = fiterc.T_CARRERAS.ID_INSTITUCION ?? 0,
                                                                     NombreInstitucion = fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return fichaterc;
                    #endregion

                case (int)Enums.Programas.Universitaria:
                    #region univeristarios
                    var fichauniv = (from c in _mdb.T_BENEFICIARIOS
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     from fiUniv in
                                         _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()

                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma &&
                                          fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                          && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                                ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                                ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                                (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                                (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                                     select
                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {
                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,

                                                     // Fichas Universitarias
                                                     PromedioUniversitaria = fiUniv.PROMEDIO,
                                                     OtraCarreraUniversitaria = fiUniv.OTRA_CARRERA,
                                                     OtraInstitucionUniversitaria = fiUniv.OTRA_INSTITUCION,
                                                     IdCarreraUniversitaria = fiUniv.ID_CARRERA,
                                                     IdEscuelaUniversitaria = fiUniv.ID_ESCUELA,
                                                     OtroSectorUniversitaria = fiUniv.OTRO_SECTOR,
                                                     EscuelaFicha =
                                                         new Escuela
                                                         {
                                                             Anexo = fiUniv.T_ESCUELAS.ANEXO,
                                                             Barrio = fiUniv.T_ESCUELAS.BARRIO,
                                                             Cue = fiUniv.T_ESCUELAS.CUE,
                                                             Id_Escuela = fiUniv.ID_ESCUELA ?? 0,
                                                             Nombre_Escuela = fiUniv.T_ESCUELAS.N_ESCUELA,
                                                             Id_Localidad = fiUniv.T_ESCUELAS.ID_LOCALIDAD,
                                                             LocalidadEscuela =
                                                                 new Localidad
                                                                 {
                                                                     IdLocalidad = fiUniv.T_ESCUELAS.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = fiUniv.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                         {
                                                                             IdDepartamento = fiUniv.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                             NombreDepartamento = fiUniv.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                         }
                                                                 }
                                                         },
                                                     CarreraFicha =
                                                         new Carrera
                                                         {
                                                             IdCarrera = fiUniv.ID_CARRERA ?? 0,
                                                             NombreCarrera = fiUniv.T_CARRERAS.N_CARRERA,
                                                             IdSector = fiUniv.T_CARRERAS.ID_SECTOR,
                                                             SectorCarrera =
                                                                 new Sector
                                                                 {
                                                                     IdSector = fiUniv.T_CARRERAS.ID_SECTOR ?? 0,
                                                                     NombreSector = fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR
                                                                 },
                                                             IdNivel = fiUniv.T_CARRERAS.ID_NIVEL,
                                                             NivelCarrera =
                                                                 new Nivel
                                                                 {
                                                                     IdNivel = fiUniv.T_CARRERAS.ID_NIVEL ?? 0,
                                                                     NombreNivel = fiUniv.T_CARRERAS.T_NIVEL.N_NIVEL
                                                                 },
                                                             IdInstitucion = fiUniv.T_CARRERAS.ID_INSTITUCION,
                                                             InstitucionCarrera =
                                                                 new Institucion
                                                                 {
                                                                     IdInstitucion = fiUniv.T_CARRERAS.ID_INSTITUCION ?? 0,
                                                                     NombreInstitucion = fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return fichauniv;
                    #endregion
                case (int)Enums.Programas.Ppp:
                    #region Planpp
                    var ppp = (from c in _mdb.T_BENEFICIARIOS/*bene*/
                               join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from fichappp in
                                   _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                               from ap in
                                   _mdb.T_APODERADOS.Where(
                                   ap =>
                                   ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                               from sucapo in
                                   _mdb.T_TABLAS_BCO_CBA.Where(
                                       sucapo =>
                                       sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                   DefaultIfEmpty()
                               where

                               c.ID_PROGRAMA == idPrograma && fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                (modalidad != "T" ? (fichappp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                (altaTemprana != "T" ? fichappp.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                && (fic.ID_ETAPA == idEtapa || idEtapa == 0)


                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA,
                                       Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                       MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       Notificado = c.NOTIFICADO == "S" ? true : false,
                                       Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                       SucursalDescripcion = suc.DESCRIPCION,
                                       FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                       IdSucursal = cu.ID_SUCURSAL,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       Apoderado =
                                           new Apoderado
                                           {
                                               IdApoderadoNullable = ap.ID_APODERADO,
                                               Nombre = ap.NOMBRE,
                                               Apellido = ap.APELLIDO,
                                               Barrio = ap.BARRIO,
                                               Calle = ap.CALLE,
                                               Cbu = ap.CBU,
                                               CodigoPostal = ap.CODIGO_POSTAL,
                                               Cuil = ap.CUIL,
                                               Dpto = ap.DPTO,
                                               EntreCalles = ap.ENTRECALLES,
                                               FechaNacimiento = ap.FER_NAC,
                                               FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                               IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                               IdSistema = ap.ID_SISTEMA ?? 0,
                                               IdSucursal = ap.ID_SUCURSAL_BCO,
                                               Mail = ap.MAIL,
                                               Numero = ap.NUMERO,
                                               IdLocalidad = ap.ID_LOCALIDAD,
                                               LocalidadApoderado =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   },
                                               Manzana = ap.MANZANA,
                                               Monoblock = ap.MONOBLOCK,
                                               NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                               NumeroDocumento = ap.NRO_DOCUMENTO,
                                               Parcela = ap.PARCELA,
                                               Piso = ap.PISO,
                                               Sexo = ap.SEXO,
                                               TelefonoCelular = ap.TEL_CELULAR,
                                               TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                               TelefonoFijo = ap.TEL_FIJO,
                                               UsuarioBanco = ap.USUARIO_BANCO,
                                               SucursalApoderado =
                                                   new Sucursal
                                                   {
                                                       CodigoBanco = sucapo.COD_BCO_CBA,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                       Detalle = sucapo.DESCRIPCION
                                                   }
                                           },
                                       Ficha =
                                           new Ficha
                                           {

                                               Apellido = c.T_FICHAS.APELLIDO,
                                               Barrio = c.T_FICHAS.BARRIO,
                                               Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                               IdFicha = c.T_FICHAS.ID_FICHA,
                                               Calle = c.T_FICHAS.CALLE,
                                               CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                               CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                               CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = c.T_FICHAS.DPTO ?? " ",
                                               EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                               EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                               FechaNacimiento = c.T_FICHAS.FER_NAC,
                                               Mail = c.T_FICHAS.MAIL,
                                               Manzana = c.T_FICHAS.MANZANA ?? " ",
                                               Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                               Nombre = c.T_FICHAS.NOMBRE,
                                               Numero = c.T_FICHAS.NUMERO,
                                               NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                               Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                               Piso = c.T_FICHAS.PISO ?? " ",
                                               Sexo = c.T_FICHAS.SEXO,
                                               TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                               TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                               TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                               TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                               IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                               NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               FichaPpp =
                                                   new FichaPPP
                                                   {
                                                       AltaTemprana = fichappp.ALTA_TEMPRANA == null ? "N" : "S",
                                                       FechaInicioActividad = fichappp.AT_FECHA_INICIO,
                                                       FechaFinActividad = fichappp.AT_FECHA_CESE,
                                                       IdModalidadAfip = fichappp.ID_MOD_CONT_AFIP,
                                                       ModalidadAfip = fichappp.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                       Finalizado = (fichappp.FINALIZADO == "S" ? true : false),
                                                       Cursando = (fichappp.CURSANDO == "S" ? true : false),
                                                       IdEmpresa = fichappp.ID_EMPRESA,
                                                       DeseaTermNivel = (fichappp.DESEA_TERM_NIVEL == "S" ? true : false),
                                                       IdNivelEscolaridad = fichappp.ID_NIVEL_ESCOLARIDAD,
                                                       Modalidad = fichappp.MODALIDAD,
                                                       IdSede = fichappp.ID_SEDE,
                                                       Tareas = fichappp.TAREAS,
                                                       Empresa =
                                                           new Empresa
                                                           {
                                                               Calle = fichappp.T_EMPRESAS.CALLE,
                                                               CantidadEmpleados = fichappp.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                               CodigoActividad = fichappp.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                               CodigoPostal = fichappp.T_EMPRESAS.CODIGO_POSTAL,
                                                               Cuit = fichappp.T_EMPRESAS.CUIT,
                                                               DomicilioLaboralIdem = fichappp.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                               IdEmpresa = fichappp.ID_EMPRESA ?? 0,
                                                               NombreEmpresa = fichappp.T_EMPRESAS.N_EMPRESA,
                                                               Numero = fichappp.T_EMPRESAS.NUMERO,
                                                               Piso = fichappp.T_EMPRESAS.PISO,
                                                               Telefono = fichappp.T_EMPRESAS.PISO,
                                                               IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD,
                                                               LocalidadEmpresa =
                                                                   new Localidad
                                                                   {
                                                                       IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                       NombreLocalidad = fichappp.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                       Departamento =
                                                                           new Departamento
                                                                           {
                                                                               IdDepartamento =
                                                                                   fichappp.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                               NombreDepartamento =
                                                                                   fichappp.T_EMPRESAS.
                                                                                   T_LOCALIDADES.
                                                                                   T_DEPARTAMENTOS.
                                                                                   N_DEPARTAMENTO
                                                                           }
                                                                   },
                                                               Usuario =
                                                                   new UsuarioEmpresa
                                                                   {
                                                                       ApellidoUsuario = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.APELLIDO,
                                                                       Cuil = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.CUIL,
                                                                       IdUsuarioEmpresa = fichappp.T_EMPRESAS.ID_USUARIO,
                                                                       Mail = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.MAIL,
                                                                       NombreUsuario = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.NOMBRE
                                                                   }
                                                           }
                                                   },
                                               LocalidadFicha =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                   N_DEPARTAMENTO
                                                           }
                                                   }
                                           }
                                   });
                    return ppp;
                    #endregion
                case (int)Enums.Programas.PppProf:
                    #region Ppprof
                    var pppProf = (from c in _mdb.T_BENEFICIARIOS 
                                   join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                   from cu in
                                       _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                   from suc in
                                       _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                   from mon in
                                       _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                   from iva in
                                       _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                   from nac in
                                       _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                   from fichapppProf in
                                       _mdb.T_FICHA_PPP_PROF.Where(fichapppProf => fichapppProf.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                                   from ap in
                                       _mdb.T_APODERADOS.Where(
                                       ap =>
                                       ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                   from sucapo in
                                       _mdb.T_TABLAS_BCO_CBA.Where(
                                           sucapo =>
                                           sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                       DefaultIfEmpty()
                                   where c.ID_PROGRAMA == idPrograma && fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                        && (fichapppProf.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fichapppProf.MODALIDAD == (int)Enums.Modalidad.Cti && fichapppProf.ALTA_TEMPRANA == "S"))
                                        && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                        ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                        ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                        (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                        (modalidad != "T" ? (fichapppProf.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                        (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                        (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                        (altaTemprana != "T" ? fichapppProf.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                        (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                        && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                                   select
                                       new Beneficiario
                                       {
                                           IdBeneficiario = c.ID_BENEFICIARIO,
                                           IdEstado = c.ID_ESTADO ?? 0,
                                           FechaSistema = c.FEC_SIST,
                                           IdFicha = c.ID_FICHA ?? 0,
                                           IdPrograma = c.ID_PROGRAMA ?? 0,
                                           IdUsuarioSistema = c.ID_USR_SIST,
                                           IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                           NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                           CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                           CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                           CondicionIva = iva.COD_BCO_CBA ?? "0",
                                           Nacionalidad = c.NACIONALIDAD ?? 0,
                                           Residente = c.RESIDENTE,
                                           TipoPersona = c.TIPO_PERSONA,
                                           CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                           CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                           NombreEstado = c.T_ESTADOS.N_ESTADO,
                                           Cbu = cu.CBU ?? "",
                                           ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                           NumeroCuenta = cu.NRO_CTA,
                                           Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                           MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                           TieneApoderado = c.TIENE_APODERADO,
                                           FechaNotificacion = c.FEC_NOTIF,
                                           Notificado = c.NOTIFICADO == "S" ? true : false,
                                           Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                           SucursalDescripcion = suc.DESCRIPCION,
                                           FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                           IdSucursal = cu.ID_SUCURSAL,
                                           UsuarioSistema = c.T_USUARIOS.LOGIN,
                                           FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                           FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                           Apoderado =
                                               new Apoderado
                                               {
                                                   IdApoderadoNullable = ap.ID_APODERADO,
                                                   Nombre = ap.NOMBRE,
                                                   Apellido = ap.APELLIDO,
                                                   Barrio = ap.BARRIO,
                                                   Calle = ap.CALLE,
                                                   Cbu = ap.CBU,
                                                   CodigoPostal = ap.CODIGO_POSTAL,
                                                   Cuil = ap.CUIL,
                                                   Dpto = ap.DPTO,
                                                   EntreCalles = ap.ENTRECALLES,
                                                   FechaNacimiento = ap.FER_NAC,
                                                   FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                   IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                   IdSistema = ap.ID_SISTEMA ?? 0,
                                                   IdSucursal = ap.ID_SUCURSAL_BCO,
                                                   Mail = ap.MAIL,
                                                   Numero = ap.NUMERO,
                                                   IdLocalidad = ap.ID_LOCALIDAD,
                                                   LocalidadApoderado =
                                                       new Localidad
                                                       {
                                                           IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                           NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                           Departamento =
                                                               new Departamento
                                                               {
                                                                   IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                   NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                               }
                                                       },
                                                   Manzana = ap.MANZANA,
                                                   Monoblock = ap.MONOBLOCK,
                                                   NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                   NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                   NumeroDocumento = ap.NRO_DOCUMENTO,
                                                   Parcela = ap.PARCELA,
                                                   Piso = ap.PISO,
                                                   Sexo = ap.SEXO,
                                                   TelefonoCelular = ap.TEL_CELULAR,
                                                   TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                   TelefonoFijo = ap.TEL_FIJO,
                                                   UsuarioBanco = ap.USUARIO_BANCO,
                                                   SucursalApoderado =
                                                       new Sucursal
                                                       {
                                                           CodigoBanco = sucapo.COD_BCO_CBA,
                                                           IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                           Detalle = sucapo.DESCRIPCION
                                                       }
                                               },
                                           Ficha =
                                               new Ficha
                                               {
                                                   Apellido = c.T_FICHAS.APELLIDO,
                                                   Barrio = c.T_FICHAS.BARRIO,
                                                   Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                   IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                   IdFicha = c.T_FICHAS.ID_FICHA,
                                                   Calle = c.T_FICHAS.CALLE,
                                                   CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                   CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                   CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                   Contacto = c.T_FICHAS.CONTACTO,
                                                   Cuil = c.T_FICHAS.CUIL,
                                                   DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                   TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                   TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                   TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                   TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                   Dpto = c.T_FICHAS.DPTO ?? " ",
                                                   EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                   EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                   EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                   FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                   Mail = c.T_FICHAS.MAIL,
                                                   Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                   Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                   Nombre = c.T_FICHAS.NOMBRE,
                                                   Numero = c.T_FICHAS.NUMERO,
                                                   NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                   Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                   Piso = c.T_FICHAS.PISO ?? " ",
                                                   Sexo = c.T_FICHAS.SEXO,
                                                   TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                   TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                   TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                   TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                   TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                   IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                   NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                   FechaSistema = c.FEC_SIST,
                                                   IdUsuarioSistema = c.ID_USR_SIST,
                                                   UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                   FichaPppp =
                                                       new FichaPPPP
                                                       {
                                                           AltaTemprana = fichapppProf.ALTA_TEMPRANA,
                                                           Promedio = fichapppProf.PROMEDIO,
                                                           IdTitulo = fichapppProf.ID_TITULO,
                                                           FechaEgreso = fichapppProf.FECHA_EGRESO,
                                                           IdEmpresa = fichapppProf.ID_EMPRESA,
                                                           Modalidad = fichapppProf.MODALIDAD,
                                                           IdSede = fichapppProf.ID_SEDE,
                                                           Tareas = fichapppProf.TAREAS,
                                                           FechaInicioActividad = fichapppProf.AT_FECHA_INICIO,
                                                           FechaFinActividad = fichapppProf.AT_FECHA_CESE,
                                                           IdModalidadAFIP = fichapppProf.ID_MOD_CONT_AFIP,
                                                           ModalidadAFIP = fichapppProf.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                           Empresa =
                                                               new Empresa
                                                               {
                                                                   Calle = fichapppProf.T_EMPRESAS.CALLE,
                                                                   CantidadEmpleados = fichapppProf.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                   CodigoActividad = fichapppProf.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                   CodigoPostal = fichapppProf.T_EMPRESAS.CODIGO_POSTAL,
                                                                   Cuit = fichapppProf.T_EMPRESAS.CUIT,
                                                                   DomicilioLaboralIdem = fichapppProf.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                   IdEmpresa = fichapppProf.ID_EMPRESA ?? 0,
                                                                   NombreEmpresa = fichapppProf.T_EMPRESAS.N_EMPRESA,
                                                                   Numero = fichapppProf.T_EMPRESAS.NUMERO,
                                                                   Piso = fichapppProf.T_EMPRESAS.PISO,
                                                                   Telefono = fichapppProf.T_EMPRESAS.PISO,
                                                                   IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD,
                                                                   LocalidadEmpresa =
                                                                       new Localidad
                                                                       {
                                                                           IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                           NombreLocalidad = fichapppProf.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                           Departamento =
                                                                               new Departamento
                                                                               {
                                                                                   IdDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                   NombreDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                               }
                                                                       },
                                                                   IdUsuario = fichapppProf.T_EMPRESAS.ID_USUARIO,
                                                                   Usuario =
                                                                       new UsuarioEmpresa
                                                                       {
                                                                           ApellidoUsuario =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.APELLIDO,
                                                                           Cuil =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.CUIL,
                                                                           IdUsuarioEmpresa =
                                                                               fichapppProf.T_EMPRESAS.ID_USUARIO ?? 0,
                                                                           Mail =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.MAIL,
                                                                           NombreUsuario =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.NOMBRE
                                                                       }
                                                               }
                                                       },
                                                   LocalidadFicha =
                                                       new Localidad
                                                       {
                                                           IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                           NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                           Departamento =
                                                               new Departamento
                                                               {
                                                                   IdDepartamento =
                                                                       c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                   NombreDepartamento =
                                                                       c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                       N_DEPARTAMENTO
                                                               }
                                                       }
                                               }
                                       });
                    return pppProf;
                    #endregion
                case (int)Enums.Programas.Vat:
                    #region VAT
                    var vat = (from c in _mdb.T_BENEFICIARIOS
                               join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from fichaVat in
                                   _mdb.T_FICHA_VAT.Where(fichaVat => fichaVat.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                               from ap in
                                   _mdb.T_APODERADOS.Where(
                                   ap =>
                                   ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                               from sucapo in
                                   _mdb.T_TABLAS_BCO_CBA.Where(
                                       sucapo =>
                                       sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                   DefaultIfEmpty()
                               where c.ID_PROGRAMA == idPrograma && fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                       && (fichaVat.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fichaVat.MODALIDAD == (int)Enums.Modalidad.Cti && fichaVat.ALTA_TEMPRANA == "S"))
                                    && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                        ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                        ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                        (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                        (modalidad != "T" ? (fichaVat.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                        (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                        (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                        (altaTemprana != "T" ? fichaVat.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                        (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                        && (fic.ID_ETAPA == idEtapa || idEtapa == 0)
                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA,
                                       Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                       MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       Notificado = c.NOTIFICADO == "S" ? true : false,
                                       Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                       SucursalDescripcion = suc.DESCRIPCION,
                                       FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                       IdSucursal = cu.ID_SUCURSAL,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       Apoderado =
                                           new Apoderado
                                           {
                                               IdApoderadoNullable = ap.ID_APODERADO,
                                               Nombre = ap.NOMBRE,
                                               Apellido = ap.APELLIDO,
                                               Barrio = ap.BARRIO,
                                               Calle = ap.CALLE,
                                               Cbu = ap.CBU,
                                               CodigoPostal = ap.CODIGO_POSTAL,
                                               Cuil = ap.CUIL,
                                               Dpto = ap.DPTO,
                                               EntreCalles = ap.ENTRECALLES,
                                               FechaNacimiento = ap.FER_NAC,
                                               FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                               IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                               IdSistema = ap.ID_SISTEMA ?? 0,
                                               IdSucursal = ap.ID_SUCURSAL_BCO,
                                               Mail = ap.MAIL,
                                               Numero = ap.NUMERO,
                                               IdLocalidad = ap.ID_LOCALIDAD,
                                               LocalidadApoderado =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento =
                                                                   ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento =
                                                                   ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   },
                                               Manzana = ap.MANZANA,
                                               Monoblock = ap.MONOBLOCK,
                                               NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                               NumeroDocumento = ap.NRO_DOCUMENTO,
                                               Parcela = ap.PARCELA,
                                               Piso = ap.PISO,
                                               Sexo = ap.SEXO,
                                               TelefonoCelular = ap.TEL_CELULAR,
                                               TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                               TelefonoFijo = ap.TEL_FIJO,
                                               UsuarioBanco = ap.USUARIO_BANCO,
                                               SucursalApoderado =
                                                   new Sucursal
                                                   {
                                                       CodigoBanco = sucapo.COD_BCO_CBA,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                       Detalle = sucapo.DESCRIPCION
                                                   }
                                           },
                                       Ficha =
                                           new Ficha
                                           {
                                               Apellido = c.T_FICHAS.APELLIDO,
                                               Barrio = c.T_FICHAS.BARRIO,
                                               Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                               IdFicha = c.T_FICHAS.ID_FICHA,
                                               Calle = c.T_FICHAS.CALLE,
                                               CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                               CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                               CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = c.T_FICHAS.DPTO ?? " ",
                                               EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                               EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                               FechaNacimiento = c.T_FICHAS.FER_NAC,
                                               Mail = c.T_FICHAS.MAIL,
                                               Manzana = c.T_FICHAS.MANZANA ?? " ",
                                               Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                               Nombre = c.T_FICHAS.NOMBRE,
                                               Numero = c.T_FICHAS.NUMERO,
                                               NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                               Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                               Piso = c.T_FICHAS.PISO ?? " ",
                                               Sexo = c.T_FICHAS.SEXO,
                                               TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                               TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                               TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                               TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                               IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                               NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               FichaVat =
                                                            new FichaVAT
                                                            {
                                                                AltaTemprana = fichaVat.ALTA_TEMPRANA,
                                                                AniosAportes = fichaVat.ANIOS_APORTES,
                                                                Finalizado = (fichaVat.FINALIZADO == "S" ? true : false),
                                                                Cursando = (fichaVat.CURSANDO == "S" ? true : false),
                                                                IdEmpresa = fichaVat.ID_EMPRESA,
                                                                IdNivelEscolaridad = fichaVat.ID_NIVEL_ESCOLARIDAD,
                                                                Modalidad = fichaVat.MODALIDAD,
                                                                IdSede = fichaVat.ID_SEDE,
                                                                Tareas = fichaVat.TAREAS,
                                                                FechaInicioActividad = fichaVat.AT_FECHA_INICIO,
                                                                FechaFinActividad = fichaVat.AT_FECHA_CESE,
                                                                IdModalidadAFIP = fichaVat.ID_MOD_CONT_AFIP,
                                                                ModalidadAFIP = fichaVat.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                                Empresa =
                                                                    new Empresa
                                                                    {
                                                                        Calle = fichaVat.T_EMPRESAS.CALLE,
                                                                        CantidadEmpleados = fichaVat.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                        CodigoActividad = fichaVat.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                        CodigoPostal = fichaVat.T_EMPRESAS.CODIGO_POSTAL,
                                                                        Cuit = fichaVat.T_EMPRESAS.CUIT,
                                                                        DomicilioLaboralIdem = fichaVat.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                        IdEmpresa = fichaVat.ID_EMPRESA ?? 0,
                                                                        NombreEmpresa = fichaVat.T_EMPRESAS.N_EMPRESA,
                                                                        Numero = fichaVat.T_EMPRESAS.NUMERO,
                                                                        Piso = fichaVat.T_EMPRESAS.PISO,
                                                                        Telefono = fichaVat.T_EMPRESAS.PISO,
                                                                        IdLocalidad = fichaVat.T_EMPRESAS.ID_LOCALIDAD,
                                                                        LocalidadEmpresa =
                                                                            new Localidad
                                                                            {
                                                                                IdLocalidad = fichaVat.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                NombreLocalidad = fichaVat.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                Departamento =
                                                                                    new Departamento
                                                                                    {
                                                                                        IdDepartamento =
                                                                                            fichaVat.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ??
                                                                                            0,
                                                                                        NombreDepartamento = fichaVat.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                    }
                                                                            },
                                                                        IdUsuario = fichaVat.T_EMPRESAS.ID_USUARIO,
                                                                        Usuario =
                                                                            new UsuarioEmpresa
                                                                            {
                                                                                ApellidoUsuario = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.APELLIDO,
                                                                                Cuil = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.CUIL,
                                                                                IdUsuarioEmpresa = fichaVat.T_EMPRESAS.ID_USUARIO ?? 0,
                                                                                Mail = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.MAIL,
                                                                                NombreUsuario = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.NOMBRE
                                                                            }
                                                                    }
                                                            },
                                               LocalidadFicha =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   }
                                           }
                                   });
                    return vat;
                    #endregion

                case (int)Enums.Programas.ReconversionProductiva:
                    #region ReconversionProductiva
                    var reconversion = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                                        join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     
                                        from cu in
                                            _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                        from suc in
                                            _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                        from mon in
                                            _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                        from iva in
                                            _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                        from nac in
                                            _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                        from ficharecprod in
                                            _mdb.T_FICHA_REC_PROD.Where(ficharecprod => ficharecprod.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                        from ap in
                                            _mdb.T_APODERADOS.Where(
                                            ap =>
                                            ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                                        from sucapo in
                                            _mdb.T_TABLAS_BCO_CBA.Where(
                                                sucapo =>
                                                sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                            DefaultIfEmpty()
                                        where c.ID_PROGRAMA == idPrograma && fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                             && (ficharecprod.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (ficharecprod.MODALIDAD == (int)Enums.Modalidad.Cti && ficharecprod.ALTA_TEMPRANA == "S"))
                                             && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                             ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                             ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                             (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                             (modalidad != "T" ? (ficharecprod.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                             (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                             (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                             (altaTemprana != "T" ? ficharecprod.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                             (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                             && (fic.ID_ETAPA == idEtapa || idEtapa == 0)
                                        select
                                            new Beneficiario
                                            {
                                                IdBeneficiario = c.ID_BENEFICIARIO,
                                                IdEstado = c.ID_ESTADO ?? 0,
                                                FechaSistema = c.FEC_SIST,
                                                IdFicha = c.ID_FICHA ?? 0,
                                                IdPrograma = c.ID_PROGRAMA ?? 0,
                                                IdUsuarioSistema = c.ID_USR_SIST,
                                                IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                                CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                                CondicionIva = iva.COD_BCO_CBA ?? "0",
                                                Nacionalidad = c.NACIONALIDAD ?? 0,
                                                Residente = c.RESIDENTE,
                                                TipoPersona = c.TIPO_PERSONA,
                                                CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                                CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                                NombreEstado = c.T_ESTADOS.N_ESTADO,
                                                Cbu = cu.CBU ?? "",
                                                ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                NumeroCuenta = cu.NRO_CTA,
                                                Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                                MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                TieneApoderado = c.TIENE_APODERADO,
                                                FechaNotificacion = c.FEC_NOTIF,
                                                Notificado = c.NOTIFICADO == "S" ? true : false,
                                                Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                                SucursalDescripcion = suc.DESCRIPCION,
                                                FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                                IdSucursal = cu.ID_SUCURSAL,
                                                UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                                FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                                Apoderado =
                                                    new Apoderado
                                                    {
                                                        IdApoderadoNullable = ap.ID_APODERADO,
                                                        Nombre = ap.NOMBRE,
                                                        Apellido = ap.APELLIDO,
                                                        Barrio = ap.BARRIO,
                                                        Calle = ap.CALLE,
                                                        Cbu = ap.CBU,
                                                        CodigoPostal = ap.CODIGO_POSTAL,
                                                        Cuil = ap.CUIL,
                                                        Dpto = ap.DPTO,
                                                        EntreCalles = ap.ENTRECALLES,
                                                        FechaNacimiento = ap.FER_NAC,
                                                        FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                        IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                        IdSistema = ap.ID_SISTEMA ?? 0,
                                                        IdSucursal = ap.ID_SUCURSAL_BCO,
                                                        Mail = ap.MAIL,
                                                        Numero = ap.NUMERO,
                                                        IdLocalidad = ap.ID_LOCALIDAD,
                                                        LocalidadApoderado =
                                                            new Localidad
                                                            {
                                                                IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                                NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                                Departamento =
                                                                    new Departamento
                                                                    {
                                                                        IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                        NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                    }
                                                            },
                                                        Manzana = ap.MANZANA,
                                                        Monoblock = ap.MONOBLOCK,
                                                        NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                        NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                        NumeroDocumento = ap.NRO_DOCUMENTO,
                                                        Parcela = ap.PARCELA,
                                                        Piso = ap.PISO,
                                                        Sexo = ap.SEXO,
                                                        TelefonoCelular = ap.TEL_CELULAR,
                                                        TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                        TelefonoFijo = ap.TEL_FIJO,
                                                        UsuarioBanco = ap.USUARIO_BANCO,
                                                        SucursalApoderado =
                                                            new Sucursal
                                                            {
                                                                CodigoBanco = sucapo.COD_BCO_CBA,
                                                                IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                                Detalle = sucapo.DESCRIPCION
                                                            }
                                                    },
                                                Ficha =
                                                    new Ficha
                                                    {

                                                        Apellido = c.T_FICHAS.APELLIDO,
                                                        Barrio = c.T_FICHAS.BARRIO,
                                                        Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                        IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                        IdFicha = c.T_FICHAS.ID_FICHA,
                                                        Calle = c.T_FICHAS.CALLE,
                                                        CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                        CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                        CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                        Contacto = c.T_FICHAS.CONTACTO,
                                                        Cuil = c.T_FICHAS.CUIL,
                                                        DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                        TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                        TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                        TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                        TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                        Dpto = c.T_FICHAS.DPTO ?? " ",
                                                        EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                        EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                        EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                        FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                        Mail = c.T_FICHAS.MAIL,
                                                        Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                        Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                        Nombre = c.T_FICHAS.NOMBRE,
                                                        Numero = c.T_FICHAS.NUMERO,
                                                        NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                        Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                        Piso = c.T_FICHAS.PISO ?? " ",
                                                        Sexo = c.T_FICHAS.SEXO,
                                                        TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                        TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                        TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                        TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                        TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                        IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                        NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                        FechaSistema = c.FEC_SIST,
                                                        IdUsuarioSistema = c.ID_USR_SIST,
                                                        UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                        FichaReconversion =
                                                            new FichaReconversion()
                                                            {
                                                                AltaTemprana = ficharecprod.ALTA_TEMPRANA,
                                                                IdEmpresa = ficharecprod.ID_EMPRESA,
                                                                Modalidad = ficharecprod.MODALIDAD,
                                                                IdSede = ficharecprod.ID_SEDE,
                                                                FechaInicioActividad = ficharecprod.AT_FECHA_INICIO,
                                                                FechaFinActividad = ficharecprod.AT_FECHA_CESE,
                                                                IdModalidadAfip = ficharecprod.ID_MOD_CONT_AFIP,
                                                                ModalidadAfip = ficharecprod.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                                IdSubprograma = ficharecprod.ID_SUBPROGRAMA,
                                                                Subprograma = ficharecprod.T_SUBPROGRAMAS.N_SUBPROGRAMA,
                                                                AportesDeLaEmpresa = ficharecprod.APORTES_EMP,
                                                                ApellidoTutor = ficharecprod.APELLIDO_TUTOR,
                                                                NombreTutor = ficharecprod.NOMBRE_TUTOR,
                                                                NroDocumentoTutor = ficharecprod.DNI_TUTOR,
                                                                PuestoTutor = ficharecprod.PUESTO_TUTOR,
                                                                Proyecto =
                                                                new Proyecto
                                                                {
                                                                    IdProyecto = ficharecprod.T_PROYECTOS.ID_PROYECTO,
                                                                    NombreProyecto = ficharecprod.T_PROYECTOS.N_PROYECTO,
                                                                    CantidadAcapacitar = ficharecprod.T_PROYECTOS.CANT_CAPACITAR,
                                                                    FechaInicioProyecto = ficharecprod.T_PROYECTOS.FEC_INICIO,
                                                                    FechaFinProyecto = ficharecprod.T_PROYECTOS.FEC_FIN,
                                                                    MesesDuracionProyecto = ficharecprod.T_PROYECTOS.MESES_DURAC
                                                                },
                                                                Sede =
                                                                new Sede
                                                                {
                                                                    IdSede = ficharecprod.ID_SEDE ?? 0,
                                                                    NombreSede = ficharecprod.T_SEDES.N_SEDE,
                                                                    Calle = ficharecprod.T_SEDES.CALLE,
                                                                    Numero = ficharecprod.T_SEDES.NUMERO,
                                                                    Piso = ficharecprod.T_SEDES.PISO,
                                                                    Dpto = ficharecprod.T_SEDES.DPTO,
                                                                    CodigoPostal = ficharecprod.T_SEDES.CODIGO_POSTAL,
                                                                    NombreLocalidad = ficharecprod.T_SEDES.T_LOCALIDADES.N_LOCALIDAD,
                                                                    ApellidoContacto = ficharecprod.T_SEDES.APE_CONTACTO,
                                                                    NombreContacto = ficharecprod.T_SEDES.NOM_CONTACTO,
                                                                    Telefono = ficharecprod.T_SEDES.TELEFONO,
                                                                    Fax = ficharecprod.T_SEDES.FAX,
                                                                    Email = ficharecprod.T_SEDES.EMAIL
                                                                },
                                                                Empresa =
                                                                    new Empresa
                                                                    {
                                                                        Calle = ficharecprod.T_EMPRESAS.CALLE,
                                                                        CantidadEmpleados =
                                                                            ficharecprod.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                        CodigoActividad =
                                                                            ficharecprod.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                        CodigoPostal = ficharecprod.T_EMPRESAS.CODIGO_POSTAL,
                                                                        Cuit = ficharecprod.T_EMPRESAS.CUIT,
                                                                        DomicilioLaboralIdem =
                                                                            ficharecprod.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                        IdEmpresa = ficharecprod.ID_EMPRESA ?? 0,
                                                                        NombreEmpresa = ficharecprod.T_EMPRESAS.N_EMPRESA,
                                                                        Numero = ficharecprod.T_EMPRESAS.NUMERO,
                                                                        Piso = ficharecprod.T_EMPRESAS.PISO,
                                                                        Telefono = ficharecprod.T_EMPRESAS.PISO,
                                                                        LocalidadEmpresa =
                                                                            new Localidad
                                                                            {
                                                                                IdLocalidad =
                                                                                    ficharecprod.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                NombreLocalidad =
                                                                                    ficharecprod.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                Departamento =
                                                                                    new Departamento
                                                                                    {
                                                                                        IdDepartamento =
                                                                                            ficharecprod.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                        NombreDepartamento =
                                                                                            ficharecprod.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                                            N_DEPARTAMENTO
                                                                                    }
                                                                            },
                                                                        Usuario =
                                                                            new UsuarioEmpresa
                                                                            {
                                                                                ApellidoUsuario =
                                                                                    ficharecprod.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.APELLIDO,
                                                                                Cuil =
                                                                                    ficharecprod.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.CUIL,
                                                                                IdUsuarioEmpresa =
                                                                                    ficharecprod.T_EMPRESAS.ID_USUARIO,
                                                                                Mail =
                                                                                    ficharecprod.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.MAIL,
                                                                                NombreUsuario =
                                                                                    ficharecprod.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.NOMBRE
                                                                            }
                                                                    }
                                                            },
                                                        LocalidadFicha =
                                                            new Localidad
                                                            {
                                                                IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                                NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                Departamento =
                                                                    new Departamento
                                                                    {
                                                                        IdDepartamento =
                                                                            c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                        NombreDepartamento =
                                                                            c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                            N_DEPARTAMENTO
                                                                    }
                                                            }
                                                    }
                                            });
                    return reconversion;
                    #endregion;
                case (int)Enums.Programas.EfectoresSociales:
                    #region EfectoresSociales
                    var efectores = (from c in _mdb.T_BENEFICIARIOS
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                     from fichaefecsoc in
                                         _mdb.T_FICHA_EFEC_SOC.Where(fichaefecsoc => fichaefecsoc.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma && fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                                          && (fichaefecsoc.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fichaefecsoc.MODALIDAD == (int)Enums.Modalidad.Cti && fichaefecsoc.ALTA_TEMPRANA == "S"))
                                          && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                          ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                          ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                          (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                          (modalidad != "T" ? (fichaefecsoc.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                          (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                          (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                          (altaTemprana != "T" ? fichaefecsoc.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                          (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                          && (fic.ID_ETAPA == idEtapa || idEtapa == 0)
                                     select
                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {

                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                     FichaEfectores =
                                                         new FichaEfectoresSociales()
                                                         {
                                                             AltaTemprana = fichaefecsoc.ALTA_TEMPRANA,
                                                             IdEmpresa = fichaefecsoc.ID_EMPRESA,
                                                             Modalidad = fichaefecsoc.MODALIDAD,
                                                             IdSede = fichaefecsoc.ID_SEDE,
                                                             FechaInicioActividad = fichaefecsoc.AT_FECHA_INICIO,
                                                             FechaFinActividad = fichaefecsoc.AT_FECHA_CESE,
                                                             IdModalidadAfip = fichaefecsoc.ID_MOD_CONT_AFIP,
                                                             ModalidadAfip = fichaefecsoc.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                             IdSubprograma = fichaefecsoc.ID_SUBPROGRAMA,
                                                             Subprograma = fichaefecsoc.T_SUBPROGRAMAS.N_SUBPROGRAMA,
                                                             AportesDeLaEmpresa = fichaefecsoc.APORTES_EMP,
                                                             ApellidoTutor = fichaefecsoc.APELLIDO_TUTOR,
                                                             NombreTutor = fichaefecsoc.NOMBRE_TUTOR,
                                                             NroDocumentoTutor = fichaefecsoc.DNI_TUTOR,
                                                             PuestoTutor = fichaefecsoc.PUESTO_TUTOR,
                                                             Proyecto =
                                                             new Proyecto
                                                             {
                                                                 IdProyecto = fichaefecsoc.T_PROYECTOS.ID_PROYECTO,
                                                                 NombreProyecto = fichaefecsoc.T_PROYECTOS.N_PROYECTO,
                                                                 CantidadAcapacitar = fichaefecsoc.T_PROYECTOS.CANT_CAPACITAR,
                                                                 FechaInicioProyecto = fichaefecsoc.T_PROYECTOS.FEC_INICIO,
                                                                 FechaFinProyecto = fichaefecsoc.T_PROYECTOS.FEC_FIN,
                                                                 MesesDuracionProyecto = fichaefecsoc.T_PROYECTOS.MESES_DURAC
                                                             },
                                                             Sede =
                                                             new Sede
                                                             {
                                                                 IdSede = fichaefecsoc.ID_SEDE ?? 0,
                                                                 NombreSede = fichaefecsoc.T_SEDES.N_SEDE,
                                                                 Calle = fichaefecsoc.T_SEDES.CALLE,
                                                                 Numero = fichaefecsoc.T_SEDES.NUMERO,
                                                                 Piso = fichaefecsoc.T_SEDES.PISO,
                                                                 Dpto = fichaefecsoc.T_SEDES.DPTO,
                                                                 CodigoPostal = fichaefecsoc.T_SEDES.CODIGO_POSTAL,
                                                                 NombreLocalidad = fichaefecsoc.T_SEDES.T_LOCALIDADES.N_LOCALIDAD,
                                                                 ApellidoContacto = fichaefecsoc.T_SEDES.APE_CONTACTO,
                                                                 NombreContacto = fichaefecsoc.T_SEDES.NOM_CONTACTO,
                                                                 Telefono = fichaefecsoc.T_SEDES.TELEFONO,
                                                                 Fax = fichaefecsoc.T_SEDES.FAX,
                                                                 Email = fichaefecsoc.T_SEDES.EMAIL
                                                             },
                                                             Empresa =
                                                                 new Empresa
                                                                 {
                                                                     Calle = fichaefecsoc.T_EMPRESAS.CALLE,
                                                                     CantidadEmpleados =
                                                                         fichaefecsoc.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                     CodigoActividad =
                                                                         fichaefecsoc.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                     CodigoPostal = fichaefecsoc.T_EMPRESAS.CODIGO_POSTAL,
                                                                     Cuit = fichaefecsoc.T_EMPRESAS.CUIT,
                                                                     DomicilioLaboralIdem =
                                                                         fichaefecsoc.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                     IdEmpresa = fichaefecsoc.ID_EMPRESA ?? 0,
                                                                     NombreEmpresa = fichaefecsoc.T_EMPRESAS.N_EMPRESA,
                                                                     Numero = fichaefecsoc.T_EMPRESAS.NUMERO,
                                                                     Piso = fichaefecsoc.T_EMPRESAS.PISO,
                                                                     Telefono = fichaefecsoc.T_EMPRESAS.PISO,
                                                                     LocalidadEmpresa =
                                                                         new Localidad
                                                                         {
                                                                             IdLocalidad =
                                                                                 fichaefecsoc.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                             NombreLocalidad =
                                                                                 fichaefecsoc.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                             Departamento =
                                                                                 new Departamento
                                                                                 {
                                                                                     IdDepartamento =
                                                                                         fichaefecsoc.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                     NombreDepartamento =
                                                                                         fichaefecsoc.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                                         N_DEPARTAMENTO
                                                                                 }
                                                                         },
                                                                     Usuario =
                                                                         new UsuarioEmpresa
                                                                         {
                                                                             ApellidoUsuario =
                                                                                 fichaefecsoc.T_EMPRESAS.
                                                                                 T_USUARIOS_EMPRESA.APELLIDO,
                                                                             Cuil =
                                                                                 fichaefecsoc.T_EMPRESAS.
                                                                                 T_USUARIOS_EMPRESA.CUIL,
                                                                             IdUsuarioEmpresa =
                                                                                 fichaefecsoc.T_EMPRESAS.ID_USUARIO,
                                                                             Mail =
                                                                                 fichaefecsoc.T_EMPRESAS.
                                                                                 T_USUARIOS_EMPRESA.MAIL,
                                                                             NombreUsuario =
                                                                                 fichaefecsoc.T_EMPRESAS.
                                                                                 T_USUARIOS_EMPRESA.NOMBRE
                                                                         }
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                         N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return efectores;
                    #endregion

                default:
                    return null;


            }
        }


/// <summary>
/// 03/07/2013 - DI CAMPLI LEANDRO
/// </summary>
/// <param name="nombre"></param>
/// <param name="apellido"></param>
/// <param name="cuil"></param>
/// <param name="numeroDocumento"></param>
/// <param name="idPrograma"></param>
/// <param name="conApoderados"></param>
/// <param name="modalidad"></param>
/// <param name="discapacitado"></param>
/// <param name="altaTemprana"></param>
/// <param name="idEstado"></param>
/// <param name="apellidonombreapoderado"></param>
/// <param name="idEtapa"></param>
/// <returns></returns>
        private IQueryable<IBeneficiario> QBeneficiarioCompletoConCuenta(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa)
        {

            switch (idPrograma)
            {
                case (int)Enums.Programas.Terciaria:

                    #region terciarios

                    var fichaterc = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     from fiterc in
                                         _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     //from fiUniv in
                                     //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                         ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma &&
                                          fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                          &&
                                          (
                                              (
                                                  (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                                  ||
                                                  (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                              )
                                          )
                                         && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                        ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                        ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                        (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                        (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                        (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                        (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                        && (fic.ID_ETAPA == idEtapa || idEtapa == 0)


                                     select

                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {

                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,

                                                     //Fichas Terciarias
                                                     PromedioTerciaria = fiterc.PROMEDIO,
                                                     OtraCarreraTerciaria = fiterc.OTRA_CARRERA,
                                                     OtraInstitucionTerciaria = fiterc.OTRA_INSTITUCION,
                                                     IdCarreraTerciaria = fiterc.ID_CARRERA,
                                                     IdEscuelaTerciaria = fiterc.ID_ESCUELA,
                                                     IdLocalidadEscTerc = fiterc.T_ESCUELAS.ID_LOCALIDAD,
                                                     NombreEscuela = fiterc.T_ESCUELAS.N_ESCUELA,
                                                     OtroSectorTerciaria = fiterc.OTRO_SECTOR,
                                                     EscuelaFicha =
                                                         new Escuela
                                                         {
                                                             Anexo = fiterc.T_ESCUELAS.ANEXO,
                                                             Barrio = fiterc.T_ESCUELAS.BARRIO,
                                                             Cue = fiterc.T_ESCUELAS.CUE,
                                                             Id_Escuela = fiterc.ID_ESCUELA ?? 0,
                                                             Nombre_Escuela = fiterc.T_ESCUELAS.N_ESCUELA,
                                                             LocalidadEscuela =
                                                                 new Localidad
                                                                 {
                                                                     IdLocalidad = fiterc.T_ESCUELAS.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = fiterc.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                         {
                                                                             IdDepartamento = fiterc.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                             NombreDepartamento = fiterc.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                         }
                                                                 }
                                                         },
                                                     CarreraFicha =
                                                         new Carrera
                                                         {
                                                             IdCarrera = fiterc.ID_CARRERA ?? 0,
                                                             NombreCarrera = fiterc.T_CARRERAS.N_CARRERA,
                                                             IdSector = fiterc.T_CARRERAS.ID_SECTOR,
                                                             SectorCarrera =
                                                                 new Sector
                                                                 {
                                                                     IdSector = fiterc.T_CARRERAS.ID_SECTOR ?? 0,
                                                                     NombreSector = fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR
                                                                 },
                                                             IdNivel = fiterc.T_CARRERAS.ID_NIVEL,
                                                             NivelCarrera =
                                                                 new Nivel
                                                                 {
                                                                     IdNivel = fiterc.T_CARRERAS.ID_NIVEL ?? 0,
                                                                     NombreNivel = fiterc.T_CARRERAS.T_NIVEL.N_NIVEL
                                                                 },
                                                             IdInstitucion = fiterc.T_CARRERAS.ID_INSTITUCION,
                                                             InstitucionCarrera =
                                                                 new Institucion
                                                                 {
                                                                     IdInstitucion = fiterc.T_CARRERAS.ID_INSTITUCION ?? 0,
                                                                     NombreInstitucion = fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return fichaterc;
                    #endregion

                case (int)Enums.Programas.Universitaria:
                    #region univeristarios
                    var fichauniv = (from c in _mdb.T_BENEFICIARIOS
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     from fiUniv in
                                         _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()

                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma &&
                                          fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                          &&
                                          (
                                              (
                                                  (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                                  ||
                                                  (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                              )
                                          ) 
                                           && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                                ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                                ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                                (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                                (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                                     select
                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {
                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,

                                                     // Fichas Universitarias
                                                     PromedioUniversitaria = fiUniv.PROMEDIO,
                                                     OtraCarreraUniversitaria = fiUniv.OTRA_CARRERA,
                                                     OtraInstitucionUniversitaria = fiUniv.OTRA_INSTITUCION,
                                                     IdCarreraUniversitaria = fiUniv.ID_CARRERA,
                                                     IdEscuelaUniversitaria = fiUniv.ID_ESCUELA,
                                                     OtroSectorUniversitaria = fiUniv.OTRO_SECTOR,
                                                     EscuelaFicha =
                                                         new Escuela
                                                         {
                                                             Anexo = fiUniv.T_ESCUELAS.ANEXO,
                                                             Barrio = fiUniv.T_ESCUELAS.BARRIO,
                                                             Cue = fiUniv.T_ESCUELAS.CUE,
                                                             Id_Escuela = fiUniv.ID_ESCUELA ?? 0,
                                                             Nombre_Escuela = fiUniv.T_ESCUELAS.N_ESCUELA,
                                                             Id_Localidad = fiUniv.T_ESCUELAS.ID_LOCALIDAD,
                                                             LocalidadEscuela =
                                                                 new Localidad
                                                                 {
                                                                     IdLocalidad = fiUniv.T_ESCUELAS.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = fiUniv.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                         {
                                                                             IdDepartamento = fiUniv.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                             NombreDepartamento = fiUniv.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                         }
                                                                 }
                                                         },
                                                     CarreraFicha =
                                                         new Carrera
                                                         {
                                                             IdCarrera = fiUniv.ID_CARRERA ?? 0,
                                                             NombreCarrera = fiUniv.T_CARRERAS.N_CARRERA,
                                                             IdSector = fiUniv.T_CARRERAS.ID_SECTOR,
                                                             SectorCarrera =
                                                                 new Sector
                                                                 {
                                                                     IdSector = fiUniv.T_CARRERAS.ID_SECTOR ?? 0,
                                                                     NombreSector = fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR
                                                                 },
                                                             IdNivel = fiUniv.T_CARRERAS.ID_NIVEL,
                                                             NivelCarrera =
                                                                 new Nivel
                                                                 {
                                                                     IdNivel = fiUniv.T_CARRERAS.ID_NIVEL ?? 0,
                                                                     NombreNivel = fiUniv.T_CARRERAS.T_NIVEL.N_NIVEL
                                                                 },
                                                             IdInstitucion = fiUniv.T_CARRERAS.ID_INSTITUCION,
                                                             InstitucionCarrera =
                                                                 new Institucion
                                                                 {
                                                                     IdInstitucion = fiUniv.T_CARRERAS.ID_INSTITUCION ?? 0,
                                                                     NombreInstitucion = fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return fichauniv;
                    #endregion
                case (int)Enums.Programas.Ppp:
                    #region Planpp
                    var ppp = (from c in _mdb.T_BENEFICIARIOS/*bene*/
                               join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                               //from fiterc in
                               //    _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               //from fiUniv in
                               //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from fichappp in
                                   _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                               from ap in
                                   _mdb.T_APODERADOS.Where(
                                   ap =>
                                   ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                               from sucapo in
                                   _mdb.T_TABLAS_BCO_CBA.Where(
                                       sucapo =>
                                       sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                   DefaultIfEmpty()
                               where (idPrograma == 0 ? c.ID_PROGRAMA > 0 : c.ID_PROGRAMA == idPrograma) && fic.TIPO_FICHA == 3 &&
                                       fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                       && (fichappp.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fichappp.MODALIDAD == (int)Enums.Modalidad.Cti && fichappp.ALTA_TEMPRANA == "S"))
                                       &&
                                       (
                                           (
                                               (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                               ||
                                               (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                           )
                                       )
                                     && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                    ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                    ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                    (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                    (modalidad != "T" ? (fichappp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                    (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                    (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                    (altaTemprana != "T" ? fichappp.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                    (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                    && (fic.ID_ETAPA == idEtapa || idEtapa == 0)


                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA,
                                       Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                       MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       Notificado = c.NOTIFICADO == "S" ? true : false,
                                       Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                       SucursalDescripcion = suc.DESCRIPCION,
                                       FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                       IdSucursal = cu.ID_SUCURSAL,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       Apoderado =
                                           new Apoderado
                                           {
                                               IdApoderadoNullable = ap.ID_APODERADO,
                                               Nombre = ap.NOMBRE,
                                               Apellido = ap.APELLIDO,
                                               Barrio = ap.BARRIO,
                                               Calle = ap.CALLE,
                                               Cbu = ap.CBU,
                                               CodigoPostal = ap.CODIGO_POSTAL,
                                               Cuil = ap.CUIL,
                                               Dpto = ap.DPTO,
                                               EntreCalles = ap.ENTRECALLES,
                                               FechaNacimiento = ap.FER_NAC,
                                               FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                               IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                               IdSistema = ap.ID_SISTEMA ?? 0,
                                               IdSucursal = ap.ID_SUCURSAL_BCO,
                                               Mail = ap.MAIL,
                                               Numero = ap.NUMERO,
                                               IdLocalidad = ap.ID_LOCALIDAD,
                                               LocalidadApoderado =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   },
                                               Manzana = ap.MANZANA,
                                               Monoblock = ap.MONOBLOCK,
                                               NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                               NumeroDocumento = ap.NRO_DOCUMENTO,
                                               Parcela = ap.PARCELA,
                                               Piso = ap.PISO,
                                               Sexo = ap.SEXO,
                                               TelefonoCelular = ap.TEL_CELULAR,
                                               TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                               TelefonoFijo = ap.TEL_FIJO,
                                               UsuarioBanco = ap.USUARIO_BANCO,
                                               SucursalApoderado =
                                                   new Sucursal
                                                   {
                                                       CodigoBanco = sucapo.COD_BCO_CBA,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                       Detalle = sucapo.DESCRIPCION
                                                   }
                                           },
                                       Ficha =
                                           new Ficha
                                           {

                                               Apellido = c.T_FICHAS.APELLIDO,
                                               Barrio = c.T_FICHAS.BARRIO,
                                               Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                               IdFicha = c.T_FICHAS.ID_FICHA,
                                               Calle = c.T_FICHAS.CALLE,
                                               CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                               CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                               CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = c.T_FICHAS.DPTO ?? " ",
                                               EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                               EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                               FechaNacimiento = c.T_FICHAS.FER_NAC,
                                               Mail = c.T_FICHAS.MAIL,
                                               Manzana = c.T_FICHAS.MANZANA ?? " ",
                                               Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                               Nombre = c.T_FICHAS.NOMBRE,
                                               Numero = c.T_FICHAS.NUMERO,
                                               NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                               Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                               Piso = c.T_FICHAS.PISO ?? " ",
                                               Sexo = c.T_FICHAS.SEXO,
                                               TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                               TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                               TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                               TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                               IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                               NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               FichaPpp =
                                                   new FichaPPP
                                                   {
                                                       AltaTemprana = fichappp.ALTA_TEMPRANA == null ? "N" : "S",
                                                       FechaInicioActividad = fichappp.AT_FECHA_INICIO,
                                                       FechaFinActividad = fichappp.AT_FECHA_CESE,
                                                       IdModalidadAfip = fichappp.ID_MOD_CONT_AFIP,
                                                       ModalidadAfip = fichappp.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                       Finalizado = (fichappp.FINALIZADO == "S" ? true : false),
                                                       Cursando = (fichappp.CURSANDO == "S" ? true : false),
                                                       IdEmpresa = fichappp.ID_EMPRESA,
                                                       DeseaTermNivel = (fichappp.DESEA_TERM_NIVEL == "S" ? true : false),
                                                       IdNivelEscolaridad = fichappp.ID_NIVEL_ESCOLARIDAD,
                                                       Modalidad = fichappp.MODALIDAD,
                                                       IdSede = fichappp.ID_SEDE,
                                                       Tareas = fichappp.TAREAS,
                                                       Empresa =
                                                           new Empresa
                                                           {
                                                               Calle = fichappp.T_EMPRESAS.CALLE,
                                                               CantidadEmpleados = fichappp.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                               CodigoActividad = fichappp.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                               CodigoPostal = fichappp.T_EMPRESAS.CODIGO_POSTAL,
                                                               Cuit = fichappp.T_EMPRESAS.CUIT,
                                                               DomicilioLaboralIdem = fichappp.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                               IdEmpresa = fichappp.ID_EMPRESA ?? 0,
                                                               NombreEmpresa = fichappp.T_EMPRESAS.N_EMPRESA,
                                                               Numero = fichappp.T_EMPRESAS.NUMERO,
                                                               Piso = fichappp.T_EMPRESAS.PISO,
                                                               Telefono = fichappp.T_EMPRESAS.PISO,
                                                               IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD,
                                                               LocalidadEmpresa =
                                                                   new Localidad
                                                                   {
                                                                       IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                       NombreLocalidad = fichappp.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                       Departamento =
                                                                           new Departamento
                                                                           {
                                                                               IdDepartamento =
                                                                                   fichappp.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                               NombreDepartamento =
                                                                                   fichappp.T_EMPRESAS.
                                                                                   T_LOCALIDADES.
                                                                                   T_DEPARTAMENTOS.
                                                                                   N_DEPARTAMENTO
                                                                           }
                                                                   },
                                                               Usuario =
                                                                   new UsuarioEmpresa
                                                                   {
                                                                       ApellidoUsuario = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.APELLIDO,
                                                                       Cuil = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.CUIL,
                                                                       IdUsuarioEmpresa = fichappp.T_EMPRESAS.ID_USUARIO,
                                                                       Mail = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.MAIL,
                                                                       NombreUsuario = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.NOMBRE
                                                                   }
                                                           }
                                                   },
                                               LocalidadFicha =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                   N_DEPARTAMENTO
                                                           }
                                                   }
                                           }
                                   });
                    return ppp;
                    #endregion
                case (int)Enums.Programas.PppProf:
                    #region Ppprof
                    var pppProf = (from c in _mdb.T_BENEFICIARIOS 
                                   join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                   from cu in
                                       _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                   from suc in
                                       _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                   from mon in
                                       _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                   from iva in
                                       _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                   from nac in
                                       _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                   from fichapppProf in
                                       _mdb.T_FICHA_PPP_PROF.Where(fichapppProf => fichapppProf.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                                   from ap in
                                       _mdb.T_APODERADOS.Where(
                                       ap =>
                                       ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                   from sucapo in
                                       _mdb.T_TABLAS_BCO_CBA.Where(
                                           sucapo =>
                                           sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                       DefaultIfEmpty()
                                   where fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                        && (fichapppProf.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fichapppProf.MODALIDAD == (int)Enums.Modalidad.Cti && fichapppProf.ALTA_TEMPRANA == "S"))
                                        &&
                                        (
                                            (
                                                (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                                ||
                                                (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                            )
                                        )
                                   && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                        ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                        ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                        (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                        (modalidad != "T" ? (fichapppProf.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                        (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                        (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                        (altaTemprana != "T" ? fichapppProf.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                        (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                        && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                                   select
                                       new Beneficiario
                                       {
                                           IdBeneficiario = c.ID_BENEFICIARIO,
                                           IdEstado = c.ID_ESTADO ?? 0,
                                           FechaSistema = c.FEC_SIST,
                                           IdFicha = c.ID_FICHA ?? 0,
                                           IdPrograma = c.ID_PROGRAMA ?? 0,
                                           IdUsuarioSistema = c.ID_USR_SIST,
                                           IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                           NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                           CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                           CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                           CondicionIva = iva.COD_BCO_CBA ?? "0",
                                           Nacionalidad = c.NACIONALIDAD ?? 0,
                                           Residente = c.RESIDENTE,
                                           TipoPersona = c.TIPO_PERSONA,
                                           CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                           CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                           NombreEstado = c.T_ESTADOS.N_ESTADO,
                                           Cbu = cu.CBU ?? "",
                                           ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                           NumeroCuenta = cu.NRO_CTA,
                                           Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                           MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                           TieneApoderado = c.TIENE_APODERADO,
                                           FechaNotificacion = c.FEC_NOTIF,
                                           Notificado = c.NOTIFICADO == "S" ? true : false,
                                           Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                           SucursalDescripcion = suc.DESCRIPCION,
                                           FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                           IdSucursal = cu.ID_SUCURSAL,
                                           UsuarioSistema = c.T_USUARIOS.LOGIN,
                                           FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                           FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                           Apoderado =
                                               new Apoderado
                                               {
                                                   IdApoderadoNullable = ap.ID_APODERADO,
                                                   Nombre = ap.NOMBRE,
                                                   Apellido = ap.APELLIDO,
                                                   Barrio = ap.BARRIO,
                                                   Calle = ap.CALLE,
                                                   Cbu = ap.CBU,
                                                   CodigoPostal = ap.CODIGO_POSTAL,
                                                   Cuil = ap.CUIL,
                                                   Dpto = ap.DPTO,
                                                   EntreCalles = ap.ENTRECALLES,
                                                   FechaNacimiento = ap.FER_NAC,
                                                   FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                   IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                   IdSistema = ap.ID_SISTEMA ?? 0,
                                                   IdSucursal = ap.ID_SUCURSAL_BCO,
                                                   Mail = ap.MAIL,
                                                   Numero = ap.NUMERO,
                                                   IdLocalidad = ap.ID_LOCALIDAD,
                                                   LocalidadApoderado =
                                                       new Localidad
                                                       {
                                                           IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                           NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                           Departamento =
                                                               new Departamento
                                                               {
                                                                   IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                   NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                               }
                                                       },
                                                   Manzana = ap.MANZANA,
                                                   Monoblock = ap.MONOBLOCK,
                                                   NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                   NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                   NumeroDocumento = ap.NRO_DOCUMENTO,
                                                   Parcela = ap.PARCELA,
                                                   Piso = ap.PISO,
                                                   Sexo = ap.SEXO,
                                                   TelefonoCelular = ap.TEL_CELULAR,
                                                   TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                   TelefonoFijo = ap.TEL_FIJO,
                                                   UsuarioBanco = ap.USUARIO_BANCO,
                                                   SucursalApoderado =
                                                       new Sucursal
                                                       {
                                                           CodigoBanco = sucapo.COD_BCO_CBA,
                                                           IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                           Detalle = sucapo.DESCRIPCION
                                                       }
                                               },
                                           Ficha =
                                               new Ficha
                                               {
                                                   Apellido = c.T_FICHAS.APELLIDO,
                                                   Barrio = c.T_FICHAS.BARRIO,
                                                   Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                   IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                   IdFicha = c.T_FICHAS.ID_FICHA,
                                                   Calle = c.T_FICHAS.CALLE,
                                                   CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                   CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                   CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                   Contacto = c.T_FICHAS.CONTACTO,
                                                   Cuil = c.T_FICHAS.CUIL,
                                                   DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                   TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                   TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                   TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                   TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                   Dpto = c.T_FICHAS.DPTO ?? " ",
                                                   EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                   EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                   EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                   FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                   Mail = c.T_FICHAS.MAIL,
                                                   Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                   Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                   Nombre = c.T_FICHAS.NOMBRE,
                                                   Numero = c.T_FICHAS.NUMERO,
                                                   NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                   Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                   Piso = c.T_FICHAS.PISO ?? " ",
                                                   Sexo = c.T_FICHAS.SEXO,
                                                   TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                   TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                   TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                   TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                   TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                   IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                   NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                   FechaSistema = c.FEC_SIST,
                                                   IdUsuarioSistema = c.ID_USR_SIST,
                                                   UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                   FichaPppp =
                                                       new FichaPPPP
                                                       {
                                                           AltaTemprana = fichapppProf.ALTA_TEMPRANA,
                                                           Promedio = fichapppProf.PROMEDIO,
                                                           IdTitulo = fichapppProf.ID_TITULO,
                                                           FechaEgreso = fichapppProf.FECHA_EGRESO,
                                                           IdEmpresa = fichapppProf.ID_EMPRESA,
                                                           Modalidad = fichapppProf.MODALIDAD,
                                                           IdSede = fichapppProf.ID_SEDE,
                                                           Tareas = fichapppProf.TAREAS,
                                                           FechaInicioActividad = fichapppProf.AT_FECHA_INICIO,
                                                           FechaFinActividad = fichapppProf.AT_FECHA_CESE,
                                                           IdModalidadAFIP = fichapppProf.ID_MOD_CONT_AFIP,
                                                           ModalidadAFIP = fichapppProf.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                           Empresa =
                                                               new Empresa
                                                               {
                                                                   Calle = fichapppProf.T_EMPRESAS.CALLE,
                                                                   CantidadEmpleados = fichapppProf.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                   CodigoActividad = fichapppProf.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                   CodigoPostal = fichapppProf.T_EMPRESAS.CODIGO_POSTAL,
                                                                   Cuit = fichapppProf.T_EMPRESAS.CUIT,
                                                                   DomicilioLaboralIdem = fichapppProf.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                   IdEmpresa = fichapppProf.ID_EMPRESA ?? 0,
                                                                   NombreEmpresa = fichapppProf.T_EMPRESAS.N_EMPRESA,
                                                                   Numero = fichapppProf.T_EMPRESAS.NUMERO,
                                                                   Piso = fichapppProf.T_EMPRESAS.PISO,
                                                                   Telefono = fichapppProf.T_EMPRESAS.PISO,
                                                                   IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD,
                                                                   LocalidadEmpresa =
                                                                       new Localidad
                                                                       {
                                                                           IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                           NombreLocalidad = fichapppProf.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                           Departamento =
                                                                               new Departamento
                                                                               {
                                                                                   IdDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                   NombreDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                               }
                                                                       },
                                                                   IdUsuario = fichapppProf.T_EMPRESAS.ID_USUARIO,
                                                                   Usuario =
                                                                       new UsuarioEmpresa
                                                                       {
                                                                           ApellidoUsuario =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.APELLIDO,
                                                                           Cuil =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.CUIL,
                                                                           IdUsuarioEmpresa =
                                                                               fichapppProf.T_EMPRESAS.ID_USUARIO ?? 0,
                                                                           Mail =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.MAIL,
                                                                           NombreUsuario =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.NOMBRE
                                                                       }
                                                               }
                                                       },
                                                   LocalidadFicha =
                                                       new Localidad
                                                       {
                                                           IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                           NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                           Departamento =
                                                               new Departamento
                                                               {
                                                                   IdDepartamento =
                                                                       c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                   NombreDepartamento =
                                                                       c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                       N_DEPARTAMENTO
                                                               }
                                                       }
                                               }
                                       });
                    return pppProf;
                    #endregion
                case (int)Enums.Programas.Vat:
                    #region VAT
                    var vat = (from c in _mdb.T_BENEFICIARIOS
                               join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from fichaVat in
                                   _mdb.T_FICHA_VAT.Where(fichaVat => fichaVat.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                               from ap in
                                   _mdb.T_APODERADOS.Where(
                                   ap =>
                                   ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                               from sucapo in
                                   _mdb.T_TABLAS_BCO_CBA.Where(
                                       sucapo =>
                                       sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                   DefaultIfEmpty()
                               where   fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                       && (fichaVat.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fichaVat.MODALIDAD == (int)Enums.Modalidad.Cti && fichaVat.ALTA_TEMPRANA == "S"))
                                       &&
                                       (
                                           (
                                               (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                               ||
                                               (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                           )
                                       )
                                    && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                        ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                        ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                        (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                        (modalidad != "T" ? (fichaVat.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                        (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                        (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                        (altaTemprana != "T" ? fichaVat.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                        (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                        && (fic.ID_ETAPA == idEtapa || idEtapa == 0)
                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA,
                                       Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                       MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       Notificado = c.NOTIFICADO == "S" ? true : false,
                                       Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                       SucursalDescripcion = suc.DESCRIPCION,
                                       FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                       IdSucursal = cu.ID_SUCURSAL,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       Apoderado =
                                           new Apoderado
                                           {
                                               IdApoderadoNullable = ap.ID_APODERADO,
                                               Nombre = ap.NOMBRE,
                                               Apellido = ap.APELLIDO,
                                               Barrio = ap.BARRIO,
                                               Calle = ap.CALLE,
                                               Cbu = ap.CBU,
                                               CodigoPostal = ap.CODIGO_POSTAL,
                                               Cuil = ap.CUIL,
                                               Dpto = ap.DPTO,
                                               EntreCalles = ap.ENTRECALLES,
                                               FechaNacimiento = ap.FER_NAC,
                                               FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                               IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                               IdSistema = ap.ID_SISTEMA ?? 0,
                                               IdSucursal = ap.ID_SUCURSAL_BCO,
                                               Mail = ap.MAIL,
                                               Numero = ap.NUMERO,
                                               IdLocalidad = ap.ID_LOCALIDAD,
                                               LocalidadApoderado =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento =
                                                                   ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento =
                                                                   ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   },
                                               Manzana = ap.MANZANA,
                                               Monoblock = ap.MONOBLOCK,
                                               NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                               NumeroDocumento = ap.NRO_DOCUMENTO,
                                               Parcela = ap.PARCELA,
                                               Piso = ap.PISO,
                                               Sexo = ap.SEXO,
                                               TelefonoCelular = ap.TEL_CELULAR,
                                               TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                               TelefonoFijo = ap.TEL_FIJO,
                                               UsuarioBanco = ap.USUARIO_BANCO,
                                               SucursalApoderado =
                                                   new Sucursal
                                                   {
                                                       CodigoBanco = sucapo.COD_BCO_CBA,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                       Detalle = sucapo.DESCRIPCION
                                                   }
                                           },
                                       Ficha =
                                           new Ficha
                                           {
                                               Apellido = c.T_FICHAS.APELLIDO,
                                               Barrio = c.T_FICHAS.BARRIO,
                                               Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                               IdFicha = c.T_FICHAS.ID_FICHA,
                                               Calle = c.T_FICHAS.CALLE,
                                               CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                               CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                               CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = c.T_FICHAS.DPTO ?? " ",
                                               EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                               EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                               FechaNacimiento = c.T_FICHAS.FER_NAC,
                                               Mail = c.T_FICHAS.MAIL,
                                               Manzana = c.T_FICHAS.MANZANA ?? " ",
                                               Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                               Nombre = c.T_FICHAS.NOMBRE,
                                               Numero = c.T_FICHAS.NUMERO,
                                               NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                               Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                               Piso = c.T_FICHAS.PISO ?? " ",
                                               Sexo = c.T_FICHAS.SEXO,
                                               TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                               TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                               TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                               TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                               IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                               NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               FichaVat =
                                                            new FichaVAT
                                                            {
                                                                AltaTemprana = fichaVat.ALTA_TEMPRANA,
                                                                AniosAportes = fichaVat.ANIOS_APORTES,
                                                                Finalizado = (fichaVat.FINALIZADO == "S" ? true : false),
                                                                Cursando = (fichaVat.CURSANDO == "S" ? true : false),
                                                                IdEmpresa = fichaVat.ID_EMPRESA,
                                                                IdNivelEscolaridad = fichaVat.ID_NIVEL_ESCOLARIDAD,
                                                                Modalidad = fichaVat.MODALIDAD,
                                                                IdSede = fichaVat.ID_SEDE,
                                                                Tareas = fichaVat.TAREAS,
                                                                FechaInicioActividad = fichaVat.AT_FECHA_INICIO,
                                                                FechaFinActividad = fichaVat.AT_FECHA_CESE,
                                                                IdModalidadAFIP = fichaVat.ID_MOD_CONT_AFIP,
                                                                ModalidadAFIP = fichaVat.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                                Empresa =
                                                                    new Empresa
                                                                    {
                                                                        Calle = fichaVat.T_EMPRESAS.CALLE,
                                                                        CantidadEmpleados = fichaVat.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                        CodigoActividad = fichaVat.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                        CodigoPostal = fichaVat.T_EMPRESAS.CODIGO_POSTAL,
                                                                        Cuit = fichaVat.T_EMPRESAS.CUIT,
                                                                        DomicilioLaboralIdem = fichaVat.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                        IdEmpresa = fichaVat.ID_EMPRESA ?? 0,
                                                                        NombreEmpresa = fichaVat.T_EMPRESAS.N_EMPRESA,
                                                                        Numero = fichaVat.T_EMPRESAS.NUMERO,
                                                                        Piso = fichaVat.T_EMPRESAS.PISO,
                                                                        Telefono = fichaVat.T_EMPRESAS.PISO,
                                                                        IdLocalidad = fichaVat.T_EMPRESAS.ID_LOCALIDAD,
                                                                        LocalidadEmpresa =
                                                                            new Localidad
                                                                            {
                                                                                IdLocalidad = fichaVat.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                NombreLocalidad = fichaVat.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                Departamento =
                                                                                    new Departamento
                                                                                    {
                                                                                        IdDepartamento =
                                                                                            fichaVat.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ??
                                                                                            0,
                                                                                        NombreDepartamento = fichaVat.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                    }
                                                                            },
                                                                        IdUsuario = fichaVat.T_EMPRESAS.ID_USUARIO,
                                                                        Usuario =
                                                                            new UsuarioEmpresa
                                                                            {
                                                                                ApellidoUsuario = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.APELLIDO,
                                                                                Cuil = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.CUIL,
                                                                                IdUsuarioEmpresa = fichaVat.T_EMPRESAS.ID_USUARIO ?? 0,
                                                                                Mail = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.MAIL,
                                                                                NombreUsuario = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.NOMBRE
                                                                            }
                                                                    }
                                                            },
                                               LocalidadFicha =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   }
                                           }
                                   });
                    return vat;
                    #endregion

                default:
                    return null;


            }
        }


        private IQueryable<IBeneficiario> QBeneficiarioCompletoSinCuenta(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa)
        {

            switch (idPrograma)
            {
                case (int)Enums.Programas.Terciaria:

                    #region terciarios

                    var fichaterc = (from c in _mdb.T_BENEFICIARIOS 
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     from fiterc in
                                         _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     //from fiUniv in
                                     //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                         ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma &&
                                            fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo
                                          //fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                          &&
                                          (
                                             (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                                              cu.NRO_CTA == null)
                                             ||
                                             (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                                              ap.NRO_CUENTA_BCO == null)
                                         )
                                         && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                        ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                        ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                        (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                        (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                        (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                        (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                        && (fic.ID_ETAPA == idEtapa || idEtapa == 0)


                                     select

                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {

                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,

                                                     //Fichas Terciarias
                                                     PromedioTerciaria = fiterc.PROMEDIO,
                                                     OtraCarreraTerciaria = fiterc.OTRA_CARRERA,
                                                     OtraInstitucionTerciaria = fiterc.OTRA_INSTITUCION,
                                                     IdCarreraTerciaria = fiterc.ID_CARRERA,
                                                     IdEscuelaTerciaria = fiterc.ID_ESCUELA,
                                                     IdLocalidadEscTerc = fiterc.T_ESCUELAS.ID_LOCALIDAD,
                                                     NombreEscuela = fiterc.T_ESCUELAS.N_ESCUELA,
                                                     OtroSectorTerciaria = fiterc.OTRO_SECTOR,
                                                     EscuelaFicha =
                                                         new Escuela
                                                         {
                                                             Anexo = fiterc.T_ESCUELAS.ANEXO,
                                                             Barrio = fiterc.T_ESCUELAS.BARRIO,
                                                             Cue = fiterc.T_ESCUELAS.CUE,
                                                             Id_Escuela = fiterc.ID_ESCUELA ?? 0,
                                                             Nombre_Escuela = fiterc.T_ESCUELAS.N_ESCUELA,
                                                             LocalidadEscuela =
                                                                 new Localidad
                                                                 {
                                                                     IdLocalidad = fiterc.T_ESCUELAS.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = fiterc.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                         {
                                                                             IdDepartamento = fiterc.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                             NombreDepartamento = fiterc.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                         }
                                                                 }
                                                         },
                                                     CarreraFicha =
                                                         new Carrera
                                                         {
                                                             IdCarrera = fiterc.ID_CARRERA ?? 0,
                                                             NombreCarrera = fiterc.T_CARRERAS.N_CARRERA,
                                                             IdSector = fiterc.T_CARRERAS.ID_SECTOR,
                                                             SectorCarrera =
                                                                 new Sector
                                                                 {
                                                                     IdSector = fiterc.T_CARRERAS.ID_SECTOR ?? 0,
                                                                     NombreSector = fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR
                                                                 },
                                                             IdNivel = fiterc.T_CARRERAS.ID_NIVEL,
                                                             NivelCarrera =
                                                                 new Nivel
                                                                 {
                                                                     IdNivel = fiterc.T_CARRERAS.ID_NIVEL ?? 0,
                                                                     NombreNivel = fiterc.T_CARRERAS.T_NIVEL.N_NIVEL
                                                                 },
                                                             IdInstitucion = fiterc.T_CARRERAS.ID_INSTITUCION,
                                                             InstitucionCarrera =
                                                                 new Institucion
                                                                 {
                                                                     IdInstitucion = fiterc.T_CARRERAS.ID_INSTITUCION ?? 0,
                                                                     NombreInstitucion = fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return fichaterc;
                    #endregion

                case (int)Enums.Programas.Universitaria:
                    #region univeristarios
                    var fichauniv = (from c in _mdb.T_BENEFICIARIOS
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     from fiUniv in
                                         _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()

                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma &&
                                            fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo  
                                            //fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                          &&
                                          (
                                             (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                                              cu.NRO_CTA == null)
                                             ||
                                             (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                                              ap.NRO_CUENTA_BCO == null)
                                          )
                                           && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                                ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                                ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                                (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                                (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                                     select
                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {
                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,

                                                     // Fichas Universitarias
                                                     PromedioUniversitaria = fiUniv.PROMEDIO,
                                                     OtraCarreraUniversitaria = fiUniv.OTRA_CARRERA,
                                                     OtraInstitucionUniversitaria = fiUniv.OTRA_INSTITUCION,
                                                     IdCarreraUniversitaria = fiUniv.ID_CARRERA,
                                                     IdEscuelaUniversitaria = fiUniv.ID_ESCUELA,
                                                     OtroSectorUniversitaria = fiUniv.OTRO_SECTOR,
                                                     EscuelaFicha =
                                                         new Escuela
                                                         {
                                                             Anexo = fiUniv.T_ESCUELAS.ANEXO,
                                                             Barrio = fiUniv.T_ESCUELAS.BARRIO,
                                                             Cue = fiUniv.T_ESCUELAS.CUE,
                                                             Id_Escuela = fiUniv.ID_ESCUELA ?? 0,
                                                             Nombre_Escuela = fiUniv.T_ESCUELAS.N_ESCUELA,
                                                             Id_Localidad = fiUniv.T_ESCUELAS.ID_LOCALIDAD,
                                                             LocalidadEscuela =
                                                                 new Localidad
                                                                 {
                                                                     IdLocalidad = fiUniv.T_ESCUELAS.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = fiUniv.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                         {
                                                                             IdDepartamento = fiUniv.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                             NombreDepartamento = fiUniv.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                         }
                                                                 }
                                                         },
                                                     CarreraFicha =
                                                         new Carrera
                                                         {
                                                             IdCarrera = fiUniv.ID_CARRERA ?? 0,
                                                             NombreCarrera = fiUniv.T_CARRERAS.N_CARRERA,
                                                             IdSector = fiUniv.T_CARRERAS.ID_SECTOR,
                                                             SectorCarrera =
                                                                 new Sector
                                                                 {
                                                                     IdSector = fiUniv.T_CARRERAS.ID_SECTOR ?? 0,
                                                                     NombreSector = fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR
                                                                 },
                                                             IdNivel = fiUniv.T_CARRERAS.ID_NIVEL,
                                                             NivelCarrera =
                                                                 new Nivel
                                                                 {
                                                                     IdNivel = fiUniv.T_CARRERAS.ID_NIVEL ?? 0,
                                                                     NombreNivel = fiUniv.T_CARRERAS.T_NIVEL.N_NIVEL
                                                                 },
                                                             IdInstitucion = fiUniv.T_CARRERAS.ID_INSTITUCION,
                                                             InstitucionCarrera =
                                                                 new Institucion
                                                                 {
                                                                     IdInstitucion = fiUniv.T_CARRERAS.ID_INSTITUCION ?? 0,
                                                                     NombreInstitucion = fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return fichauniv;
                    #endregion
                case (int)Enums.Programas.Ppp:
                    #region Planpp
                    var ppp = (from c in _mdb.T_BENEFICIARIOS/*bene*/
                               join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                               from fiterc in
                                   _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from fiUniv in
                                   _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from fichappp in
                                   _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                               from ap in
                                   _mdb.T_APODERADOS.Where(
                                   ap =>
                                   ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                               from sucapo in
                                   _mdb.T_TABLAS_BCO_CBA.Where(
                                       sucapo =>
                                       sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                   DefaultIfEmpty()
                               where (c.ID_PROGRAMA == idPrograma) && fic.TIPO_FICHA == 3 &&
                                       //fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                       fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo
                                       
                                       && (fichappp.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fichappp.MODALIDAD == (int)Enums.Modalidad.Cti && fichappp.ALTA_TEMPRANA == "S"))
                                       //(fichappp.Modalidad == "E" ||  (c.Modalidad == "C" && c.AltaTemprana == "S")) &&
                                       &&
                                     (
                                         (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                                          cu.NRO_CTA == null)
                                         ||
                                         (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                                          ap.NRO_CUENTA_BCO == null)
                                     )
                                     && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                    ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                    ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                    (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                    (modalidad != "T" ? (fichappp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                    (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                    (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                    (altaTemprana != "T" ? fichappp.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                    (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                    && (fic.ID_ETAPA == idEtapa || idEtapa == 0)


                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA,
                                       Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                       MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       Notificado = c.NOTIFICADO == "S" ? true : false,
                                       Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                       SucursalDescripcion = suc.DESCRIPCION,
                                       FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                       IdSucursal = cu.ID_SUCURSAL,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       Apoderado =
                                           new Apoderado
                                           {
                                               IdApoderadoNullable = ap.ID_APODERADO,
                                               Nombre = ap.NOMBRE,
                                               Apellido = ap.APELLIDO,
                                               Barrio = ap.BARRIO,
                                               Calle = ap.CALLE,
                                               Cbu = ap.CBU,
                                               CodigoPostal = ap.CODIGO_POSTAL,
                                               Cuil = ap.CUIL,
                                               Dpto = ap.DPTO,
                                               EntreCalles = ap.ENTRECALLES,
                                               FechaNacimiento = ap.FER_NAC,
                                               FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                               IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                               IdSistema = ap.ID_SISTEMA ?? 0,
                                               IdSucursal = ap.ID_SUCURSAL_BCO,
                                               Mail = ap.MAIL,
                                               Numero = ap.NUMERO,
                                               IdLocalidad = ap.ID_LOCALIDAD,
                                               LocalidadApoderado =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   },
                                               Manzana = ap.MANZANA,
                                               Monoblock = ap.MONOBLOCK,
                                               NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                               NumeroDocumento = ap.NRO_DOCUMENTO,
                                               Parcela = ap.PARCELA,
                                               Piso = ap.PISO,
                                               Sexo = ap.SEXO,
                                               TelefonoCelular = ap.TEL_CELULAR,
                                               TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                               TelefonoFijo = ap.TEL_FIJO,
                                               UsuarioBanco = ap.USUARIO_BANCO,
                                               SucursalApoderado =
                                                   new Sucursal
                                                   {
                                                       CodigoBanco = sucapo.COD_BCO_CBA,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                       Detalle = sucapo.DESCRIPCION
                                                   }
                                           },
                                       Ficha =
                                           new Ficha
                                           {

                                               Apellido = c.T_FICHAS.APELLIDO,
                                               Barrio = c.T_FICHAS.BARRIO,
                                               Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                               IdFicha = c.T_FICHAS.ID_FICHA,
                                               Calle = c.T_FICHAS.CALLE,
                                               CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                               CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                               CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = c.T_FICHAS.DPTO ?? " ",
                                               EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                               EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                               FechaNacimiento = c.T_FICHAS.FER_NAC,
                                               Mail = c.T_FICHAS.MAIL,
                                               Manzana = c.T_FICHAS.MANZANA ?? " ",
                                               Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                               Nombre = c.T_FICHAS.NOMBRE,
                                               Numero = c.T_FICHAS.NUMERO,
                                               NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                               Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                               Piso = c.T_FICHAS.PISO ?? " ",
                                               Sexo = c.T_FICHAS.SEXO,
                                               TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                               TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                               TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                               TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                               IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                               NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               FichaPpp =
                                                   new FichaPPP
                                                   {
                                                       AltaTemprana = fichappp.ALTA_TEMPRANA == null ? "N" : "S",
                                                       FechaInicioActividad = fichappp.AT_FECHA_INICIO,
                                                       FechaFinActividad = fichappp.AT_FECHA_CESE,
                                                       IdModalidadAfip = fichappp.ID_MOD_CONT_AFIP,
                                                       ModalidadAfip = fichappp.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                       Finalizado = (fichappp.FINALIZADO == "S" ? true : false),
                                                       Cursando = (fichappp.CURSANDO == "S" ? true : false),
                                                       IdEmpresa = fichappp.ID_EMPRESA,
                                                       DeseaTermNivel = (fichappp.DESEA_TERM_NIVEL == "S" ? true : false),
                                                       IdNivelEscolaridad = fichappp.ID_NIVEL_ESCOLARIDAD,
                                                       Modalidad = fichappp.MODALIDAD,
                                                       IdSede = fichappp.ID_SEDE,
                                                       Tareas = fichappp.TAREAS,
                                                       Empresa =
                                                           new Empresa
                                                           {
                                                               Calle = fichappp.T_EMPRESAS.CALLE,
                                                               CantidadEmpleados = fichappp.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                               CodigoActividad = fichappp.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                               CodigoPostal = fichappp.T_EMPRESAS.CODIGO_POSTAL,
                                                               Cuit = fichappp.T_EMPRESAS.CUIT,
                                                               DomicilioLaboralIdem = fichappp.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                               IdEmpresa = fichappp.ID_EMPRESA ?? 0,
                                                               NombreEmpresa = fichappp.T_EMPRESAS.N_EMPRESA,
                                                               Numero = fichappp.T_EMPRESAS.NUMERO,
                                                               Piso = fichappp.T_EMPRESAS.PISO,
                                                               Telefono = fichappp.T_EMPRESAS.PISO,
                                                               IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD,
                                                               LocalidadEmpresa =
                                                                   new Localidad
                                                                   {
                                                                       IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                       NombreLocalidad = fichappp.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                       Departamento =
                                                                           new Departamento
                                                                           {
                                                                               IdDepartamento =
                                                                                   fichappp.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                               NombreDepartamento =
                                                                                   fichappp.T_EMPRESAS.
                                                                                   T_LOCALIDADES.
                                                                                   T_DEPARTAMENTOS.
                                                                                   N_DEPARTAMENTO
                                                                           }
                                                                   },
                                                               Usuario =
                                                                   new UsuarioEmpresa
                                                                   {
                                                                       ApellidoUsuario = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.APELLIDO,
                                                                       Cuil = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.CUIL,
                                                                       IdUsuarioEmpresa = fichappp.T_EMPRESAS.ID_USUARIO,
                                                                       Mail = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.MAIL,
                                                                       NombreUsuario = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.NOMBRE
                                                                   }
                                                           }
                                                   },
                                               LocalidadFicha =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                   N_DEPARTAMENTO
                                                           }
                                                   }
                                           }
                                   });
                    return ppp;
                    #endregion
                case (int)Enums.Programas.PppProf:
                    #region Ppprof
                    var pppProf = (from c in _mdb.T_BENEFICIARIOS
                                   join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                   from cu in
                                       _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                   from suc in
                                       _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                   from mon in
                                       _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                   from iva in
                                       _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                   from nac in
                                       _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                   from fichapppProf in
                                       _mdb.T_FICHA_PPP_PROF.Where(fichapppProf => fichapppProf.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                                   from ap in
                                       _mdb.T_APODERADOS.Where(
                                       ap =>
                                       ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                   from sucapo in
                                       _mdb.T_TABLAS_BCO_CBA.Where(
                                           sucapo =>
                                           sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                       DefaultIfEmpty()
                                   where 
                                        fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo
                                        //fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                        && (fichapppProf.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fichapppProf.MODALIDAD == (int)Enums.Modalidad.Cti && fichapppProf.ALTA_TEMPRANA == "S"))
                                        &&
                                        (
                                         (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                                          cu.NRO_CTA == null)
                                         ||
                                         (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                                          ap.NRO_CUENTA_BCO == null)
                                        )
                                   && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                        ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                        ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                        (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                        (modalidad != "T" ? (fichapppProf.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                        (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                        (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                        (altaTemprana != "T" ? fichapppProf.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                        (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                        && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                                   select
                                       new Beneficiario
                                       {
                                           IdBeneficiario = c.ID_BENEFICIARIO,
                                           IdEstado = c.ID_ESTADO ?? 0,
                                           FechaSistema = c.FEC_SIST,
                                           IdFicha = c.ID_FICHA ?? 0,
                                           IdPrograma = c.ID_PROGRAMA ?? 0,
                                           IdUsuarioSistema = c.ID_USR_SIST,
                                           IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                           NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                           CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                           CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                           CondicionIva = iva.COD_BCO_CBA ?? "0",
                                           Nacionalidad = c.NACIONALIDAD ?? 0,
                                           Residente = c.RESIDENTE,
                                           TipoPersona = c.TIPO_PERSONA,
                                           CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                           CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                           NombreEstado = c.T_ESTADOS.N_ESTADO,
                                           Cbu = cu.CBU ?? "",
                                           ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                           NumeroCuenta = cu.NRO_CTA,
                                           Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                           MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                           TieneApoderado = c.TIENE_APODERADO,
                                           FechaNotificacion = c.FEC_NOTIF,
                                           Notificado = c.NOTIFICADO == "S" ? true : false,
                                           Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                           SucursalDescripcion = suc.DESCRIPCION,
                                           FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                           IdSucursal = cu.ID_SUCURSAL,
                                           UsuarioSistema = c.T_USUARIOS.LOGIN,
                                           FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                           FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                           Apoderado =
                                               new Apoderado
                                               {
                                                   IdApoderadoNullable = ap.ID_APODERADO,
                                                   Nombre = ap.NOMBRE,
                                                   Apellido = ap.APELLIDO,
                                                   Barrio = ap.BARRIO,
                                                   Calle = ap.CALLE,
                                                   Cbu = ap.CBU,
                                                   CodigoPostal = ap.CODIGO_POSTAL,
                                                   Cuil = ap.CUIL,
                                                   Dpto = ap.DPTO,
                                                   EntreCalles = ap.ENTRECALLES,
                                                   FechaNacimiento = ap.FER_NAC,
                                                   FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                   IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                   IdSistema = ap.ID_SISTEMA ?? 0,
                                                   IdSucursal = ap.ID_SUCURSAL_BCO,
                                                   Mail = ap.MAIL,
                                                   Numero = ap.NUMERO,
                                                   IdLocalidad = ap.ID_LOCALIDAD,
                                                   LocalidadApoderado =
                                                       new Localidad
                                                       {
                                                           IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                           NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                           Departamento =
                                                               new Departamento
                                                               {
                                                                   IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                   NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                               }
                                                       },
                                                   Manzana = ap.MANZANA,
                                                   Monoblock = ap.MONOBLOCK,
                                                   NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                   NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                   NumeroDocumento = ap.NRO_DOCUMENTO,
                                                   Parcela = ap.PARCELA,
                                                   Piso = ap.PISO,
                                                   Sexo = ap.SEXO,
                                                   TelefonoCelular = ap.TEL_CELULAR,
                                                   TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                   TelefonoFijo = ap.TEL_FIJO,
                                                   UsuarioBanco = ap.USUARIO_BANCO,
                                                   SucursalApoderado =
                                                       new Sucursal
                                                       {
                                                           CodigoBanco = sucapo.COD_BCO_CBA,
                                                           IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                           Detalle = sucapo.DESCRIPCION
                                                       }
                                               },
                                           Ficha =
                                               new Ficha
                                               {
                                                   Apellido = c.T_FICHAS.APELLIDO,
                                                   Barrio = c.T_FICHAS.BARRIO,
                                                   Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                   IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                   IdFicha = c.T_FICHAS.ID_FICHA,
                                                   Calle = c.T_FICHAS.CALLE,
                                                   CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                   CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                   CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                   Contacto = c.T_FICHAS.CONTACTO,
                                                   Cuil = c.T_FICHAS.CUIL,
                                                   DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                   TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                   TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                   TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                   TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                   Dpto = c.T_FICHAS.DPTO ?? " ",
                                                   EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                   EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                   EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                   FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                   Mail = c.T_FICHAS.MAIL,
                                                   Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                   Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                   Nombre = c.T_FICHAS.NOMBRE,
                                                   Numero = c.T_FICHAS.NUMERO,
                                                   NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                   Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                   Piso = c.T_FICHAS.PISO ?? " ",
                                                   Sexo = c.T_FICHAS.SEXO,
                                                   TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                   TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                   TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                   TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                   TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                   IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                   NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                   FechaSistema = c.FEC_SIST,
                                                   IdUsuarioSistema = c.ID_USR_SIST,
                                                   UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                   FichaPppp =
                                                       new FichaPPPP
                                                       {
                                                           AltaTemprana = fichapppProf.ALTA_TEMPRANA,
                                                           Promedio = fichapppProf.PROMEDIO,
                                                           IdTitulo = fichapppProf.ID_TITULO,
                                                           FechaEgreso = fichapppProf.FECHA_EGRESO,
                                                           IdEmpresa = fichapppProf.ID_EMPRESA,
                                                           Modalidad = fichapppProf.MODALIDAD,
                                                           IdSede = fichapppProf.ID_SEDE,
                                                           Tareas = fichapppProf.TAREAS,
                                                           FechaInicioActividad = fichapppProf.AT_FECHA_INICIO,
                                                           FechaFinActividad = fichapppProf.AT_FECHA_CESE,
                                                           IdModalidadAFIP = fichapppProf.ID_MOD_CONT_AFIP,
                                                           ModalidadAFIP = fichapppProf.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                           Empresa =
                                                               new Empresa
                                                               {
                                                                   Calle = fichapppProf.T_EMPRESAS.CALLE,
                                                                   CantidadEmpleados = fichapppProf.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                   CodigoActividad = fichapppProf.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                   CodigoPostal = fichapppProf.T_EMPRESAS.CODIGO_POSTAL,
                                                                   Cuit = fichapppProf.T_EMPRESAS.CUIT,
                                                                   DomicilioLaboralIdem = fichapppProf.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                   IdEmpresa = fichapppProf.ID_EMPRESA ?? 0,
                                                                   NombreEmpresa = fichapppProf.T_EMPRESAS.N_EMPRESA,
                                                                   Numero = fichapppProf.T_EMPRESAS.NUMERO,
                                                                   Piso = fichapppProf.T_EMPRESAS.PISO,
                                                                   Telefono = fichapppProf.T_EMPRESAS.PISO,
                                                                   IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD,
                                                                   LocalidadEmpresa =
                                                                       new Localidad
                                                                       {
                                                                           IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                           NombreLocalidad = fichapppProf.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                           Departamento =
                                                                               new Departamento
                                                                               {
                                                                                   IdDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                   NombreDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                               }
                                                                       },
                                                                   IdUsuario = fichapppProf.T_EMPRESAS.ID_USUARIO,
                                                                   Usuario =
                                                                       new UsuarioEmpresa
                                                                       {
                                                                           ApellidoUsuario =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.APELLIDO,
                                                                           Cuil =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.CUIL,
                                                                           IdUsuarioEmpresa =
                                                                               fichapppProf.T_EMPRESAS.ID_USUARIO ?? 0,
                                                                           Mail =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.MAIL,
                                                                           NombreUsuario =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.NOMBRE
                                                                       }
                                                               }
                                                       },
                                                   LocalidadFicha =
                                                       new Localidad
                                                       {
                                                           IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                           NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                           Departamento =
                                                               new Departamento
                                                               {
                                                                   IdDepartamento =
                                                                       c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                   NombreDepartamento =
                                                                       c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                       N_DEPARTAMENTO
                                                               }
                                                       }
                                               }
                                       });
                    return pppProf;
                    #endregion
                case (int)Enums.Programas.Vat:
                    #region VAT
                    var vat = (from c in _mdb.T_BENEFICIARIOS
                               join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from fichaVat in
                                   _mdb.T_FICHA_VAT.Where(fichaVat => fichaVat.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                               from ap in
                                   _mdb.T_APODERADOS.Where(
                                   ap =>
                                   ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO)*/ &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                               from sucapo in
                                   _mdb.T_TABLAS_BCO_CBA.Where(
                                       sucapo =>
                                       sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                   DefaultIfEmpty()
                               where    fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo
                                        //fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                       && (fichaVat.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fichaVat.MODALIDAD == (int)Enums.Modalidad.Cti && fichaVat.ALTA_TEMPRANA == "S"))
                                       &&
                                       (
                                         (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                                          cu.NRO_CTA == null)
                                         ||
                                         (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                                          ap.NRO_CUENTA_BCO == null)
                                        )
                                    && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                        ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                        ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                        (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                        (modalidad != "T" ? (fichaVat.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                        (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : (c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TIENE_APODERADO))) &&
                                        (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                        (altaTemprana != "T" ? fichaVat.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                        (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                        && (fic.ID_ETAPA == idEtapa || idEtapa == 0)
                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA,
                                       Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                       MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       Notificado = c.NOTIFICADO == "S" ? true : false,
                                       Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                       SucursalDescripcion = suc.DESCRIPCION,
                                       FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                       IdSucursal = cu.ID_SUCURSAL,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       Apoderado =
                                           new Apoderado
                                           {
                                               IdApoderadoNullable = ap.ID_APODERADO,
                                               Nombre = ap.NOMBRE,
                                               Apellido = ap.APELLIDO,
                                               Barrio = ap.BARRIO,
                                               Calle = ap.CALLE,
                                               Cbu = ap.CBU,
                                               CodigoPostal = ap.CODIGO_POSTAL,
                                               Cuil = ap.CUIL,
                                               Dpto = ap.DPTO,
                                               EntreCalles = ap.ENTRECALLES,
                                               FechaNacimiento = ap.FER_NAC,
                                               FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                               IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                               IdSistema = ap.ID_SISTEMA ?? 0,
                                               IdSucursal = ap.ID_SUCURSAL_BCO,
                                               Mail = ap.MAIL,
                                               Numero = ap.NUMERO,
                                               IdLocalidad = ap.ID_LOCALIDAD,
                                               LocalidadApoderado =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento =
                                                                   ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento =
                                                                   ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   },
                                               Manzana = ap.MANZANA,
                                               Monoblock = ap.MONOBLOCK,
                                               NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                               NumeroDocumento = ap.NRO_DOCUMENTO,
                                               Parcela = ap.PARCELA,
                                               Piso = ap.PISO,
                                               Sexo = ap.SEXO,
                                               TelefonoCelular = ap.TEL_CELULAR,
                                               TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                               TelefonoFijo = ap.TEL_FIJO,
                                               UsuarioBanco = ap.USUARIO_BANCO,
                                               SucursalApoderado =
                                                   new Sucursal
                                                   {
                                                       CodigoBanco = sucapo.COD_BCO_CBA,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                       Detalle = sucapo.DESCRIPCION
                                                   }
                                           },
                                       Ficha =
                                           new Ficha
                                           {
                                               Apellido = c.T_FICHAS.APELLIDO,
                                               Barrio = c.T_FICHAS.BARRIO,
                                               Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                               IdFicha = c.T_FICHAS.ID_FICHA,
                                               Calle = c.T_FICHAS.CALLE,
                                               CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                               CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                               CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = c.T_FICHAS.DPTO ?? " ",
                                               EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                               EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                               FechaNacimiento = c.T_FICHAS.FER_NAC,
                                               Mail = c.T_FICHAS.MAIL,
                                               Manzana = c.T_FICHAS.MANZANA ?? " ",
                                               Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                               Nombre = c.T_FICHAS.NOMBRE,
                                               Numero = c.T_FICHAS.NUMERO,
                                               NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                               Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                               Piso = c.T_FICHAS.PISO ?? " ",
                                               Sexo = c.T_FICHAS.SEXO,
                                               TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                               TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                               TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                               TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                               IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                               NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               FichaVat =
                                                            new FichaVAT
                                                            {
                                                                AltaTemprana = fichaVat.ALTA_TEMPRANA,
                                                                AniosAportes = fichaVat.ANIOS_APORTES,
                                                                Finalizado = (fichaVat.FINALIZADO == "S" ? true : false),
                                                                Cursando = (fichaVat.CURSANDO == "S" ? true : false),
                                                                IdEmpresa = fichaVat.ID_EMPRESA,
                                                                IdNivelEscolaridad = fichaVat.ID_NIVEL_ESCOLARIDAD,
                                                                Modalidad = fichaVat.MODALIDAD,
                                                                IdSede = fichaVat.ID_SEDE,
                                                                Tareas = fichaVat.TAREAS,
                                                                FechaInicioActividad = fichaVat.AT_FECHA_INICIO,
                                                                FechaFinActividad = fichaVat.AT_FECHA_CESE,
                                                                IdModalidadAFIP = fichaVat.ID_MOD_CONT_AFIP,
                                                                ModalidadAFIP = fichaVat.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                                Empresa =
                                                                    new Empresa
                                                                    {
                                                                        Calle = fichaVat.T_EMPRESAS.CALLE,
                                                                        CantidadEmpleados = fichaVat.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                        CodigoActividad = fichaVat.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                        CodigoPostal = fichaVat.T_EMPRESAS.CODIGO_POSTAL,
                                                                        Cuit = fichaVat.T_EMPRESAS.CUIT,
                                                                        DomicilioLaboralIdem = fichaVat.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                        IdEmpresa = fichaVat.ID_EMPRESA ?? 0,
                                                                        NombreEmpresa = fichaVat.T_EMPRESAS.N_EMPRESA,
                                                                        Numero = fichaVat.T_EMPRESAS.NUMERO,
                                                                        Piso = fichaVat.T_EMPRESAS.PISO,
                                                                        Telefono = fichaVat.T_EMPRESAS.PISO,
                                                                        IdLocalidad = fichaVat.T_EMPRESAS.ID_LOCALIDAD,
                                                                        LocalidadEmpresa =
                                                                            new Localidad
                                                                            {
                                                                                IdLocalidad = fichaVat.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                NombreLocalidad = fichaVat.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                Departamento =
                                                                                    new Departamento
                                                                                    {
                                                                                        IdDepartamento =
                                                                                            fichaVat.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ??
                                                                                            0,
                                                                                        NombreDepartamento = fichaVat.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                    }
                                                                            },
                                                                        IdUsuario = fichaVat.T_EMPRESAS.ID_USUARIO,
                                                                        Usuario =
                                                                            new UsuarioEmpresa
                                                                            {
                                                                                ApellidoUsuario = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.APELLIDO,
                                                                                Cuil = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.CUIL,
                                                                                IdUsuarioEmpresa = fichaVat.T_EMPRESAS.ID_USUARIO ?? 0,
                                                                                Mail = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.MAIL,
                                                                                NombreUsuario = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.NOMBRE
                                                                            }
                                                                    }
                                                            },
                                               LocalidadFicha =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   }
                                           }
                                   });
                    return vat;
                    #endregion

                default:
                    return null;


            }
        }

        private IQueryable<IBeneficiario> QBeneficiarioSimple(int idprograma)
        {
            var a = (from be in _mdb.T_BENEFICIARIOS
                     join fic in _mdb.T_FICHAS on be.ID_FICHA equals fic.ID_FICHA
                     from ap in
                         _mdb.T_APODERADOS.Where(
                             ap =>
                             ap.ID_BENEFICIARIO == be.ID_BENEFICIARIO &&
                             ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                     from fichappp in
                         _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == be.ID_FICHA).DefaultIfEmpty()
                     from prog in _mdb.T_PROGRAMAS.Where(pro => pro.ID_PROGRAMA == be.ID_PROGRAMA).DefaultIfEmpty()
                     from estado in _mdb.T_ESTADOS.Where(est => est.ID_ESTADO == be.ID_ESTADO).DefaultIfEmpty()
                     from cu in _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == be.ID_BENEFICIARIO).DefaultIfEmpty()
                     from suc in _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                     where (idprograma == 0 ? be.ID_PROGRAMA > 0 : be.ID_PROGRAMA == idprograma) && fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario
                     select new Beneficiario
                                {
                                    IdBeneficiario = be.ID_BENEFICIARIO,
                                    IdFicha = be.ID_FICHA ?? 0,
                                    IdEstado = estado.ID_ESTADO,
                                    Programa = prog.N_PROGRAMA,
                                    IdPrograma = be.ID_PROGRAMA ?? 0,
                                    NombreEstado = estado.N_ESTADO,
                                    TieneApoderado = be.TIENE_APODERADO,
                                    Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                    Apoderado = new Apoderado
                                                    {
                                                        Apellido = ap.APELLIDO,
                                                        Nombre = ap.NOMBRE,
                                                        NumeroDocumento = ap.NRO_DOCUMENTO ?? "."
                                                    },
                                    UsuarioSistema = be.T_USUARIOS.LOGIN,
                                    IdUsuarioSistema = be.T_USUARIOS.ID_USR_SIST,
                                    Ficha = new Ficha
                                                {
                                                    IdEstadoFicha = fic.ID_ESTADO_FICHA,
                                                    Apellido = fic.APELLIDO,
                                                    Barrio = fic.BARRIO,
                                                    IdFicha = fic.ID_FICHA,
                                                    Cuil = fic.CUIL,
                                                    EsDiscapacitado = fic.ES_DISCAPACITADO == "S" ? true : false,
                                                    FechaNacimiento = fic.FER_NAC,
                                                    Nombre = fic.NOMBRE,
                                                    NumeroDocumento = fic.NUMERO_DOCUMENTO,
                                                    Sexo = fic.SEXO,
                                                    TipoFicha = fic.TIPO_FICHA,
                                                    idEtapa = fic.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                                    NombreEtapa = fic.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                                    FichaPpp =
                                                        new FichaPPP
                                                            {
                                                                Modalidad = fichappp.MODALIDAD ?? 0,
                                                                AltaTemprana = fichappp.ALTA_TEMPRANA == null ? "N" : "S",
                                                                Empresa =
                                                                    new Empresa
                                                                        {
                                                                            NombreEmpresa = fichappp.T_EMPRESAS.N_EMPRESA,
                                                                            Calle = fichappp.T_EMPRESAS.CALLE,
                                                                            Numero = fichappp.T_EMPRESAS.NUMERO,
                                                                            NombreLocalidad = fichappp.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                            Cuit = fichappp.T_EMPRESAS.CUIT
                                                                        }
                                                            }
                                                }
                                }
                    );

            return a;
        }

        /// <summary>
        /// 27/06/2013 - QBENEFICARIO SIMPLE - CON TODOS LOS FILTROS - DI CAMPLI LEANDRO
        /// </summary>
        /// <returns></returns>
        private IQueryable<IBeneficiario> QBeneficiarioSimple(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa)
        {
            var a = (from be in _mdb.T_BENEFICIARIOS
                     join fic in _mdb.T_FICHAS on be.ID_FICHA equals fic.ID_FICHA
                     from ap in
                         _mdb.T_APODERADOS.Where(
                             ap =>
                             ap.ID_BENEFICIARIO == be.ID_BENEFICIARIO &&
                             ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                     from fichappp in
                         _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == be.ID_FICHA).DefaultIfEmpty()
                     from prog in _mdb.T_PROGRAMAS.Where(pro => pro.ID_PROGRAMA == be.ID_PROGRAMA).DefaultIfEmpty()
                     from estado in _mdb.T_ESTADOS.Where(est => est.ID_ESTADO == be.ID_ESTADO).DefaultIfEmpty()
                     from cu in _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == be.ID_BENEFICIARIO).DefaultIfEmpty()
                     from suc in _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                     where (idPrograma == 0 ? be.ID_PROGRAMA > 0 : be.ID_PROGRAMA == idPrograma) && (fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario || fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.EtapaFinalizada)
                     
                            && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) && 
                            ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&  
                            ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) && 
                            (be.ID_PROGRAMA == idPrograma || idPrograma == 0) && (be.ID_ESTADO == idEstado || idEstado == 0) &&
                            (modalidad != "T" ? (fichappp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad=="T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                            (conApoderados != "T"  ? be.TIENE_APODERADO == conApoderados : (be.TIENE_APODERADO != null || string.IsNullOrEmpty( be.TIENE_APODERADO))) &&
                            (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                            (altaTemprana != "T" ? fichappp.ALTA_TEMPRANA == altaTemprana : altaTemprana=="T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                            (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                            && (fic.ID_ETAPA == idEtapa || idEtapa==0)
                     
                     select new Beneficiario
                     {
                         IdBeneficiario = be.ID_BENEFICIARIO,
                         IdFicha = be.ID_FICHA ?? 0,
                         IdEstado = estado.ID_ESTADO,
                         Programa = prog.N_PROGRAMA,
                         IdPrograma = be.ID_PROGRAMA ?? 0,
                         NombreEstado = estado.N_ESTADO,
                         TieneApoderado = be.TIENE_APODERADO,
                         Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                         Apoderado = new Apoderado
                         {
                             Apellido = ap.APELLIDO,
                             Nombre = ap.NOMBRE,
                             NumeroDocumento = ap.NRO_DOCUMENTO ?? "."
                         },
                         UsuarioSistema = be.T_USUARIOS.LOGIN,
                         IdUsuarioSistema = be.T_USUARIOS.ID_USR_SIST,
                         Ficha = new Ficha
                         {
                             IdEstadoFicha = fic.ID_ESTADO_FICHA,
                             Apellido = fic.APELLIDO,
                             Barrio = fic.BARRIO,
                             IdFicha = fic.ID_FICHA,
                             Cuil = fic.CUIL,
                             EsDiscapacitado = fic.ES_DISCAPACITADO == "S" ? true : false,
                             FechaNacimiento = fic.FER_NAC,
                             Nombre = fic.NOMBRE,
                             NumeroDocumento = fic.NUMERO_DOCUMENTO,
                             Sexo = fic.SEXO,
                             TipoFicha = fic.TIPO_FICHA,
                             idEtapa = fic.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                             NombreEtapa = fic.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                             FichaPpp =
                                 new FichaPPP
                                 {
                                     Modalidad = fichappp.MODALIDAD ?? 0,
                                     AltaTemprana = fichappp.ALTA_TEMPRANA == null ? "N" : "S",
                                     Empresa =
                                         new Empresa
                                         {
                                             NombreEmpresa = fichappp.T_EMPRESAS.N_EMPRESA,
                                             Calle = fichappp.T_EMPRESAS.CALLE,
                                             Numero = fichappp.T_EMPRESAS.NUMERO,
                                             NombreLocalidad = fichappp.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                             Cuit = fichappp.T_EMPRESAS.CUIT
                                         }
                                 }
                         }
                     }
                    );

            return a;
        }

        private IQueryable<IBeneficiario> QBeneficiarioSimple()
        {

            return
                _mdb.T_BENEFICIARIOS.Select(
                    c => new Beneficiario
                             {
                                 IdBeneficiario = c.ID_BENEFICIARIO,
                                 IdFicha = c.ID_FICHA ?? 0,
                                 IdEstado = c.ID_ESTADO ?? 0,
                                 Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                 IdPrograma = c.ID_PROGRAMA ?? 0,
                                 NombreEstado = c.T_ESTADOS.N_ESTADO,
                                 TieneApoderado = c.TIENE_APODERADO,
                                 Modalidad = (c.T_FICHAS.T_FICHA_PPP.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                 AltaTemprana = c.T_FICHAS.T_FICHA_PPP.ALTA_TEMPRANA == null ? "N" : "S",
                                 UsuarioSistema = c.T_USUARIOS.LOGIN,
                                 IdUsuarioSistema = c.ID_USR_SIST,
                                 Ficha =
                                     new Ficha
                                         {
                                             IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                             Apellido = c.T_FICHAS.APELLIDO,
                                             Barrio = c.T_FICHAS.BARRIO,
                                             IdFicha = c.T_FICHAS.ID_FICHA,
                                             Cuil = c.T_FICHAS.CUIL,
                                             EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                             FechaNacimiento = c.T_FICHAS.FER_NAC,
                                             Nombre = c.T_FICHAS.NOMBRE,
                                             NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                             Sexo = c.T_FICHAS.SEXO,
                                             TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                             idEtapa = c.T_FICHAS.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                             NombreEtapa = c.T_FICHAS.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                             FichaPpp =
                                                 new FichaPPP
                                                     {
                                                         Empresa =
                                                             new Empresa
                                                                 {
                                                                     NombreEmpresa =
                                                                         c.T_FICHAS.T_FICHA_PPP.T_EMPRESAS.N_EMPRESA,
                                                                     Calle = c.T_FICHAS.T_FICHA_PPP.T_EMPRESAS.CALLE,
                                                                     Numero = c.T_FICHAS.T_FICHA_PPP.T_EMPRESAS.NUMERO,
                                                                     NombreLocalidad = c.T_FICHAS.T_FICHA_PPP.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Cuit = c.T_FICHAS.T_FICHA_PPP.T_EMPRESAS.CUIT
                                                                 }
                                                     }
                                         }
                             }).Where(
                                 c =>
                                 c.Ficha.IdEstadoFicha == (int)Enums.EstadoFicha.Beneficiario &&
                                 c.IdEstado == (int)Enums.EstadoBeneficiario.Activo);
        }
        /// <summary>
        /// 28/06/2013 - QBENEFICIARIO CON CUENTAS - SE AÑADEN LOS FILTROS EN LA IQUERYABLE - DI CAMPLI LEANDRO 
        /// </summary>
        /// <returns></returns>
        private IQueryable<IBeneficiario> QBeneficiarioConCuentas(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altatemprana, int idEstado, string apellidonombreapoderado, int idEtapa)
        {
            #region "PPP"
            if (idPrograma == (int)Enums.Programas.Ppp)
            {
                var ppp = (from c in _mdb.T_BENEFICIARIOS
                           join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                           join fp in _mdb.T_FICHA_PPP on f.ID_FICHA equals fp.ID_FICHA
                           from cu in
                               _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                           from suc in
                               _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                           from mon in
                               _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                           from iva in
                               _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                           from nac in
                               _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                           from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                               ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                           from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                           where (idPrograma == 0 ? c.ID_PROGRAMA > 0 : c.ID_PROGRAMA == idPrograma) && f.TIPO_FICHA == 3 &&
                               f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                               && (fp.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fp.MODALIDAD == (int)Enums.Modalidad.Cti && fp.ALTA_TEMPRANA == "S"))
                               &&
                               (
                                   (
                                       (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                       ||
                                       (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                   )
                               )
                                 &&
                           ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                           ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                           ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                           (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                           (modalidad != "T" ? (fp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fp.MODALIDAD != null || string.IsNullOrEmpty(c.Modalidad))) &&
                           (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                           (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                           (altatemprana != "T" ? fp.ALTA_TEMPRANA == altatemprana : altatemprana == "T") &&//(c.AltaTemprana != null || string.IsNullOrEmpty(c.AltaTemprana))) &&
                           (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                           (f.ID_ETAPA == idEtapa || idEtapa == 0)


                           select
                               new Beneficiario
                               {
                                   IdBeneficiario = c.ID_BENEFICIARIO,
                                   IdEstado = c.ID_ESTADO ?? 0,
                                   FechaSistema = c.FEC_SIST,
                                   IdFicha = c.ID_FICHA ?? 0,
                                   IdPrograma = c.ID_PROGRAMA ?? 0,
                                   IdUsuarioSistema = c.ID_USR_SIST,
                                   IdConvenio = prog.CONVENIO_BCO_CBA,
                                   NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                   CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                   CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                   CondicionIva = iva.COD_BCO_CBA ?? "0",
                                   Nacionalidad = c.NACIONALIDAD ?? 0,
                                   Residente = c.RESIDENTE,
                                   TipoPersona = c.TIPO_PERSONA,
                                   CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                   CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                   NombreEstado = c.T_ESTADOS.N_ESTADO,
                                   Cbu = cu.CBU ?? "",
                                   ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                   NumeroCuenta = cu.NRO_CTA ?? 0,
                                   Programa = prog.N_PROGRAMA,
                                   MontoPrograma = prog.MONTO_PROG ?? 0,
                                   TieneApoderado = c.TIENE_APODERADO,
                                   Modalidad = (fp.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                   AltaTemprana = fp.ALTA_TEMPRANA == null ? "N" : "S",
                                   ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                   FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                   FechaBajaBeneficio = c.FEC_BAJA,
                                   Apoderado = new Apoderado
                                   {
                                       NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                       IdSucursal = ap.ID_SUCURSAL_BCO,
                                       IdApoderadoNullable = ap.ID_APODERADO,
                                       Apellido = ap.APELLIDO ?? " ",
                                       Nombre = ap.NOMBRE ?? " ",
                                       NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                   },
                                   IdSucursal = suc.ID_TABLA_BCO_CBA,
                                   UsuarioSistema = c.T_USUARIOS.LOGIN,
                                   FechaNotificacion = c.FEC_NOTIF,
                                   FechaInicio = fp.AT_FECHA_INICIO,
                                   FechaFin = fp.AT_FECHA_CESE,
                                   Ficha = new Ficha
                                   {
                                       Apellido = f.APELLIDO,
                                       Barrio = f.BARRIO,
                                       Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                       IdLocalidad = f.ID_LOCALIDAD,
                                       IdFicha = f.ID_FICHA,
                                       Calle = f.CALLE,
                                       CantidadHijos = f.CANTIDAD_HIJOS,
                                       CodigoPostal = f.CODIGO_POSTAL,
                                       CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                       Contacto = c.T_FICHAS.CONTACTO,
                                       Cuil = c.T_FICHAS.CUIL,
                                       DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                       TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                       TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                       TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                       TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                       Dpto = f.DPTO ?? " ",
                                       EntreCalles = f.ENTRECALLES ?? " ",
                                       EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                       EstadoCivil = f.ESTADO_CIVIL,
                                       FechaNacimiento = f.FER_NAC,
                                       Mail = f.MAIL,
                                       Manzana = f.MANZANA ?? " ",
                                       Monoblock = f.MONOBLOCK ?? " ",
                                       Nombre = f.NOMBRE,
                                       Numero = f.NUMERO,
                                       NumeroDocumento = f.NUMERO_DOCUMENTO,
                                       Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                       Piso = f.PISO ?? " ",
                                       Sexo = f.SEXO,
                                       TelefonoCelular = f.TEL_CELULAR,
                                       TelefonoFijo = f.TEL_FIJO,
                                       TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                       TipoDocumento = f.TIPO_DOCUMENTO,
                                       TipoFicha = f.TIPO_FICHA,
                                       FechaSistema = c.FEC_SIST,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                       NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                   }
                               });
                return ppp;
            }
#endregion

            #region PPPP
            if (idPrograma == (int)Enums.Programas.PppProf)
            {
                var pppp = (from c in _mdb.T_BENEFICIARIOS
                            join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                            join fppp in _mdb.T_FICHA_PPP_PROF on f.ID_FICHA equals fppp.ID_FICHA
                            from cu in
                                _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                            from suc in
                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                            from mon in
                                _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                            from iva in
                                _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                            from nac in
                                _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                            from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                            from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                            where
                                f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                && (fppp.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fppp.MODALIDAD == (int)Enums.Modalidad.Cti && fppp.ALTA_TEMPRANA == "S"))
                                &&
                                (
                                    (
                                        (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                        ||
                                        (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                    )
                                )

                           &&
                           ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                           ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                           ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                           (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                           (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                           (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                           (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                           (f.ID_ETAPA == idEtapa || idEtapa == 0)

                            select
                                new Beneficiario
                                {
                                    IdBeneficiario = c.ID_BENEFICIARIO,
                                    IdEstado = c.ID_ESTADO ?? 0,
                                    FechaSistema = c.FEC_SIST,
                                    IdFicha = c.ID_FICHA ?? 0,
                                    IdPrograma = c.ID_PROGRAMA ?? 0,
                                    IdUsuarioSistema = c.ID_USR_SIST,
                                    IdConvenio = prog.CONVENIO_BCO_CBA,
                                    NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                    CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                    CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                    CondicionIva = iva.COD_BCO_CBA ?? "0",
                                    Nacionalidad = c.NACIONALIDAD ?? 0,
                                    Residente = c.RESIDENTE,
                                    TipoPersona = c.TIPO_PERSONA,
                                    CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                    CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                    NombreEstado = c.T_ESTADOS.N_ESTADO,
                                    Cbu = cu.CBU ?? "",
                                    ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                    NumeroCuenta = cu.NRO_CTA,
                                    Programa = prog.N_PROGRAMA,
                                    MontoPrograma = prog.MONTO_PROG ?? 0,
                                    TieneApoderado = c.TIENE_APODERADO,
                                    Modalidad = (fppp.MODALIDAD ?? 0) == 1 ? "E" : "C",
                                    AltaTemprana = fppp.ALTA_TEMPRANA == null ? "N" : "S",
                                    ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                    FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                    FechaBajaBeneficio = c.FEC_BAJA,
                                    Apoderado =
                                    new Apoderado
                                    {
                                        NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                        IdSucursal = ap.ID_SUCURSAL_BCO,
                                        IdApoderadoNullable = ap.ID_APODERADO,
                                        Apellido = ap.APELLIDO ?? " ",
                                        Nombre = ap.NOMBRE ?? " ",
                                        NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                    },
                                    IdSucursal = suc.ID_TABLA_BCO_CBA,
                                    UsuarioSistema = c.T_USUARIOS.LOGIN,
                                    FechaNotificacion = c.FEC_NOTIF,
                                    FechaInicio = fppp.AT_FECHA_INICIO,
                                    FechaFin = fppp.AT_FECHA_CESE,
                                    Ficha =
                                        new Ficha
                                        {
                                            Apellido = f.APELLIDO,
                                            Barrio = f.BARRIO,
                                            Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                            IdLocalidad = f.ID_LOCALIDAD,
                                            IdFicha = f.ID_FICHA,
                                            Calle = f.CALLE,
                                            CantidadHijos = f.CANTIDAD_HIJOS,
                                            CodigoPostal = f.CODIGO_POSTAL,
                                            CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                            Contacto = c.T_FICHAS.CONTACTO,
                                            Cuil = c.T_FICHAS.CUIL,
                                            DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                            TieneDeficienciaMental =
                                                f.TIENE_DEF_MENTAL == "S" ? true : false,
                                            TieneDeficienciaMotora =
                                                f.TIENE_DEF_MOTORA == "S" ? true : false,
                                            TieneDeficienciaPsicologia =
                                                f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                            TieneDeficienciaSensorial =
                                                f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                            Dpto = f.DPTO ?? " ",
                                            EntreCalles = f.ENTRECALLES ?? " ",
                                            EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                            EstadoCivil = f.ESTADO_CIVIL,
                                            FechaNacimiento = f.FER_NAC,
                                            Mail = f.MAIL,
                                            Manzana = f.MANZANA ?? " ",
                                            Monoblock = f.MONOBLOCK ?? " ",
                                            Nombre = f.NOMBRE,
                                            Numero = f.NUMERO,
                                            NumeroDocumento = f.NUMERO_DOCUMENTO,
                                            Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                            Piso = f.PISO ?? " ",
                                            Sexo = f.SEXO,
                                            TelefonoCelular = f.TEL_CELULAR,
                                            TelefonoFijo = f.TEL_FIJO,
                                            TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                            TipoDocumento = f.TIPO_DOCUMENTO,
                                            TipoFicha = f.TIPO_FICHA,
                                            FechaSistema = c.FEC_SIST,
                                            IdUsuarioSistema = c.ID_USR_SIST,
                                            UsuarioSistema = c.T_USUARIOS.LOGIN,
                                            idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                            NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                        }
                                });

                return pppp;
            }
            #endregion

            #region "Vat"
            if (idPrograma == (int)Enums.Programas.Vat)
            {
                var vat = (from c in _mdb.T_BENEFICIARIOS
                           join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                           join fvat in _mdb.T_FICHA_VAT on f.ID_FICHA equals fvat.ID_FICHA
                           from cu in
                               _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                           from suc in
                               _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                           from mon in
                               _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                           from iva in
                               _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                           from nac in
                               _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                           from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                               ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                           from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                           where
                               f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                               && (fvat.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fvat.MODALIDAD == (int)Enums.Modalidad.Cti && fvat.ALTA_TEMPRANA == "S"))
                               &&
                               (
                                   (
                                       (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                       ||
                                       (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                   )
                               ) &&
                           ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                           ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                           ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                           (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                           (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                           (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                           (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                           (f.ID_ETAPA == idEtapa || idEtapa == 0)

                           select
                               new Beneficiario
                               {
                                   IdBeneficiario = c.ID_BENEFICIARIO,
                                   IdEstado = c.ID_ESTADO ?? 0,
                                   FechaSistema = c.FEC_SIST,
                                   IdFicha = c.ID_FICHA ?? 0,
                                   IdPrograma = c.ID_PROGRAMA ?? 0,
                                   IdUsuarioSistema = c.ID_USR_SIST,
                                   IdConvenio = prog.CONVENIO_BCO_CBA,
                                   NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                   CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                   CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                   CondicionIva = iva.COD_BCO_CBA ?? "0",
                                   Nacionalidad = c.NACIONALIDAD ?? 0,
                                   Residente = c.RESIDENTE,
                                   TipoPersona = c.TIPO_PERSONA,
                                   CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                   CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                   NombreEstado = c.T_ESTADOS.N_ESTADO,
                                   Cbu = cu.CBU ?? "",
                                   ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                   NumeroCuenta = cu.NRO_CTA ?? 0,
                                   Programa = prog.N_PROGRAMA,
                                   MontoPrograma = prog.MONTO_PROG ?? 0,
                                   TieneApoderado = c.TIENE_APODERADO,
                                   Modalidad = (fvat.MODALIDAD ?? 0) == 1 ? "E" : "C",
                                   AltaTemprana = fvat.ALTA_TEMPRANA == null ? "N" : "S",
                                   ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                   FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                   FechaBajaBeneficio = c.FEC_BAJA,
                                   Apoderado = new Apoderado { NumeroCuentaBco = ap.NRO_CUENTA_BCO, IdSucursal = ap.ID_SUCURSAL_BCO, IdApoderadoNullable = ap.ID_APODERADO, Apellido = ap.APELLIDO ?? " ", Nombre = ap.NOMBRE ?? " ", NumeroDocumento = ap.NRO_DOCUMENTO ?? " " },
                                   IdSucursal = suc.ID_TABLA_BCO_CBA,
                                   UsuarioSistema = c.T_USUARIOS.LOGIN,
                                   FechaNotificacion = c.FEC_NOTIF,
                                   FechaInicio = fvat.AT_FECHA_INICIO,
                                   FechaFin = fvat.AT_FECHA_CESE,

                                   Ficha =
                                       new Ficha
                                       {
                                           Apellido = f.APELLIDO,
                                           Barrio = f.BARRIO,
                                           Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                           IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                           IdFicha = f.ID_FICHA,
                                           Calle = f.CALLE,
                                           CantidadHijos = f.CANTIDAD_HIJOS,
                                           CodigoPostal = f.CODIGO_POSTAL,
                                           CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                           Contacto = c.T_FICHAS.CONTACTO,
                                           Cuil = c.T_FICHAS.CUIL,
                                           DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                           TieneDeficienciaMental =
                                               f.TIENE_DEF_MENTAL == "S" ? true : false,
                                           TieneDeficienciaMotora =
                                               f.TIENE_DEF_MOTORA == "S" ? true : false,
                                           TieneDeficienciaPsicologia =
                                               f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                           TieneDeficienciaSensorial =
                                               f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                           Dpto = f.DPTO ?? " ",
                                           EntreCalles = f.ENTRECALLES ?? " ",
                                           EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                           EstadoCivil = f.ESTADO_CIVIL,
                                           FechaNacimiento = f.FER_NAC,
                                           Mail = f.MAIL,
                                           Manzana = f.MANZANA ?? " ",
                                           Monoblock = f.MONOBLOCK ?? " ",
                                           Nombre = f.NOMBRE,
                                           Numero = f.NUMERO,
                                           NumeroDocumento = f.NUMERO_DOCUMENTO,
                                           Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                           Piso = f.PISO ?? " ",
                                           Sexo = f.SEXO,
                                           TelefonoCelular = f.TEL_CELULAR,
                                           TelefonoFijo = f.TEL_FIJO,
                                           TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                           TipoDocumento = f.TIPO_DOCUMENTO,
                                           TipoFicha = f.TIPO_FICHA,
                                           FechaSistema = c.FEC_SIST,
                                           IdUsuarioSistema = c.ID_USR_SIST,
                                           UsuarioSistema = c.T_USUARIOS.LOGIN,
                                           idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                           NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                       }
                               });

                return vat;
            }
            #endregion

            #region            //Terciarios e Universitarios
            if (idPrograma == (int)Enums.Programas.Terciaria || idPrograma == (int)Enums.Programas.Universitaria)
            {
                var teruni = (from c in _mdb.T_BENEFICIARIOS
                              join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                              from cu in
                                  _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                              from suc in
                                  _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                              from mon in
                                  _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                              from iva in
                                  _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                              from nac in
                                  _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                              from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                  ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                              from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                              where
                                  f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                  &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.Ppp
                                   &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.PppProf
                                   &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.Vat
                                  &&
                                  (
                                      (
                                          (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                          ||
                                          (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                      )
                                  ) &&
                           ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                           ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                           ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                           (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                           (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                           (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                           (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                           (f.ID_ETAPA == idEtapa || idEtapa == 0)

                              select
                                  new Beneficiario
                                  {
                                      IdBeneficiario = c.ID_BENEFICIARIO,
                                      IdEstado = c.ID_ESTADO ?? 0,
                                      FechaSistema = c.FEC_SIST,
                                      IdFicha = c.ID_FICHA ?? 0,
                                      IdPrograma = c.ID_PROGRAMA ?? 0,
                                      IdUsuarioSistema = c.ID_USR_SIST,
                                      IdConvenio = prog.CONVENIO_BCO_CBA,
                                      NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                      CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                      CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                      CondicionIva = iva.COD_BCO_CBA ?? "0",
                                      Nacionalidad = c.NACIONALIDAD ?? 0,
                                      Residente = c.RESIDENTE,
                                      TipoPersona = c.TIPO_PERSONA,
                                      CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                      CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                      NombreEstado = c.T_ESTADOS.N_ESTADO,
                                      Cbu = cu.CBU ?? "",
                                      ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                      NumeroCuenta = cu.NRO_CTA ?? 0,
                                      Programa = prog.N_PROGRAMA,
                                      MontoPrograma = prog.MONTO_PROG ?? 0,
                                      TieneApoderado = c.TIENE_APODERADO,
                                      Modalidad = null,
                                      AltaTemprana = null,
                                      ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                      FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                      FechaBajaBeneficio = c.FEC_BAJA,
                                      Apoderado = new Apoderado
                                      {
                                          NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                          IdSucursal = ap.ID_SUCURSAL_BCO,
                                          IdApoderadoNullable = ap.ID_APODERADO,
                                          Apellido = ap.APELLIDO ?? " ",
                                          Nombre = ap.NOMBRE ?? " ",
                                          NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                      },
                                      IdSucursal = suc.ID_TABLA_BCO_CBA,
                                      UsuarioSistema = c.T_USUARIOS.LOGIN,
                                      FechaNotificacion = c.FEC_NOTIF,
                                      FechaInicio = null,
                                      FechaFin = null,
                                      Ficha = new Ficha
                                      {
                                          Apellido = f.APELLIDO,
                                          Barrio = f.BARRIO,
                                          Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                          IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                          IdFicha = f.ID_FICHA,
                                          Calle = f.CALLE,
                                          CantidadHijos = f.CANTIDAD_HIJOS,
                                          CodigoPostal = f.CODIGO_POSTAL,
                                          CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                          Contacto = f.CONTACTO,
                                          Cuil = f.CUIL,
                                          DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                          TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                          TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                          TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                          TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                          Dpto = f.DPTO ?? " ",
                                          EntreCalles = f.ENTRECALLES ?? " ",
                                          EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                          EstadoCivil = f.ESTADO_CIVIL,
                                          FechaNacimiento = f.FER_NAC,
                                          Mail = f.MAIL,
                                          Manzana = f.MANZANA ?? " ",
                                          Monoblock = f.MONOBLOCK ?? " ",
                                          Nombre = f.NOMBRE,
                                          Numero = f.NUMERO,
                                          NumeroDocumento = f.NUMERO_DOCUMENTO,
                                          Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                          Piso = f.PISO ?? " ",
                                          Sexo = f.SEXO,
                                          TelefonoCelular = f.TEL_CELULAR,
                                          TelefonoFijo = f.TEL_FIJO,
                                          TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                          TipoDocumento = f.TIPO_DOCUMENTO,
                                          TipoFicha = f.TIPO_FICHA,
                                          FechaSistema = c.FEC_SIST,
                                          IdUsuarioSistema = c.ID_USR_SIST,
                                          UsuarioSistema = c.T_USUARIOS.LOGIN,
                                          idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                          NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                      }
                                  });

               return teruni;
            }
            #endregion
            
            #region "Efectores Sociales"

            if (idPrograma == (int)Enums.Programas.EfectoresSociales)
            {
                var eft = 
                    (from c in _mdb.T_BENEFICIARIOS
                           join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                           join feft in _mdb.T_FICHA_EFEC_SOC on f.ID_FICHA equals feft.ID_FICHA
                           from cu in
                               _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                           from suc in
                               _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                           from mon in
                               _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                           from iva in
                               _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                           from nac in
                               _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                           from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                               ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                           from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                           where (idPrograma == 0 ? c.ID_PROGRAMA > 0 : c.ID_PROGRAMA == idPrograma) && f.TIPO_FICHA == 7 &&
                               f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                               && (feft.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (feft.MODALIDAD == (int)Enums.Modalidad.Cti && feft.ALTA_TEMPRANA == "S"))
                               &&
                               (
                                   (
                                       (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                       ||
                                       (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                   )
                               )
                                 &&
                           ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                           ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                           ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                           (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                           (modalidad != "T" ? (feft.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fp.MODALIDAD != null || string.IsNullOrEmpty(c.Modalidad))) &&
                           (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                           (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                           (altatemprana != "T" ? feft.ALTA_TEMPRANA == altatemprana : altatemprana == "T") &&//(c.AltaTemprana != null || string.IsNullOrEmpty(c.AltaTemprana))) &&
                           (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                           (f.ID_ETAPA == idEtapa || idEtapa == 0)


                     select
                         new Beneficiario
                         {
                             IdBeneficiario = c.ID_BENEFICIARIO,
                             IdEstado = c.ID_ESTADO ?? 0,
                             FechaSistema = c.FEC_SIST,
                             IdFicha = c.ID_FICHA ?? 0,
                             IdPrograma = c.ID_PROGRAMA ?? 0,
                             IdUsuarioSistema = c.ID_USR_SIST,
                             IdConvenio = prog.CONVENIO_BCO_CBA,
                             NumeroConvenio = prog.CONVENIO_BCO_CBA,
                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                             Nacionalidad = c.NACIONALIDAD ?? 0,
                             Residente = c.RESIDENTE,
                             TipoPersona = c.TIPO_PERSONA,
                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                             CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                             Cbu = cu.CBU ?? "",
                             ImportePagoPlan =  (feft.MONTO_EFE ?? 0) == 0 ? (prog.MONTO_PROG ?? 0) : (decimal)feft.MONTO_EFE, // 03/12/2013 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE EFECTORES
                             NumeroCuenta = cu.NRO_CTA ?? 0,
                             Programa = prog.N_PROGRAMA,
                             MontoPrograma =   (feft.MONTO_EFE ?? 0) == 0 ? (prog.MONTO_PROG ?? 0) : (decimal)feft.MONTO_EFE, // 03/12/2013 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE EFECTORES
                             TieneApoderado = c.TIENE_APODERADO,
                             Modalidad = (feft.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                             AltaTemprana = feft.ALTA_TEMPRANA == null ? "N" : "S",
                             ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                             FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                             FechaBajaBeneficio = c.FEC_BAJA,
                             Apoderado = new Apoderado
                             {
                                 NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                 IdSucursal = ap.ID_SUCURSAL_BCO,
                                 IdApoderadoNullable = ap.ID_APODERADO,
                                 Apellido = ap.APELLIDO ?? " ",
                                 Nombre = ap.NOMBRE ?? " ",
                                 NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                             },
                             IdSucursal = suc.ID_TABLA_BCO_CBA,
                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                             FechaNotificacion = c.FEC_NOTIF,
                             FechaInicio = feft.AT_FECHA_INICIO,
                             FechaFin = feft.AT_FECHA_CESE,
                             Ficha = new Ficha
                             {
                                 Apellido = f.APELLIDO,
                                 Barrio = f.BARRIO,
                                 Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                 IdLocalidad = f.ID_LOCALIDAD,
                                 IdFicha = f.ID_FICHA,
                                 Calle = f.CALLE,
                                 CantidadHijos = f.CANTIDAD_HIJOS,
                                 CodigoPostal = f.CODIGO_POSTAL,
                                 CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                 Contacto = c.T_FICHAS.CONTACTO,
                                 Cuil = c.T_FICHAS.CUIL,
                                 DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                 TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                 TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                 TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                 TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                 Dpto = f.DPTO ?? " ",
                                 EntreCalles = f.ENTRECALLES ?? " ",
                                 EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                 EstadoCivil = f.ESTADO_CIVIL,
                                 FechaNacimiento = f.FER_NAC,
                                 Mail = f.MAIL,
                                 Manzana = f.MANZANA ?? " ",
                                 Monoblock = f.MONOBLOCK ?? " ",
                                 Nombre = f.NOMBRE,
                                 Numero = f.NUMERO,
                                 NumeroDocumento = f.NUMERO_DOCUMENTO,
                                 Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                 Piso = f.PISO ?? " ",
                                 Sexo = f.SEXO,
                                 TelefonoCelular = f.TEL_CELULAR,
                                 TelefonoFijo = f.TEL_FIJO,
                                 TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                 TipoDocumento = f.TIPO_DOCUMENTO,
                                 TipoFicha = f.TIPO_FICHA,
                                 FechaSistema = c.FEC_SIST,
                                 IdUsuarioSistema = c.ID_USR_SIST,
                                 UsuarioSistema = c.T_USUARIOS.LOGIN,
                                 idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                 NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                             }
                         });

                                  //  (from c in _mdb.T_BENEFICIARIOS
                                  //   join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                                  //   from cu in
                                  //       _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                  //   from suc in
                                  //       _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                  //   from mon in
                                  //       _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                  //   from iva in
                                  //       _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                  //   from nac in
                                  //       _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                  //   from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                  //       ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                  //   from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                                  //   where
                                  //       f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                  //       && f.TIPO_FICHA == 7
                                  //       &&
                                  //       c.ID_PROGRAMA != (int)Enums.TipoFicha.Ppp
                                  //        &&
                                  //       c.ID_PROGRAMA != (int)Enums.TipoFicha.PppProf
                                  //        &&
                                  //       c.ID_PROGRAMA != (int)Enums.TipoFicha.Vat
                                  //       &&
                                  //       (
                                  //           (
                                  //               (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                  //               ||
                                  //               (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                  //           )
                                  //       ) &&
                                  //((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                                  //((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                                  //((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                                  //(c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                                  //(conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                                  //(discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                                  //(f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                                  //(f.ID_ETAPA == idEtapa || idEtapa == 0)

                                  //   select
                                  //       new Beneficiario
                                  //       {
                                  //           IdBeneficiario = c.ID_BENEFICIARIO,
                                  //           IdEstado = c.ID_ESTADO ?? 0,
                                  //           FechaSistema = c.FEC_SIST,
                                  //           IdFicha = c.ID_FICHA ?? 0,
                                  //           IdPrograma = c.ID_PROGRAMA ?? 0,
                                  //           IdUsuarioSistema = c.ID_USR_SIST,
                                  //           IdConvenio = prog.CONVENIO_BCO_CBA,
                                  //           NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                  //           CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                  //           CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                  //           CondicionIva = iva.COD_BCO_CBA ?? "0",
                                  //           Nacionalidad = c.NACIONALIDAD ?? 0,
                                  //           Residente = c.RESIDENTE,
                                  //           TipoPersona = c.TIPO_PERSONA,
                                  //           CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                  //           CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                  //           NombreEstado = c.T_ESTADOS.N_ESTADO,
                                  //           Cbu = cu.CBU ?? "",
                                  //           ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                  //           NumeroCuenta = cu.NRO_CTA ?? 0,
                                  //           Programa = prog.N_PROGRAMA,
                                  //           MontoPrograma = prog.MONTO_PROG ?? 0,
                                  //           TieneApoderado = c.TIENE_APODERADO,
                                  //           Modalidad = null,
                                  //           AltaTemprana = null,
                                  //           ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                  //           FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                  //           FechaBajaBeneficio = c.FEC_BAJA,
                                  //           Apoderado = new Apoderado
                                  //           {
                                  //               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                  //               IdSucursal = ap.ID_SUCURSAL_BCO,
                                  //               IdApoderadoNullable = ap.ID_APODERADO,
                                  //               Apellido = ap.APELLIDO ?? " ",
                                  //               Nombre = ap.NOMBRE ?? " ",
                                  //               NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                  //           },
                                  //           IdSucursal = suc.ID_TABLA_BCO_CBA,
                                  //           UsuarioSistema = c.T_USUARIOS.LOGIN,
                                  //           FechaNotificacion = c.FEC_NOTIF,
                                  //           FechaInicio = null,
                                  //           FechaFin = null,
                                  //           Ficha = new Ficha
                                  //           {
                                  //               Apellido = f.APELLIDO,
                                  //               Barrio = f.BARRIO,
                                  //               Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                  //               IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                  //               IdFicha = f.ID_FICHA,
                                  //               Calle = f.CALLE,
                                  //               CantidadHijos = f.CANTIDAD_HIJOS,
                                  //               CodigoPostal = f.CODIGO_POSTAL,
                                  //               CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                  //               Contacto = f.CONTACTO,
                                  //               Cuil = f.CUIL,
                                  //               DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                  //               TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                  //               TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                  //               TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                  //               TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                  //               Dpto = f.DPTO ?? " ",
                                  //               EntreCalles = f.ENTRECALLES ?? " ",
                                  //               EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                  //               EstadoCivil = f.ESTADO_CIVIL,
                                  //               FechaNacimiento = f.FER_NAC,
                                  //               Mail = f.MAIL,
                                  //               Manzana = f.MANZANA ?? " ",
                                  //               Monoblock = f.MONOBLOCK ?? " ",
                                  //               Nombre = f.NOMBRE,
                                  //               Numero = f.NUMERO,
                                  //               NumeroDocumento = f.NUMERO_DOCUMENTO,
                                  //               Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                  //               Piso = f.PISO ?? " ",
                                  //               Sexo = f.SEXO,
                                  //               TelefonoCelular = f.TEL_CELULAR,
                                  //               TelefonoFijo = f.TEL_FIJO,
                                  //               TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                  //               TipoDocumento = f.TIPO_DOCUMENTO,
                                  //               TipoFicha = f.TIPO_FICHA,
                                  //               FechaSistema = c.FEC_SIST,
                                  //               IdUsuarioSistema = c.ID_USR_SIST,
                                  //               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                  //               idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                  //               NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                  //           }
                                  //       });



                return eft;
            }


            #endregion



            #region "Reconversion"

            if (idPrograma == (int)Enums.Programas.ReconversionProductiva)
            {
                var reco = 


                (from c in _mdb.T_BENEFICIARIOS
                              join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                              join rcp in _mdb.T_FICHA_REC_PROD on f.ID_FICHA equals rcp.ID_FICHA // 03/12/2013 - DI CAMPLI LEANDRO - SE AÑADE PARA OBTENER EL MONTO DE SUBPROGRAMA
                              from cu in
                                  _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                              from suc in
                                  _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                              from mon in
                                  _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                              from iva in
                                  _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                              from nac in
                                  _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                              from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                  ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                              from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()

                              from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == rcp.ID_SUBPROGRAMA).DefaultIfEmpty() // 03/12/2013 - DI CAMPLI LEANDRO - SE AÑADE PARA OBTENER EL MONTO DE SUBPROGRAMA
                              
                                where
                                  f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                  && f.TIPO_FICHA == 6
                                  &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.Ppp
                                   &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.PppProf
                                   &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.Vat
                                  &&
                                  (
                                      (
                                          (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                          ||
                                          (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                      )
                                  ) &&
                           ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                           ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                           ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                           (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                           (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                           (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                           (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                           (f.ID_ETAPA == idEtapa || idEtapa == 0)

                              select
                                  new Beneficiario
                                  {
                                      IdBeneficiario = c.ID_BENEFICIARIO,
                                      IdEstado = c.ID_ESTADO ?? 0,
                                      FechaSistema = c.FEC_SIST,
                                      IdFicha = c.ID_FICHA ?? 0,
                                      IdPrograma = c.ID_PROGRAMA ?? 0,
                                      IdUsuarioSistema = c.ID_USR_SIST,
                                      IdConvenio = prog.CONVENIO_BCO_CBA,
                                      NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                      CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                      CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                      CondicionIva = iva.COD_BCO_CBA ?? "0",
                                      Nacionalidad = c.NACIONALIDAD ?? 0,
                                      Residente = c.RESIDENTE,
                                      TipoPersona = c.TIPO_PERSONA,
                                      CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                      CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                      NombreEstado = c.T_ESTADOS.N_ESTADO,
                                      Cbu = cu.CBU ?? "",
                                      ImportePagoPlan = (sub.MONTO_SUB ?? 0) == 0 ? (prog.MONTO_PROG ?? 0) : (decimal)sub.MONTO_SUB, // 03/12/2013 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                                      NumeroCuenta = cu.NRO_CTA ?? 0,
                                      Programa = prog.N_PROGRAMA,
                                      MontoPrograma = (sub.MONTO_SUB ?? 0) == 0 ? (prog.MONTO_PROG ?? 0) : (decimal)sub.MONTO_SUB, // 03/12/2013 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                                      TieneApoderado = c.TIENE_APODERADO,
                                      Modalidad = null,
                                      AltaTemprana = null,
                                      ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                      FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                      FechaBajaBeneficio = c.FEC_BAJA,
                                      Apoderado = new Apoderado
                                      {
                                          NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                          IdSucursal = ap.ID_SUCURSAL_BCO,
                                          IdApoderadoNullable = ap.ID_APODERADO,
                                          Apellido = ap.APELLIDO ?? " ",
                                          Nombre = ap.NOMBRE ?? " ",
                                          NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                      },
                                      IdSucursal = suc.ID_TABLA_BCO_CBA,
                                      UsuarioSistema = c.T_USUARIOS.LOGIN,
                                      FechaNotificacion = c.FEC_NOTIF,
                                      FechaInicio = null,
                                      FechaFin = null,
                                      Ficha = new Ficha
                                      {
                                          Apellido = f.APELLIDO,
                                          Barrio = f.BARRIO,
                                          Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                          IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                          IdFicha = f.ID_FICHA,
                                          Calle = f.CALLE,
                                          CantidadHijos = f.CANTIDAD_HIJOS,
                                          CodigoPostal = f.CODIGO_POSTAL,
                                          CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                          Contacto = f.CONTACTO,
                                          Cuil = f.CUIL,
                                          DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                          TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                          TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                          TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                          TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                          Dpto = f.DPTO ?? " ",
                                          EntreCalles = f.ENTRECALLES ?? " ",
                                          EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                          EstadoCivil = f.ESTADO_CIVIL,
                                          FechaNacimiento = f.FER_NAC,
                                          Mail = f.MAIL,
                                          Manzana = f.MANZANA ?? " ",
                                          Monoblock = f.MONOBLOCK ?? " ",
                                          Nombre = f.NOMBRE,
                                          Numero = f.NUMERO,
                                          NumeroDocumento = f.NUMERO_DOCUMENTO,
                                          Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                          Piso = f.PISO ?? " ",
                                          Sexo = f.SEXO,
                                          TelefonoCelular = f.TEL_CELULAR,
                                          TelefonoFijo = f.TEL_FIJO,
                                          TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                          TipoDocumento = f.TIPO_DOCUMENTO,
                                          TipoFicha = f.TIPO_FICHA,
                                          FechaSistema = c.FEC_SIST,
                                          IdUsuarioSistema = c.ID_USR_SIST,
                                          UsuarioSistema = c.T_USUARIOS.LOGIN,
                                          idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                          NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                      }
                                  });


                return reco;
            }
            #endregion


            #region "ConfVos"

            if (idPrograma == (int)Enums.Programas.ConfiamosEnVos)
            {
                var confvos =


                (from c in _mdb.T_BENEFICIARIOS
                 join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                 join con in _mdb.T_FICHAS_CONF_VOS on f.ID_FICHA equals con.ID_FICHA // 03/12/2013 - DI CAMPLI LEANDRO - SE AÑADE PARA OBTENER EL MONTO DE SUBPROGRAMA
                 from cu in
                     _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                 from suc in
                     _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                 from mon in
                     _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                 from iva in
                     _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                 from nac in
                     _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                 from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                     ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                 from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()

                 from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == con.ID_SUBPROGRAMA).DefaultIfEmpty() // 03/12/2013 - DI CAMPLI LEANDRO - SE AÑADE PARA OBTENER EL MONTO DE SUBPROGRAMA

                 where
                   f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                   && f.TIPO_FICHA == 8
                   &&
                   c.ID_PROGRAMA != (int)Enums.TipoFicha.Ppp
                    &&
                   c.ID_PROGRAMA != (int)Enums.TipoFicha.PppProf
                    &&
                   c.ID_PROGRAMA != (int)Enums.TipoFicha.Vat
                    &&
                   c.ID_PROGRAMA != (int)Enums.TipoFicha.ReconversionProductiva
                   &&
                   (
                       (
                           (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                           ||
                           (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                       )
                   ) &&
            ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

            ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

            ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

            (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
            (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
            (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
            (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
            (f.ID_ETAPA == idEtapa || idEtapa == 0)

                 select
                     new Beneficiario
                     {
                         IdBeneficiario = c.ID_BENEFICIARIO,
                         IdEstado = c.ID_ESTADO ?? 0,
                         FechaSistema = c.FEC_SIST,
                         IdFicha = c.ID_FICHA ?? 0,
                         IdPrograma = c.ID_PROGRAMA ?? 0,
                         IdUsuarioSistema = c.ID_USR_SIST,
                         IdConvenio = prog.CONVENIO_BCO_CBA,
                         NumeroConvenio = prog.CONVENIO_BCO_CBA,
                         CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                         CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                         CondicionIva = iva.COD_BCO_CBA ?? "0",
                         Nacionalidad = c.NACIONALIDAD ?? 0,
                         Residente = c.RESIDENTE,
                         TipoPersona = c.TIPO_PERSONA,
                         CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                         CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                         NombreEstado = c.T_ESTADOS.N_ESTADO,
                         Cbu = cu.CBU ?? "",
                         ImportePagoPlan = (sub.MONTO_SUB ?? 0) == 0 ? (prog.MONTO_PROG ?? 0) : (decimal)sub.MONTO_SUB, // 03/12/2013 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                         NumeroCuenta = cu.NRO_CTA ?? 0,
                         Programa = prog.N_PROGRAMA,
                         MontoPrograma = (sub.MONTO_SUB ?? 0) == 0 ? (prog.MONTO_PROG ?? 0) : (decimal)sub.MONTO_SUB, // 03/12/2013 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                         TieneApoderado = c.TIENE_APODERADO,
                         Modalidad = null,
                         AltaTemprana = null,
                         ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                         FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                         FechaBajaBeneficio = c.FEC_BAJA,
                         Apoderado = new Apoderado
                         {
                             NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                             IdSucursal = ap.ID_SUCURSAL_BCO,
                             IdApoderadoNullable = ap.ID_APODERADO,
                             Apellido = ap.APELLIDO ?? " ",
                             Nombre = ap.NOMBRE ?? " ",
                             NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                         },
                         IdSucursal = suc.ID_TABLA_BCO_CBA,
                         UsuarioSistema = c.T_USUARIOS.LOGIN,
                         FechaNotificacion = c.FEC_NOTIF,
                         FechaInicio = null,
                         FechaFin = null,
                         Ficha = new Ficha
                         {
                             Apellido = f.APELLIDO,
                             Barrio = f.BARRIO,
                             Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                             IdLocalidad = f.ID_LOCALIDAD ?? 0,
                             IdFicha = f.ID_FICHA,
                             Calle = f.CALLE,
                             CantidadHijos = f.CANTIDAD_HIJOS,
                             CodigoPostal = f.CODIGO_POSTAL,
                             CodigoSeguridad = f.CODIGO_SEGURIDAD,
                             Contacto = f.CONTACTO,
                             Cuil = f.CUIL,
                             DeficienciaOtra = f.DEFICIENCIA_OTRA,
                             TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                             TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                             TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                             TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                             Dpto = f.DPTO ?? " ",
                             EntreCalles = f.ENTRECALLES ?? " ",
                             EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                             EstadoCivil = f.ESTADO_CIVIL,
                             FechaNacimiento = f.FER_NAC,
                             Mail = f.MAIL,
                             Manzana = f.MANZANA ?? " ",
                             Monoblock = f.MONOBLOCK ?? " ",
                             Nombre = f.NOMBRE,
                             Numero = f.NUMERO,
                             NumeroDocumento = f.NUMERO_DOCUMENTO,
                             Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                             Piso = f.PISO ?? " ",
                             Sexo = f.SEXO,
                             TelefonoCelular = f.TEL_CELULAR,
                             TelefonoFijo = f.TEL_FIJO,
                             TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                             TipoDocumento = f.TIPO_DOCUMENTO,
                             TipoFicha = f.TIPO_FICHA,
                             FechaSistema = c.FEC_SIST,
                             IdUsuarioSistema = c.ID_USR_SIST,
                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                             idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                             NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                         }
                     });


                return confvos;
            }
            #endregion


            #region "Todos"
            if (idPrograma == 0)
            {

                //PPP
                    var ppp = (from c in _mdb.T_BENEFICIARIOS
                               join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                               join fp in _mdb.T_FICHA_PPP on f.ID_FICHA equals fp.ID_FICHA
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                   ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                               from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                               where (idPrograma == 0 ? c.ID_PROGRAMA > 0 : c.ID_PROGRAMA == idPrograma) && f.TIPO_FICHA == 3 &&
                                   f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                   && (fp.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fp.MODALIDAD == (int)Enums.Modalidad.Cti && fp.ALTA_TEMPRANA == "S"))
                                   &&
                                   (
                                       (
                                           (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                           ||
                                           (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                       )
                                   )
                                     &&
                               ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                               ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                               ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                               (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                               (modalidad != "T" ? (fp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fp.MODALIDAD != null || string.IsNullOrEmpty(c.Modalidad))) &&
                               (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                               (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                               (altatemprana != "T" ? fp.ALTA_TEMPRANA == altatemprana : altatemprana == "T") &&//(c.AltaTemprana != null || string.IsNullOrEmpty(c.AltaTemprana))) &&
                               (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                               (f.ID_ETAPA == idEtapa || idEtapa == 0)


                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = prog.CONVENIO_BCO_CBA,
                                       NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA ?? 0,
                                       Programa = prog.N_PROGRAMA,
                                       MontoPrograma = prog.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       Modalidad = (fp.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                       AltaTemprana = fp.ALTA_TEMPRANA == null ? "N" : "S",
                                       ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                       FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                       FechaBajaBeneficio = c.FEC_BAJA,
                                       Apoderado = new Apoderado
                                       {
                                           NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                           IdSucursal = ap.ID_SUCURSAL_BCO,
                                           IdApoderadoNullable = ap.ID_APODERADO,
                                           Apellido = ap.APELLIDO ?? " ",
                                           Nombre = ap.NOMBRE ?? " ",
                                           NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                       },
                                       IdSucursal = suc.ID_TABLA_BCO_CBA,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       FechaInicio = fp.AT_FECHA_INICIO,
                                       FechaFin = fp.AT_FECHA_CESE,
                                       Ficha = new Ficha
                                       {
                                           Apellido = f.APELLIDO,
                                           Barrio = f.BARRIO,
                                           Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                           IdLocalidad = f.ID_LOCALIDAD,
                                           IdFicha = f.ID_FICHA,
                                           Calle = f.CALLE,
                                           CantidadHijos = f.CANTIDAD_HIJOS,
                                           CodigoPostal = f.CODIGO_POSTAL,
                                           CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                           Contacto = c.T_FICHAS.CONTACTO,
                                           Cuil = c.T_FICHAS.CUIL,
                                           DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                           TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                           TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                           TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                           TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                           Dpto = f.DPTO ?? " ",
                                           EntreCalles = f.ENTRECALLES ?? " ",
                                           EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                           EstadoCivil = f.ESTADO_CIVIL,
                                           FechaNacimiento = f.FER_NAC,
                                           Mail = f.MAIL,
                                           Manzana = f.MANZANA ?? " ",
                                           Monoblock = f.MONOBLOCK ?? " ",
                                           Nombre = f.NOMBRE,
                                           Numero = f.NUMERO,
                                           NumeroDocumento = f.NUMERO_DOCUMENTO,
                                           Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                           Piso = f.PISO ?? " ",
                                           Sexo = f.SEXO,
                                           TelefonoCelular = f.TEL_CELULAR,
                                           TelefonoFijo = f.TEL_FIJO,
                                           TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                           TipoDocumento = f.TIPO_DOCUMENTO,
                                           TipoFicha = f.TIPO_FICHA,
                                           FechaSistema = c.FEC_SIST,
                                           IdUsuarioSistema = c.ID_USR_SIST,
                                           UsuarioSistema = c.T_USUARIOS.LOGIN,
                                           idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                           NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                       }
                                   });

                //PPPP
                var pppp = (from c in _mdb.T_BENEFICIARIOS
                                join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                                join fppp in _mdb.T_FICHA_PPP_PROF on f.ID_FICHA equals fppp.ID_FICHA
                                from cu in
                                    _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                from suc in
                                    _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                from mon in
                                    _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                from iva in
                                    _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                from nac in
                                    _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                    ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                                where
                                    f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                    && (fppp.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fppp.MODALIDAD == (int)Enums.Modalidad.Cti && fppp.ALTA_TEMPRANA == "S"))
                                    &&
                                    (
                                        (
                                            (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                            ||
                                            (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                        )
                                    )

                               &&
                               ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                               ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                               ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                               (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                               (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                               (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                               (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                               (f.ID_ETAPA == idEtapa || idEtapa == 0)

                                select
                                    new Beneficiario
                                    {
                                        IdBeneficiario = c.ID_BENEFICIARIO,
                                        IdEstado = c.ID_ESTADO ?? 0,
                                        FechaSistema = c.FEC_SIST,
                                        IdFicha = c.ID_FICHA ?? 0,
                                        IdPrograma = c.ID_PROGRAMA ?? 0,
                                        IdUsuarioSistema = c.ID_USR_SIST,
                                        IdConvenio = prog.CONVENIO_BCO_CBA,
                                        NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                        CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                        CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                        CondicionIva = iva.COD_BCO_CBA ?? "0",
                                        Nacionalidad = c.NACIONALIDAD ?? 0,
                                        Residente = c.RESIDENTE,
                                        TipoPersona = c.TIPO_PERSONA,
                                        CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                        CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                        NombreEstado = c.T_ESTADOS.N_ESTADO,
                                        Cbu = cu.CBU ?? "",
                                        ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                        NumeroCuenta = cu.NRO_CTA,
                                        Programa = prog.N_PROGRAMA,
                                        MontoPrograma = prog.MONTO_PROG ?? 0,
                                        TieneApoderado = c.TIENE_APODERADO,
                                        Modalidad = (fppp.MODALIDAD ?? 0) == 1 ? "E" : "C",
                                        AltaTemprana = fppp.ALTA_TEMPRANA == null ? "N" : "S",
                                        ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                        FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                        FechaBajaBeneficio = c.FEC_BAJA,
                                        Apoderado =
                                        new Apoderado
                                        {
                                            NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                            IdSucursal = ap.ID_SUCURSAL_BCO,
                                            IdApoderadoNullable = ap.ID_APODERADO,
                                            Apellido = ap.APELLIDO ?? " ",
                                            Nombre = ap.NOMBRE ?? " ",
                                            NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                        },
                                        IdSucursal = suc.ID_TABLA_BCO_CBA,
                                        UsuarioSistema = c.T_USUARIOS.LOGIN,
                                        FechaNotificacion = c.FEC_NOTIF,
                                        FechaInicio = fppp.AT_FECHA_INICIO,
                                        FechaFin = fppp.AT_FECHA_CESE,
                                        Ficha =
                                            new Ficha
                                            {
                                                Apellido = f.APELLIDO,
                                                Barrio = f.BARRIO,
                                                Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                                IdLocalidad = f.ID_LOCALIDAD,
                                                IdFicha = f.ID_FICHA,
                                                Calle = f.CALLE,
                                                CantidadHijos = f.CANTIDAD_HIJOS,
                                                CodigoPostal = f.CODIGO_POSTAL,
                                                CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                                Contacto = c.T_FICHAS.CONTACTO,
                                                Cuil = c.T_FICHAS.CUIL,
                                                DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                TieneDeficienciaMental =
                                                    f.TIENE_DEF_MENTAL == "S" ? true : false,
                                                TieneDeficienciaMotora =
                                                    f.TIENE_DEF_MOTORA == "S" ? true : false,
                                                TieneDeficienciaPsicologia =
                                                    f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                TieneDeficienciaSensorial =
                                                    f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                Dpto = f.DPTO ?? " ",
                                                EntreCalles = f.ENTRECALLES ?? " ",
                                                EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                                EstadoCivil = f.ESTADO_CIVIL,
                                                FechaNacimiento = f.FER_NAC,
                                                Mail = f.MAIL,
                                                Manzana = f.MANZANA ?? " ",
                                                Monoblock = f.MONOBLOCK ?? " ",
                                                Nombre = f.NOMBRE,
                                                Numero = f.NUMERO,
                                                NumeroDocumento = f.NUMERO_DOCUMENTO,
                                                Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                                Piso = f.PISO ?? " ",
                                                Sexo = f.SEXO,
                                                TelefonoCelular = f.TEL_CELULAR,
                                                TelefonoFijo = f.TEL_FIJO,
                                                TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                                TipoDocumento = f.TIPO_DOCUMENTO,
                                                TipoFicha = f.TIPO_FICHA,
                                                FechaSistema = c.FEC_SIST,
                                                IdUsuarioSistema = c.ID_USR_SIST,
                                                UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                                NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                            }
                                    });

                //Vat
                    var vat = (from c in _mdb.T_BENEFICIARIOS
                               join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                               join fvat in _mdb.T_FICHA_VAT on f.ID_FICHA equals fvat.ID_FICHA
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                   ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                               from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                               where
                                   f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                   && (fvat.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fvat.MODALIDAD == (int)Enums.Modalidad.Cti && fvat.ALTA_TEMPRANA == "S"))
                                   &&
                                   (
                                       (
                                           (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                           ||
                                           (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                       )
                                   ) &&
                               ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                               ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                               ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                               (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                               (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                               (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                               (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                               (f.ID_ETAPA == idEtapa || idEtapa == 0)

                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = prog.CONVENIO_BCO_CBA,
                                       NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA ?? 0,
                                       Programa = prog.N_PROGRAMA,
                                       MontoPrograma = prog.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       Modalidad = (fvat.MODALIDAD ?? 0) == 1 ? "E" : "C",
                                       AltaTemprana = fvat.ALTA_TEMPRANA == null ? "N" : "S",
                                       ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                       FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                       FechaBajaBeneficio = c.FEC_BAJA,
                                       Apoderado = new Apoderado { NumeroCuentaBco = ap.NRO_CUENTA_BCO, IdSucursal = ap.ID_SUCURSAL_BCO, IdApoderadoNullable = ap.ID_APODERADO, Apellido = ap.APELLIDO ?? " ", Nombre = ap.NOMBRE ?? " ", NumeroDocumento = ap.NRO_DOCUMENTO ?? " " },
                                       IdSucursal = suc.ID_TABLA_BCO_CBA,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       FechaInicio = fvat.AT_FECHA_INICIO,
                                       FechaFin = fvat.AT_FECHA_CESE,

                                       Ficha =
                                           new Ficha
                                           {
                                               Apellido = f.APELLIDO,
                                               Barrio = f.BARRIO,
                                               Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                               IdFicha = f.ID_FICHA,
                                               Calle = f.CALLE,
                                               CantidadHijos = f.CANTIDAD_HIJOS,
                                               CodigoPostal = f.CODIGO_POSTAL,
                                               CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental =
                                                   f.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora =
                                                   f.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia =
                                                   f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial =
                                                   f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = f.DPTO ?? " ",
                                               EntreCalles = f.ENTRECALLES ?? " ",
                                               EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = f.ESTADO_CIVIL,
                                               FechaNacimiento = f.FER_NAC,
                                               Mail = f.MAIL,
                                               Manzana = f.MANZANA ?? " ",
                                               Monoblock = f.MONOBLOCK ?? " ",
                                               Nombre = f.NOMBRE,
                                               Numero = f.NUMERO,
                                               NumeroDocumento = f.NUMERO_DOCUMENTO,
                                               Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                               Piso = f.PISO ?? " ",
                                               Sexo = f.SEXO,
                                               TelefonoCelular = f.TEL_CELULAR,
                                               TelefonoFijo = f.TEL_FIJO,
                                               TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = f.TIPO_DOCUMENTO,
                                               TipoFicha = f.TIPO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                               NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                           }
                                   });

                //Terciarios e Universitarios
                var teruni = (from c in _mdb.T_BENEFICIARIOS
                                  join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                                  from cu in
                                      _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                  from suc in
                                      _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                  from mon in
                                      _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                  from iva in
                                      _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                  from nac in
                                      _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                  from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                      ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                  from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                                  where
                                      f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                      &&
                                      c.ID_PROGRAMA != (int)Enums.TipoFicha.Ppp
                                       &&
                                      c.ID_PROGRAMA != (int)Enums.TipoFicha.PppProf
                                       &&
                                      c.ID_PROGRAMA != (int)Enums.TipoFicha.Vat
                                      &&
                                      (
                                          (
                                              (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                              ||
                                              (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                          )
                                      ) &&
                               ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                               ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                               ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                               (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                               (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                               (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                               (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                               (f.ID_ETAPA == idEtapa || idEtapa == 0)

                                  select
                                      new Beneficiario
                                      {
                                          IdBeneficiario = c.ID_BENEFICIARIO,
                                          IdEstado = c.ID_ESTADO ?? 0,
                                          FechaSistema = c.FEC_SIST,
                                          IdFicha = c.ID_FICHA ?? 0,
                                          IdPrograma = c.ID_PROGRAMA ?? 0,
                                          IdUsuarioSistema = c.ID_USR_SIST,
                                          IdConvenio = prog.CONVENIO_BCO_CBA,
                                          NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                          CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                          CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                          CondicionIva = iva.COD_BCO_CBA ?? "0",
                                          Nacionalidad = c.NACIONALIDAD ?? 0,
                                          Residente = c.RESIDENTE,
                                          TipoPersona = c.TIPO_PERSONA,
                                          CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                          CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                          NombreEstado = c.T_ESTADOS.N_ESTADO,
                                          Cbu = cu.CBU ?? "",
                                          ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                          NumeroCuenta = cu.NRO_CTA ?? 0,
                                          Programa = prog.N_PROGRAMA,
                                          MontoPrograma = prog.MONTO_PROG ?? 0,
                                          TieneApoderado = c.TIENE_APODERADO,
                                          Modalidad = null,
                                          AltaTemprana = null,
                                          ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                          FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                          FechaBajaBeneficio = c.FEC_BAJA,
                                          Apoderado = new Apoderado
                                          {
                                              NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                              IdSucursal = ap.ID_SUCURSAL_BCO,
                                              IdApoderadoNullable = ap.ID_APODERADO,
                                              Apellido = ap.APELLIDO ?? " ",
                                              Nombre = ap.NOMBRE ?? " ",
                                              NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                          },
                                          IdSucursal = suc.ID_TABLA_BCO_CBA,
                                          UsuarioSistema = c.T_USUARIOS.LOGIN,
                                          FechaNotificacion = c.FEC_NOTIF,
                                          FechaInicio = null,
                                          FechaFin = null,
                                          Ficha = new Ficha
                                          {
                                              Apellido = f.APELLIDO,
                                              Barrio = f.BARRIO,
                                              Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                              IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                              IdFicha = f.ID_FICHA,
                                              Calle = f.CALLE,
                                              CantidadHijos = f.CANTIDAD_HIJOS,
                                              CodigoPostal = f.CODIGO_POSTAL,
                                              CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                              Contacto = f.CONTACTO,
                                              Cuil = f.CUIL,
                                              DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                              TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                              TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                              TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                              TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                              Dpto = f.DPTO ?? " ",
                                              EntreCalles = f.ENTRECALLES ?? " ",
                                              EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                              EstadoCivil = f.ESTADO_CIVIL,
                                              FechaNacimiento = f.FER_NAC,
                                              Mail = f.MAIL,
                                              Manzana = f.MANZANA ?? " ",
                                              Monoblock = f.MONOBLOCK ?? " ",
                                              Nombre = f.NOMBRE,
                                              Numero = f.NUMERO,
                                              NumeroDocumento = f.NUMERO_DOCUMENTO,
                                              Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                              Piso = f.PISO ?? " ",
                                              Sexo = f.SEXO,
                                              TelefonoCelular = f.TEL_CELULAR,
                                              TelefonoFijo = f.TEL_FIJO,
                                              TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                              TipoDocumento = f.TIPO_DOCUMENTO,
                                              TipoFicha = f.TIPO_FICHA,
                                              FechaSistema = c.FEC_SIST,
                                              IdUsuarioSistema = c.ID_USR_SIST,
                                              UsuarioSistema = c.T_USUARIOS.LOGIN,
                                              idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                              NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                          }
                                      });

                return ppp.Union(teruni.Union(vat.Union(pppp)));

#endregion
            
            }



            return null;
            //return ppp.Union(teruni.Union(vat.Union(pppp)));
        }
        
        
        // al parecer el compilador genera over flow por añadir otro programa al compilar - esto sucede solo con la publicación y no desde visual studio
        // recomendacion generar funciones separadas para consultar las cuentas o agrupar algunas
        private IQueryable<IBeneficiario> QBeneficiarioConCuentasConVos(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altatemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string nrotramite)
        {
           

            if (idPrograma == (int)Enums.Programas.ConfiamosEnVos)
            {
                #region "ConfVos"
                var confvos =


                (from c in _mdb.T_BENEFICIARIOS
                 join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                 join con in _mdb.T_FICHAS_CONF_VOS on f.ID_FICHA equals con.ID_FICHA // 03/12/2013 - DI CAMPLI LEANDRO - SE AÑADE PARA OBTENER EL MONTO DE SUBPROGRAMA
                 from cu in
                     _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                 from suc in
                     _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                 from mon in
                     _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                 from iva in
                     _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                 from nac in
                     _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                 from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                     ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                 from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()

                 from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == con.ID_SUBPROGRAMA).DefaultIfEmpty() // 03/12/2013 - DI CAMPLI LEANDRO - SE AÑADE PARA OBTENER EL MONTO DE SUBPROGRAMA
                 from conv in _mdb.T_CONVENIOS.Where(conv => conv.ID_CONVENIO == sub.ID_CONVENIO).DefaultIfEmpty() // 17/07/2014
                 where
                   f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                   && f.TIPO_FICHA == 8
                   &&
                   c.ID_PROGRAMA != (int)Enums.TipoFicha.Ppp
                    &&
                   c.ID_PROGRAMA != (int)Enums.TipoFicha.PppProf
                    &&
                   c.ID_PROGRAMA != (int)Enums.TipoFicha.Vat
                    &&
                   c.ID_PROGRAMA != (int)Enums.TipoFicha.ReconversionProductiva
                   &&
                   (
                       (
                           (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                           ||
                           (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                       )
                   ) &&
            ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

            ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

            ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

            (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
            (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
            (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
            (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
            (f.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim())) &&
            (f.ID_ETAPA == idEtapa || idEtapa == 0)

                 select
                     new Beneficiario
                     {
                         IdBeneficiario = c.ID_BENEFICIARIO,
                         IdEstado = c.ID_ESTADO ?? 0,
                         FechaSistema = c.FEC_SIST,
                         IdFicha = c.ID_FICHA ?? 0,
                         IdPrograma = c.ID_PROGRAMA ?? 0,
                         IdUsuarioSistema = c.ID_USR_SIST,
                         IdConvenio = prog.CONVENIO_BCO_CBA,
                         NumeroConvenio = prog.CONVENIO_BCO_CBA,
                         CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                         CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                         CondicionIva = iva.COD_BCO_CBA ?? "0",
                         Nacionalidad = c.NACIONALIDAD ?? 0,
                         Residente = c.RESIDENTE,
                         TipoPersona = c.TIPO_PERSONA,
                         CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                         CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                         NombreEstado = c.T_ESTADOS.N_ESTADO,
                         Cbu = cu.CBU ?? "",
                         ImportePagoPlan = (sub.MONTO_SUB ?? 0) == 0 ? (prog.MONTO_PROG ?? 0) : (decimal)sub.MONTO_SUB, // 03/12/2013 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                         NumeroCuenta = cu.NRO_CTA ?? 0,
                         Programa = prog.N_PROGRAMA,
                         MontoPrograma = (sub.MONTO_SUB ?? 0) == 0 ? (prog.MONTO_PROG ?? 0) : (decimal)sub.MONTO_SUB, // 03/12/2013 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                         TieneApoderado = c.TIENE_APODERADO,
                         Modalidad = null,
                         AltaTemprana = null,
                         ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                         FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                         FechaBajaBeneficio = c.FEC_BAJA,
                         EsBenfProgresar = con.BENEF_PROGRE ?? "N",
                         idEscuela = con.ID_ESCUELA ?? 0,
                         convenio = sub.ID_CONVENIO == null || sub.ID_CONVENIO == 0 ? prog.CONVENIO_BCO_CBA ?? "" : conv.N_CONVENIO, // 17/07/2014
                         idSubprograma = sub.ID_SUBPROGRAMA == null ? 0 : sub.ID_SUBPROGRAMA,
                         Apoderado = new Apoderado
                         {
                             NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                             IdSucursal = ap.ID_SUCURSAL_BCO,
                             IdApoderadoNullable = ap.ID_APODERADO,
                             Apellido = ap.APELLIDO ?? " ",
                             Nombre = ap.NOMBRE ?? " ",
                             NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                         },
                         IdSucursal = suc.ID_TABLA_BCO_CBA,
                         UsuarioSistema = c.T_USUARIOS.LOGIN,
                         FechaNotificacion = c.FEC_NOTIF,
                         FechaInicio = null,
                         FechaFin = null,
                         Ficha = new Ficha
                         {
                             Apellido = f.APELLIDO,
                             Barrio = f.BARRIO,
                             Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                             IdLocalidad = f.ID_LOCALIDAD ?? 0,
                             IdFicha = f.ID_FICHA,
                             Calle = f.CALLE,
                             CantidadHijos = f.CANTIDAD_HIJOS,
                             CodigoPostal = f.CODIGO_POSTAL,
                             CodigoSeguridad = f.CODIGO_SEGURIDAD,
                             Contacto = f.CONTACTO,
                             Cuil = f.CUIL,
                             DeficienciaOtra = f.DEFICIENCIA_OTRA,
                             TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                             TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                             TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                             TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                             Dpto = f.DPTO ?? " ",
                             EntreCalles = f.ENTRECALLES ?? " ",
                             EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                             EstadoCivil = f.ESTADO_CIVIL,
                             FechaNacimiento = f.FER_NAC,
                             Mail = f.MAIL,
                             Manzana = f.MANZANA ?? " ",
                             Monoblock = f.MONOBLOCK ?? " ",
                             Nombre = f.NOMBRE,
                             Numero = f.NUMERO,
                             NumeroDocumento = f.NUMERO_DOCUMENTO,
                             Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                             Piso = f.PISO ?? " ",
                             Sexo = f.SEXO,
                             TelefonoCelular = f.TEL_CELULAR,
                             TelefonoFijo = f.TEL_FIJO,
                             TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                             TipoDocumento = f.TIPO_DOCUMENTO,
                             TipoFicha = f.TIPO_FICHA,
                             FechaSistema = c.FEC_SIST,
                             IdUsuarioSistema = c.ID_USR_SIST,
                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                             idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                             NombreEtapa = f.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                             NroTramite = f.NRO_TRAMITE ?? " "
                         }
                     });


                return confvos;

                #endregion

            }




            return null;

        }

        private IQueryable<IBeneficiario> QBeneficiarioConCuentasPrueba(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altatemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string nrotramite, int tipoprograma = 0, int subprograma = 0)
        {
            #region "PPP"
            if (idPrograma == (int)Enums.Programas.Ppp)
            {
                var ppp = (from c in _mdb.T_BENEFICIARIOS
                           join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                           join fp in _mdb.T_FICHA_PPP on f.ID_FICHA equals fp.ID_FICHA
                           from cu in
                               _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                           from suc in
                               _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                           from mon in
                               _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                           from iva in
                               _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                           from nac in
                               _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                           from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                               ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                           from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                           from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == fp.ID_SUBPROGRAMA).DefaultIfEmpty() // 15/10/2016 - DI CAMPLI LEANDRO - SE AÑADE PARA OBTENER EL MONTO DE SUBPROGRAMA
                           from cf in _mdb.T_FICHAS_CAJA.Where(cf => cf.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                           where (idPrograma == 0 ? c.ID_PROGRAMA > 0 : c.ID_PROGRAMA == idPrograma) && f.TIPO_FICHA == 3 &&
                               f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                               && (fp.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fp.MODALIDAD == (int)Enums.Modalidad.Cti && fp.ALTA_TEMPRANA == "S"))
                               &&
                               (
                                   (
                                       (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                       ||
                                       (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                   )
                               )
                                 &&
                           ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                           ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                           ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                           (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                           (modalidad != "T" ? (fp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fp.MODALIDAD != null || string.IsNullOrEmpty(c.Modalidad))) &&
                           (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                           (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                           (altatemprana != "T" ? fp.ALTA_TEMPRANA == altatemprana : altatemprana == "T") &&//(c.AltaTemprana != null || string.IsNullOrEmpty(c.AltaTemprana))) &&
                           (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                           (f.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim())) &&
                           (f.ID_ETAPA == idEtapa || idEtapa == 0) &&
                           (fp.TIPO_PPP == tipoprograma || tipoprograma == 0)  &&
                           (fp.ID_SUBPROGRAMA == subprograma || subprograma == 0)

                           select
                               new Beneficiario
                               {
                                   IdBeneficiario = c.ID_BENEFICIARIO,
                                   IdEstado = c.ID_ESTADO ?? 0,
                                   FechaSistema = c.FEC_SIST,
                                   IdFicha = c.ID_FICHA ?? 0,
                                   IdPrograma = c.ID_PROGRAMA ?? 0,
                                   IdUsuarioSistema = c.ID_USR_SIST,
                                   IdConvenio = prog.CONVENIO_BCO_CBA,
                                   NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                   CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                   CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                   CondicionIva = iva.COD_BCO_CBA ?? "0",
                                   Nacionalidad = c.NACIONALIDAD ?? 0,
                                   Residente = c.RESIDENTE,
                                   TipoPersona = c.TIPO_PERSONA,
                                   CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                   CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                   NombreEstado = c.T_ESTADOS.N_ESTADO,
                                   Cbu = cu.CBU ?? "",
                                   ImportePagoPlan = (sub.MONTO_SUB ?? 0) == 0 ? /*(prog.MONTO_PROG ?? 0)*/ 0 : (decimal)sub.MONTO_SUB, // 15/10/2016 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                                   NumeroCuenta = cu.NRO_CTA ?? 0,
                                   Programa = prog.N_PROGRAMA,
                                   MontoPrograma = (sub.MONTO_SUB ?? 0) == 0 ? /*(prog.MONTO_PROG ?? 0)*/ 0 : (decimal)sub.MONTO_SUB, // 15/10/2016 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                                   TieneApoderado = c.TIENE_APODERADO,
                                   Modalidad = (fp.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                   AltaTemprana = fp.ALTA_TEMPRANA == null ? "N" : "S",
                                   ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                   FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                   FechaBajaBeneficio = c.FEC_BAJA,
                                   convenio = prog.CONVENIO_BCO_CBA ?? "", // 17/07/2014
                                   idSubprograma = sub.ID_SUBPROGRAMA == null ? 0 : sub.ID_SUBPROGRAMA,
                                   TipoPrograma = fp.TIPO_PPP ?? 0,
                                   Apoderado = new Apoderado
                                   {
                                       NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                       IdSucursal = ap.ID_SUCURSAL_BCO,
                                       IdApoderadoNullable = ap.ID_APODERADO,
                                       Apellido = ap.APELLIDO ?? " ",
                                       Nombre = ap.NOMBRE ?? " ",
                                       NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                   },
                                   IdSucursal = suc.ID_TABLA_BCO_CBA,
                                   UsuarioSistema = c.T_USUARIOS.LOGIN,
                                   FechaNotificacion = c.FEC_NOTIF,
                                   FechaInicio = fp.AT_FECHA_INICIO,
                                   FechaFin = fp.AT_FECHA_CESE,
                                   Ficha = new Ficha
                                   {
                                       Apellido = f.APELLIDO,
                                       Barrio = f.BARRIO,
                                       Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                       IdLocalidad = f.ID_LOCALIDAD,
                                       IdFicha = f.ID_FICHA,
                                       Calle = f.CALLE,
                                       CantidadHijos = f.CANTIDAD_HIJOS,
                                       CodigoPostal = f.CODIGO_POSTAL,
                                       CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                       Contacto = c.T_FICHAS.CONTACTO,
                                       Cuil = c.T_FICHAS.CUIL,
                                       DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                       TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                       TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                       TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                       TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                       Dpto = f.DPTO ?? " ",
                                       EntreCalles = f.ENTRECALLES ?? " ",
                                       EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                       EstadoCivil = f.ESTADO_CIVIL,
                                       FechaNacimiento = f.FER_NAC,
                                       Mail = f.MAIL,
                                       Manzana = f.MANZANA ?? " ",
                                       Monoblock = f.MONOBLOCK ?? " ",
                                       Nombre = f.NOMBRE,
                                       Numero = f.NUMERO,
                                       NumeroDocumento = f.NUMERO_DOCUMENTO,
                                       Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                       Piso = f.PISO ?? " ",
                                       Sexo = f.SEXO,
                                       TelefonoCelular = f.TEL_CELULAR,
                                       TelefonoFijo = f.TEL_FIJO,
                                       TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                       TipoDocumento = f.TIPO_DOCUMENTO,
                                       TipoFicha = f.TIPO_FICHA,
                                       FechaSistema = c.FEC_SIST,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                       NombreEtapa = f.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                       NroTramite = f.NRO_TRAMITE ?? " ",
                                       idCaja = cf.ID_CAJA == null ? 0 : cf.ID_CAJA,
                                       IdEmpresa = fp.ID_EMPRESA == null ? 0 : fp.ID_EMPRESA
                                   },
                                   IdEmpresa = fp.ID_EMPRESA == null ? 0 : fp.ID_EMPRESA
                               });
                return ppp;
            }
            #endregion

            #region //PPPP
            //if (idPrograma == (int)Enums.Programas.PppProf)
            //{
            //    var pppp = (from c in _mdb.T_BENEFICIARIOS
            //                join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
            //                join fppp in _mdb.T_FICHA_PPP_PROF on f.ID_FICHA equals fppp.ID_FICHA
            //                from cu in
            //                    _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
            //                from suc in
            //                    _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
            //                from mon in
            //                    _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
            //                from iva in
            //                    _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
            //                from nac in
            //                    _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
            //                from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
            //                    ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
            //                from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
            //                where
            //                    f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
            //                    && (fppp.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fppp.MODALIDAD == (int)Enums.Modalidad.Cti && fppp.ALTA_TEMPRANA == "S"))
            //                    &&
            //                    (
            //                        (
            //                            (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
            //                            ||
            //                            (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
            //                        )
            //                    )

            //               &&
            //               ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

            //               ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

            //               ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

            //               (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
            //               (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
            //               (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
            //               (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
            //               (f.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim())) &&
            //               (f.ID_ETAPA == idEtapa || idEtapa == 0)

            //                select
            //                    new Beneficiario
            //                    {
            //                        IdBeneficiario = c.ID_BENEFICIARIO,
            //                        IdEstado = c.ID_ESTADO ?? 0,
            //                        FechaSistema = c.FEC_SIST,
            //                        IdFicha = c.ID_FICHA ?? 0,
            //                        IdPrograma = c.ID_PROGRAMA ?? 0,
            //                        IdUsuarioSistema = c.ID_USR_SIST,
            //                        IdConvenio = prog.CONVENIO_BCO_CBA,
            //                        NumeroConvenio = prog.CONVENIO_BCO_CBA,
            //                        CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
            //                        CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
            //                        CondicionIva = iva.COD_BCO_CBA ?? "0",
            //                        Nacionalidad = c.NACIONALIDAD ?? 0,
            //                        Residente = c.RESIDENTE,
            //                        TipoPersona = c.TIPO_PERSONA,
            //                        CodigoMoneda = mon.COD_BCO_CBA ?? "0",
            //                        CodigoSucursal = suc.COD_BCO_CBA ?? " ",
            //                        NombreEstado = c.T_ESTADOS.N_ESTADO,
            //                        Cbu = cu.CBU ?? "",
            //                        ImportePagoPlan = prog.MONTO_PROG ?? 0,
            //                        NumeroCuenta = cu.NRO_CTA,
            //                        Programa = prog.N_PROGRAMA,
            //                        MontoPrograma = prog.MONTO_PROG ?? 0,
            //                        TieneApoderado = c.TIENE_APODERADO,
            //                        Modalidad = (fppp.MODALIDAD ?? 0) == 1 ? "E" : "C",
            //                        AltaTemprana = fppp.ALTA_TEMPRANA == null ? "N" : "S",
            //                        ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
            //                        FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
            //                        FechaBajaBeneficio = c.FEC_BAJA,
            //                        convenio = prog.CONVENIO_BCO_CBA ?? "", // 17/07/2014
            //                        Apoderado =
            //                        new Apoderado
            //                        {
            //                            NumeroCuentaBco = ap.NRO_CUENTA_BCO,
            //                            IdSucursal = ap.ID_SUCURSAL_BCO,
            //                            IdApoderadoNullable = ap.ID_APODERADO,
            //                            Apellido = ap.APELLIDO ?? " ",
            //                            Nombre = ap.NOMBRE ?? " ",
            //                            NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
            //                        },
            //                        IdSucursal = suc.ID_TABLA_BCO_CBA,
            //                        UsuarioSistema = c.T_USUARIOS.LOGIN,
            //                        FechaNotificacion = c.FEC_NOTIF,
            //                        FechaInicio = fppp.AT_FECHA_INICIO,
            //                        FechaFin = fppp.AT_FECHA_CESE,
            //                        Ficha =
            //                            new Ficha
            //                            {
            //                                Apellido = f.APELLIDO,
            //                                Barrio = f.BARRIO,
            //                                Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
            //                                IdLocalidad = f.ID_LOCALIDAD,
            //                                IdFicha = f.ID_FICHA,
            //                                Calle = f.CALLE,
            //                                CantidadHijos = f.CANTIDAD_HIJOS,
            //                                CodigoPostal = f.CODIGO_POSTAL,
            //                                CodigoSeguridad = f.CODIGO_SEGURIDAD,
            //                                Contacto = c.T_FICHAS.CONTACTO,
            //                                Cuil = c.T_FICHAS.CUIL,
            //                                DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
            //                                TieneDeficienciaMental =
            //                                    f.TIENE_DEF_MENTAL == "S" ? true : false,
            //                                TieneDeficienciaMotora =
            //                                    f.TIENE_DEF_MOTORA == "S" ? true : false,
            //                                TieneDeficienciaPsicologia =
            //                                    f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
            //                                TieneDeficienciaSensorial =
            //                                    f.TIENE_DEF_SENSORIAL == "S" ? true : false,
            //                                Dpto = f.DPTO ?? " ",
            //                                EntreCalles = f.ENTRECALLES ?? " ",
            //                                EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
            //                                EstadoCivil = f.ESTADO_CIVIL,
            //                                FechaNacimiento = f.FER_NAC,
            //                                Mail = f.MAIL,
            //                                Manzana = f.MANZANA ?? " ",
            //                                Monoblock = f.MONOBLOCK ?? " ",
            //                                Nombre = f.NOMBRE,
            //                                Numero = f.NUMERO,
            //                                NumeroDocumento = f.NUMERO_DOCUMENTO,
            //                                Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
            //                                Piso = f.PISO ?? " ",
            //                                Sexo = f.SEXO,
            //                                TelefonoCelular = f.TEL_CELULAR,
            //                                TelefonoFijo = f.TEL_FIJO,
            //                                TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
            //                                TipoDocumento = f.TIPO_DOCUMENTO,
            //                                TipoFicha = f.TIPO_FICHA,
            //                                FechaSistema = c.FEC_SIST,
            //                                IdUsuarioSistema = c.ID_USR_SIST,
            //                                UsuarioSistema = c.T_USUARIOS.LOGIN,
            //                                idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
            //                                NombreEtapa = f.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
            //                                NroTramite = f.NRO_TRAMITE ?? " "
            //                            }
            //                    });

            //    return pppp;
            //}
            #endregion

            #region //"Vat"
            //if (idPrograma == (int)Enums.Programas.Vat)
            //{
            //    var vat = (from c in _mdb.T_BENEFICIARIOS
            //               join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
            //               join fvat in _mdb.T_FICHA_VAT on f.ID_FICHA equals fvat.ID_FICHA
            //               from cu in
            //                   _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
            //               from suc in
            //                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
            //               from mon in
            //                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
            //               from iva in
            //                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
            //               from nac in
            //                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
            //               from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
            //                   ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
            //               from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
            //               where
            //                   f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
            //                   && (fvat.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fvat.MODALIDAD == (int)Enums.Modalidad.Cti && fvat.ALTA_TEMPRANA == "S"))
            //                   &&
            //                   (
            //                       (
            //                           (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
            //                           ||
            //                           (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
            //                       )
            //                   ) &&
            //               ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

            //               ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

            //               ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

            //               (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
            //               (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
            //               (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
            //               (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
            //               (f.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim())) &&
            //               (f.ID_ETAPA == idEtapa || idEtapa == 0)

            //               select
            //                   new Beneficiario
            //                   {
            //                       IdBeneficiario = c.ID_BENEFICIARIO,
            //                       IdEstado = c.ID_ESTADO ?? 0,
            //                       FechaSistema = c.FEC_SIST,
            //                       IdFicha = c.ID_FICHA ?? 0,
            //                       IdPrograma = c.ID_PROGRAMA ?? 0,
            //                       IdUsuarioSistema = c.ID_USR_SIST,
            //                       IdConvenio = prog.CONVENIO_BCO_CBA,
            //                       NumeroConvenio = prog.CONVENIO_BCO_CBA,
            //                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
            //                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
            //                       CondicionIva = iva.COD_BCO_CBA ?? "0",
            //                       Nacionalidad = c.NACIONALIDAD ?? 0,
            //                       Residente = c.RESIDENTE,
            //                       TipoPersona = c.TIPO_PERSONA,
            //                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
            //                       CodigoSucursal = suc.COD_BCO_CBA ?? "0",
            //                       NombreEstado = c.T_ESTADOS.N_ESTADO,
            //                       Cbu = cu.CBU ?? "",
            //                       ImportePagoPlan = prog.MONTO_PROG ?? 0,
            //                       NumeroCuenta = cu.NRO_CTA ?? 0,
            //                       Programa = prog.N_PROGRAMA,
            //                       MontoPrograma = prog.MONTO_PROG ?? 0,
            //                       TieneApoderado = c.TIENE_APODERADO,
            //                       Modalidad = (fvat.MODALIDAD ?? 0) == 1 ? "E" : "C",
            //                       AltaTemprana = fvat.ALTA_TEMPRANA == null ? "N" : "S",
            //                       ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
            //                       FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
            //                       FechaBajaBeneficio = c.FEC_BAJA,
            //                       Apoderado = new Apoderado { NumeroCuentaBco = ap.NRO_CUENTA_BCO, IdSucursal = ap.ID_SUCURSAL_BCO, IdApoderadoNullable = ap.ID_APODERADO, Apellido = ap.APELLIDO ?? " ", Nombre = ap.NOMBRE ?? " ", NumeroDocumento = ap.NRO_DOCUMENTO ?? " " },
            //                       IdSucursal = suc.ID_TABLA_BCO_CBA,
            //                       UsuarioSistema = c.T_USUARIOS.LOGIN,
            //                       FechaNotificacion = c.FEC_NOTIF,
            //                       FechaInicio = fvat.AT_FECHA_INICIO,
            //                       FechaFin = fvat.AT_FECHA_CESE,
            //                       convenio = prog.CONVENIO_BCO_CBA ?? "", // 17/07/2014
            //                       Ficha =
            //                           new Ficha
            //                           {
            //                               Apellido = f.APELLIDO,
            //                               Barrio = f.BARRIO,
            //                               Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
            //                               IdLocalidad = f.ID_LOCALIDAD ?? 0,
            //                               IdFicha = f.ID_FICHA,
            //                               Calle = f.CALLE,
            //                               CantidadHijos = f.CANTIDAD_HIJOS,
            //                               CodigoPostal = f.CODIGO_POSTAL,
            //                               CodigoSeguridad = f.CODIGO_SEGURIDAD,
            //                               Contacto = c.T_FICHAS.CONTACTO,
            //                               Cuil = c.T_FICHAS.CUIL,
            //                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
            //                               TieneDeficienciaMental =
            //                                   f.TIENE_DEF_MENTAL == "S" ? true : false,
            //                               TieneDeficienciaMotora =
            //                                   f.TIENE_DEF_MOTORA == "S" ? true : false,
            //                               TieneDeficienciaPsicologia =
            //                                   f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
            //                               TieneDeficienciaSensorial =
            //                                   f.TIENE_DEF_SENSORIAL == "S" ? true : false,
            //                               Dpto = f.DPTO ?? " ",
            //                               EntreCalles = f.ENTRECALLES ?? " ",
            //                               EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
            //                               EstadoCivil = f.ESTADO_CIVIL,
            //                               FechaNacimiento = f.FER_NAC,
            //                               Mail = f.MAIL,
            //                               Manzana = f.MANZANA ?? " ",
            //                               Monoblock = f.MONOBLOCK ?? " ",
            //                               Nombre = f.NOMBRE,
            //                               Numero = f.NUMERO,
            //                               NumeroDocumento = f.NUMERO_DOCUMENTO,
            //                               Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
            //                               Piso = f.PISO ?? " ",
            //                               Sexo = f.SEXO,
            //                               TelefonoCelular = f.TEL_CELULAR,
            //                               TelefonoFijo = f.TEL_FIJO,
            //                               TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
            //                               TipoDocumento = f.TIPO_DOCUMENTO,
            //                               TipoFicha = f.TIPO_FICHA,
            //                               FechaSistema = c.FEC_SIST,
            //                               IdUsuarioSistema = c.ID_USR_SIST,
            //                               UsuarioSistema = c.T_USUARIOS.LOGIN,
            //                               idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
            //                               NombreEtapa = f.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
            //                               NroTramite = f.NRO_TRAMITE ?? " "
            //                           }
            //                   });

            //    return vat;
            //}
            #endregion

            #region            //Terciarios
            if (idPrograma == (int)Enums.Programas.Terciaria)
            {
                var ter = (from c in _mdb.T_BENEFICIARIOS
                              join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                              join fp in _mdb.T_FICHA_TERCIARIO on f.ID_FICHA equals fp.ID_FICHA
                              from cu in
                                  _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                              from suc in
                                  _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                              from mon in
                                  _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                              from iva in
                                  _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                              from nac in
                                  _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                              from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                  ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                              from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                              from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == fp.ID_SUBPROGRAMA).DefaultIfEmpty() // 05/12/2016 - DI CAMPLI LEANDRO - SE AÑADE PARA OBTENER EL MONTO DE SUBPROGRAMA
                              where
                                  f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                  &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.Ppp
                                   &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.PppProf
                                   &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.Vat
                                  &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.Universitaria
                                  &&
                                  (
                                      (
                                          (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                          ||
                                          (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                      )
                                  ) &&
                           ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                           ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                           ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                           (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                           (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                           (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                           (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                           (f.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim())) &&
                           (f.ID_ETAPA == idEtapa || idEtapa == 0)

                              select
                                  new Beneficiario
                                  {
                                      IdBeneficiario = c.ID_BENEFICIARIO,
                                      IdEstado = c.ID_ESTADO ?? 0,
                                      FechaSistema = c.FEC_SIST,
                                      IdFicha = c.ID_FICHA ?? 0,
                                      IdPrograma = c.ID_PROGRAMA ?? 0,
                                      IdUsuarioSistema = c.ID_USR_SIST,
                                      IdConvenio = prog.CONVENIO_BCO_CBA,
                                      NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                      CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                      CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                      CondicionIva = iva.COD_BCO_CBA ?? "0",
                                      Nacionalidad = c.NACIONALIDAD ?? 0,
                                      Residente = c.RESIDENTE,
                                      TipoPersona = c.TIPO_PERSONA,
                                      CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                      CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                      NombreEstado = c.T_ESTADOS.N_ESTADO,
                                      Cbu = cu.CBU ?? "",
                                      ImportePagoPlan = (sub.MONTO_SUB ?? 0) == 0 ? /*(prog.MONTO_PROG ?? 0)*/ 0 : (decimal)sub.MONTO_SUB, // 05/12/2016 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                                      NumeroCuenta = cu.NRO_CTA ?? 0,
                                      Programa = prog.N_PROGRAMA,
                                      MontoPrograma = (sub.MONTO_SUB ?? 0) == 0 ? /*(prog.MONTO_PROG ?? 0)*/ 0 : (decimal)sub.MONTO_SUB, // 05/12/2016 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                                      TieneApoderado = c.TIENE_APODERADO,
                                      Modalidad = null,
                                      AltaTemprana = null,
                                      ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                      FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                      FechaBajaBeneficio = c.FEC_BAJA,
                                      convenio = prog.CONVENIO_BCO_CBA ?? "", // 17/07/2014
                                      Apoderado = new Apoderado
                                      {
                                          NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                          IdSucursal = ap.ID_SUCURSAL_BCO,
                                          IdApoderadoNullable = ap.ID_APODERADO,
                                          Apellido = ap.APELLIDO ?? " ",
                                          Nombre = ap.NOMBRE ?? " ",
                                          NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                      },
                                      IdSucursal = suc.ID_TABLA_BCO_CBA,
                                      UsuarioSistema = c.T_USUARIOS.LOGIN,
                                      FechaNotificacion = c.FEC_NOTIF,
                                      FechaInicio = null,
                                      FechaFin = null,
                                      Ficha = new Ficha
                                      {
                                          Apellido = f.APELLIDO,
                                          Barrio = f.BARRIO,
                                          Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                          IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                          IdFicha = f.ID_FICHA,
                                          Calle = f.CALLE,
                                          CantidadHijos = f.CANTIDAD_HIJOS,
                                          CodigoPostal = f.CODIGO_POSTAL,
                                          CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                          Contacto = f.CONTACTO,
                                          Cuil = f.CUIL,
                                          DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                          TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                          TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                          TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                          TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                          Dpto = f.DPTO ?? " ",
                                          EntreCalles = f.ENTRECALLES ?? " ",
                                          EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                          EstadoCivil = f.ESTADO_CIVIL,
                                          FechaNacimiento = f.FER_NAC,
                                          Mail = f.MAIL,
                                          Manzana = f.MANZANA ?? " ",
                                          Monoblock = f.MONOBLOCK ?? " ",
                                          Nombre = f.NOMBRE,
                                          Numero = f.NUMERO,
                                          NumeroDocumento = f.NUMERO_DOCUMENTO,
                                          Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                          Piso = f.PISO ?? " ",
                                          Sexo = f.SEXO,
                                          TelefonoCelular = f.TEL_CELULAR,
                                          TelefonoFijo = f.TEL_FIJO,
                                          TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                          TipoDocumento = f.TIPO_DOCUMENTO,
                                          TipoFicha = f.TIPO_FICHA,
                                          FechaSistema = c.FEC_SIST,
                                          IdUsuarioSistema = c.ID_USR_SIST,
                                          UsuarioSistema = c.T_USUARIOS.LOGIN,
                                          idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                          NombreEtapa = f.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                          NroTramite = f.NRO_TRAMITE ?? " "
                                      }
                                  });

                return ter;
            }
            #endregion

            #region            //Universitarios
            if (idPrograma == (int)Enums.Programas.Universitaria)
            {
                var uni = (from c in _mdb.T_BENEFICIARIOS
                              join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                              join fp in _mdb.T_FICHA_UNIVERSITARIO on f.ID_FICHA equals fp.ID_FICHA
                              from cu in
                                  _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                              from suc in
                                  _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                              from mon in
                                  _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                              from iva in
                                  _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                              from nac in
                                  _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                              from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                  ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                           from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                           from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == fp.ID_SUBPROGRAMA).DefaultIfEmpty() // 05/12/2016 - DI CAMPLI LEANDRO - SE AÑADE PARA OBTENER EL MONTO DE SUBPROGRAMA
                              where
                                  f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                  &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.Ppp
                                   &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.PppProf
                                   &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.Vat
                                   &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.Terciaria
                                  &&
                                  (
                                      (
                                          (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                          ||
                                          (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                      )
                                  ) &&
                           ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                           ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                           ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                           (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                           (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                           (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                           (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                           (f.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim())) &&
                           (f.ID_ETAPA == idEtapa || idEtapa == 0)

                              select
                                  new Beneficiario
                                  {
                                      IdBeneficiario = c.ID_BENEFICIARIO,
                                      IdEstado = c.ID_ESTADO ?? 0,
                                      FechaSistema = c.FEC_SIST,
                                      IdFicha = c.ID_FICHA ?? 0,
                                      IdPrograma = c.ID_PROGRAMA ?? 0,
                                      IdUsuarioSistema = c.ID_USR_SIST,
                                      IdConvenio = prog.CONVENIO_BCO_CBA,
                                      NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                      CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                      CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                      CondicionIva = iva.COD_BCO_CBA ?? "0",
                                      Nacionalidad = c.NACIONALIDAD ?? 0,
                                      Residente = c.RESIDENTE,
                                      TipoPersona = c.TIPO_PERSONA,
                                      CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                      CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                      NombreEstado = c.T_ESTADOS.N_ESTADO,
                                      Cbu = cu.CBU ?? "",
                                      ImportePagoPlan = (sub.MONTO_SUB ?? 0) == 0 ? /*(prog.MONTO_PROG ?? 0)*/ 0 : (decimal)sub.MONTO_SUB, // 05/12/2016 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                                      NumeroCuenta = cu.NRO_CTA ?? 0,
                                      Programa = prog.N_PROGRAMA,
                                      MontoPrograma = (sub.MONTO_SUB ?? 0) == 0 ? /*(prog.MONTO_PROG ?? 0)*/ 0 : (decimal)sub.MONTO_SUB, // 05/12/2016 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                                      TieneApoderado = c.TIENE_APODERADO,
                                      Modalidad = null,
                                      AltaTemprana = null,
                                      ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                      FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                      FechaBajaBeneficio = c.FEC_BAJA,
                                      convenio = prog.CONVENIO_BCO_CBA ?? "", // 17/07/2014
                                      Apoderado = new Apoderado
                                      {
                                          NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                          IdSucursal = ap.ID_SUCURSAL_BCO,
                                          IdApoderadoNullable = ap.ID_APODERADO,
                                          Apellido = ap.APELLIDO ?? " ",
                                          Nombre = ap.NOMBRE ?? " ",
                                          NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                      },
                                      IdSucursal = suc.ID_TABLA_BCO_CBA,
                                      UsuarioSistema = c.T_USUARIOS.LOGIN,
                                      FechaNotificacion = c.FEC_NOTIF,
                                      FechaInicio = null,
                                      FechaFin = null,
                                      Ficha = new Ficha
                                      {
                                          Apellido = f.APELLIDO,
                                          Barrio = f.BARRIO,
                                          Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                          IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                          IdFicha = f.ID_FICHA,
                                          Calle = f.CALLE,
                                          CantidadHijos = f.CANTIDAD_HIJOS,
                                          CodigoPostal = f.CODIGO_POSTAL,
                                          CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                          Contacto = f.CONTACTO,
                                          Cuil = f.CUIL,
                                          DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                          TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                          TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                          TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                          TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                          Dpto = f.DPTO ?? " ",
                                          EntreCalles = f.ENTRECALLES ?? " ",
                                          EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                          EstadoCivil = f.ESTADO_CIVIL,
                                          FechaNacimiento = f.FER_NAC,
                                          Mail = f.MAIL,
                                          Manzana = f.MANZANA ?? " ",
                                          Monoblock = f.MONOBLOCK ?? " ",
                                          Nombre = f.NOMBRE,
                                          Numero = f.NUMERO,
                                          NumeroDocumento = f.NUMERO_DOCUMENTO,
                                          Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                          Piso = f.PISO ?? " ",
                                          Sexo = f.SEXO,
                                          TelefonoCelular = f.TEL_CELULAR,
                                          TelefonoFijo = f.TEL_FIJO,
                                          TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                          TipoDocumento = f.TIPO_DOCUMENTO,
                                          TipoFicha = f.TIPO_FICHA,
                                          FechaSistema = c.FEC_SIST,
                                          IdUsuarioSistema = c.ID_USR_SIST,
                                          UsuarioSistema = c.T_USUARIOS.LOGIN,
                                          idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                          NombreEtapa = f.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                          NroTramite = f.NRO_TRAMITE ?? " "
                                      }
                                  });

                return uni;
            }
            #endregion
                      


            #region "Todos"
            if (idPrograma == 0)
            {

                //PPP
                var ppp = (from c in _mdb.T_BENEFICIARIOS
                           join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                           join fp in _mdb.T_FICHA_PPP on f.ID_FICHA equals fp.ID_FICHA
                           from cu in
                               _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                           from suc in
                               _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                           from mon in
                               _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                           from iva in
                               _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                           from nac in
                               _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                           from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                               ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                           from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                           from cf in _mdb.T_FICHAS_CAJA.Where(cf => cf.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                           where (idPrograma == 0 ? c.ID_PROGRAMA > 0 : c.ID_PROGRAMA == idPrograma) && f.TIPO_FICHA == 3 &&
                               f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                               && (fp.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fp.MODALIDAD == (int)Enums.Modalidad.Cti && fp.ALTA_TEMPRANA == "S"))
                               &&
                               (
                                   (
                                       (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                       ||
                                       (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                   )
                               )
                                 &&
                           ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                           ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                           ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                           (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                           (modalidad != "T" ? (fp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fp.MODALIDAD != null || string.IsNullOrEmpty(c.Modalidad))) &&
                           (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                           (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                           (altatemprana != "T" ? fp.ALTA_TEMPRANA == altatemprana : altatemprana == "T") &&//(c.AltaTemprana != null || string.IsNullOrEmpty(c.AltaTemprana))) &&
                           (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                           (f.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim())) &&
                           (f.ID_ETAPA == idEtapa || idEtapa == 0)


                           select
                               new Beneficiario
                               {
                                   IdBeneficiario = c.ID_BENEFICIARIO,
                                   IdEstado = c.ID_ESTADO ?? 0,
                                   FechaSistema = c.FEC_SIST,
                                   IdFicha = c.ID_FICHA ?? 0,
                                   IdPrograma = c.ID_PROGRAMA ?? 0,
                                   IdUsuarioSistema = c.ID_USR_SIST,
                                   IdConvenio = prog.CONVENIO_BCO_CBA,
                                   NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                   CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                   CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                   CondicionIva = iva.COD_BCO_CBA ?? "0",
                                   Nacionalidad = c.NACIONALIDAD ?? 0,
                                   Residente = c.RESIDENTE,
                                   TipoPersona = c.TIPO_PERSONA,
                                   CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                   CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                   NombreEstado = c.T_ESTADOS.N_ESTADO,
                                   Cbu = cu.CBU ?? "",
                                   ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                   NumeroCuenta = cu.NRO_CTA ?? 0,
                                   Programa = prog.N_PROGRAMA,
                                   MontoPrograma = prog.MONTO_PROG ?? 0,
                                   TieneApoderado = c.TIENE_APODERADO,
                                   Modalidad = (fp.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                   AltaTemprana = fp.ALTA_TEMPRANA == null ? "N" : "S",
                                   ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                   FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                   FechaBajaBeneficio = c.FEC_BAJA,
                                   Apoderado = new Apoderado
                                   {
                                       NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                       IdSucursal = ap.ID_SUCURSAL_BCO,
                                       IdApoderadoNullable = ap.ID_APODERADO,
                                       Apellido = ap.APELLIDO ?? " ",
                                       Nombre = ap.NOMBRE ?? " ",
                                       NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                   },
                                   IdSucursal = suc.ID_TABLA_BCO_CBA,
                                   UsuarioSistema = c.T_USUARIOS.LOGIN,
                                   FechaNotificacion = c.FEC_NOTIF,
                                   FechaInicio = fp.AT_FECHA_INICIO,
                                   FechaFin = fp.AT_FECHA_CESE,
                                   TipoPrograma = fp.TIPO_PPP ?? 0, // 13/08/2018
                                   Ficha = new Ficha
                                   {
                                       Apellido = f.APELLIDO,
                                       Barrio = f.BARRIO,
                                       Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                       IdLocalidad = f.ID_LOCALIDAD,
                                       IdFicha = f.ID_FICHA,
                                       Calle = f.CALLE,
                                       CantidadHijos = f.CANTIDAD_HIJOS,
                                       CodigoPostal = f.CODIGO_POSTAL,
                                       CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                       Contacto = c.T_FICHAS.CONTACTO,
                                       Cuil = c.T_FICHAS.CUIL,
                                       DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                       TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                       TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                       TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                       TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                       Dpto = f.DPTO ?? " ",
                                       EntreCalles = f.ENTRECALLES ?? " ",
                                       EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                       EstadoCivil = f.ESTADO_CIVIL,
                                       FechaNacimiento = f.FER_NAC,
                                       Mail = f.MAIL,
                                       Manzana = f.MANZANA ?? " ",
                                       Monoblock = f.MONOBLOCK ?? " ",
                                       Nombre = f.NOMBRE,
                                       Numero = f.NUMERO,
                                       NumeroDocumento = f.NUMERO_DOCUMENTO,
                                       Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                       Piso = f.PISO ?? " ",
                                       Sexo = f.SEXO,
                                       TelefonoCelular = f.TEL_CELULAR,
                                       TelefonoFijo = f.TEL_FIJO,
                                       TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                       TipoDocumento = f.TIPO_DOCUMENTO,
                                       TipoFicha = f.TIPO_FICHA,
                                       FechaSistema = c.FEC_SIST,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                       NombreEtapa = f.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                       NroTramite = f.NRO_TRAMITE ?? " ",
                                       idCaja = cf.ID_CAJA == null ? 0 : cf.ID_CAJA, // 13/08/2018
                                       IdEmpresa = fp.ID_EMPRESA == null ? 0 : fp.ID_EMPRESA
                                   },
                                   IdEmpresa = fp.ID_EMPRESA == null ? 0 : fp.ID_EMPRESA
                               });

                //PPPP
                var pppp = (from c in _mdb.T_BENEFICIARIOS
                            join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                            join fppp in _mdb.T_FICHA_PPP_PROF on f.ID_FICHA equals fppp.ID_FICHA
                            from cu in
                                _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                            from suc in
                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                            from mon in
                                _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                            from iva in
                                _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                            from nac in
                                _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                            from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                            from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                            where
                                f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                && (fppp.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fppp.MODALIDAD == (int)Enums.Modalidad.Cti && fppp.ALTA_TEMPRANA == "S"))
                                &&
                                (
                                    (
                                        (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                        ||
                                        (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                    )
                                )

                           &&
                           ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                           ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                           ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                           (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                           (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                           (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                           (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                           (f.ID_ETAPA == idEtapa || idEtapa == 0)

                            select
                                new Beneficiario
                                {
                                    IdBeneficiario = c.ID_BENEFICIARIO,
                                    IdEstado = c.ID_ESTADO ?? 0,
                                    FechaSistema = c.FEC_SIST,
                                    IdFicha = c.ID_FICHA ?? 0,
                                    IdPrograma = c.ID_PROGRAMA ?? 0,
                                    IdUsuarioSistema = c.ID_USR_SIST,
                                    IdConvenio = prog.CONVENIO_BCO_CBA,
                                    NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                    CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                    CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                    CondicionIva = iva.COD_BCO_CBA ?? "0",
                                    Nacionalidad = c.NACIONALIDAD ?? 0,
                                    Residente = c.RESIDENTE,
                                    TipoPersona = c.TIPO_PERSONA,
                                    CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                    CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                    NombreEstado = c.T_ESTADOS.N_ESTADO,
                                    Cbu = cu.CBU ?? "",
                                    ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                    NumeroCuenta = cu.NRO_CTA,
                                    Programa = prog.N_PROGRAMA,
                                    MontoPrograma = prog.MONTO_PROG ?? 0,
                                    TieneApoderado = c.TIENE_APODERADO,
                                    Modalidad = (fppp.MODALIDAD ?? 0) == 1 ? "E" : "C",
                                    AltaTemprana = fppp.ALTA_TEMPRANA == null ? "N" : "S",
                                    ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                    FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                    FechaBajaBeneficio = c.FEC_BAJA,
                                    Apoderado =
                                    new Apoderado
                                    {
                                        NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                        IdSucursal = ap.ID_SUCURSAL_BCO,
                                        IdApoderadoNullable = ap.ID_APODERADO,
                                        Apellido = ap.APELLIDO ?? " ",
                                        Nombre = ap.NOMBRE ?? " ",
                                        NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                    },
                                    IdSucursal = suc.ID_TABLA_BCO_CBA,
                                    UsuarioSistema = c.T_USUARIOS.LOGIN,
                                    FechaNotificacion = c.FEC_NOTIF,
                                    FechaInicio = fppp.AT_FECHA_INICIO,
                                    FechaFin = fppp.AT_FECHA_CESE,
                                    TipoPrograma = 0, // 13/08/2018,
                                    Ficha =
                                        new Ficha
                                        {
                                            Apellido = f.APELLIDO,
                                            Barrio = f.BARRIO,
                                            Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                            IdLocalidad = f.ID_LOCALIDAD,
                                            IdFicha = f.ID_FICHA,
                                            Calle = f.CALLE,
                                            CantidadHijos = f.CANTIDAD_HIJOS,
                                            CodigoPostal = f.CODIGO_POSTAL,
                                            CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                            Contacto = c.T_FICHAS.CONTACTO,
                                            Cuil = c.T_FICHAS.CUIL,
                                            DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                            TieneDeficienciaMental =
                                                f.TIENE_DEF_MENTAL == "S" ? true : false,
                                            TieneDeficienciaMotora =
                                                f.TIENE_DEF_MOTORA == "S" ? true : false,
                                            TieneDeficienciaPsicologia =
                                                f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                            TieneDeficienciaSensorial =
                                                f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                            Dpto = f.DPTO ?? " ",
                                            EntreCalles = f.ENTRECALLES ?? " ",
                                            EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                            EstadoCivil = f.ESTADO_CIVIL,
                                            FechaNacimiento = f.FER_NAC,
                                            Mail = f.MAIL,
                                            Manzana = f.MANZANA ?? " ",
                                            Monoblock = f.MONOBLOCK ?? " ",
                                            Nombre = f.NOMBRE,
                                            Numero = f.NUMERO,
                                            NumeroDocumento = f.NUMERO_DOCUMENTO,
                                            Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                            Piso = f.PISO ?? " ",
                                            Sexo = f.SEXO,
                                            TelefonoCelular = f.TEL_CELULAR,
                                            TelefonoFijo = f.TEL_FIJO,
                                            TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                            TipoDocumento = f.TIPO_DOCUMENTO,
                                            TipoFicha = f.TIPO_FICHA,
                                            FechaSistema = c.FEC_SIST,
                                            IdUsuarioSistema = c.ID_USR_SIST,
                                            UsuarioSistema = c.T_USUARIOS.LOGIN,
                                            idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                            NombreEtapa = f.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                            NroTramite = f.NRO_TRAMITE ?? " ",
                                            idCaja = 0, // 13/08/2018
                                            IdEmpresa = 0
                                        },
                                   IdEmpresa = 0
                                });

                //Vat
                var vat = (from c in _mdb.T_BENEFICIARIOS
                           join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                           join fvat in _mdb.T_FICHA_VAT on f.ID_FICHA equals fvat.ID_FICHA
                           from cu in
                               _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                           from suc in
                               _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                           from mon in
                               _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                           from iva in
                               _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                           from nac in
                               _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                           from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                               ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                           from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                           where
                               f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                               && (fvat.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fvat.MODALIDAD == (int)Enums.Modalidad.Cti && fvat.ALTA_TEMPRANA == "S"))
                               &&
                               (
                                   (
                                       (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                       ||
                                       (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                   )
                               ) &&
                           ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                           ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                           ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                           (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                           (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                           (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                           (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                           (f.ID_ETAPA == idEtapa || idEtapa == 0)

                           select
                               new Beneficiario
                               {
                                   IdBeneficiario = c.ID_BENEFICIARIO,
                                   IdEstado = c.ID_ESTADO ?? 0,
                                   FechaSistema = c.FEC_SIST,
                                   IdFicha = c.ID_FICHA ?? 0,
                                   IdPrograma = c.ID_PROGRAMA ?? 0,
                                   IdUsuarioSistema = c.ID_USR_SIST,
                                   IdConvenio = prog.CONVENIO_BCO_CBA,
                                   NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                   CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                   CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                   CondicionIva = iva.COD_BCO_CBA ?? "0",
                                   Nacionalidad = c.NACIONALIDAD ?? 0,
                                   Residente = c.RESIDENTE,
                                   TipoPersona = c.TIPO_PERSONA,
                                   CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                   CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                   NombreEstado = c.T_ESTADOS.N_ESTADO,
                                   Cbu = cu.CBU ?? "",
                                   ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                   NumeroCuenta = cu.NRO_CTA ?? 0,
                                   Programa = prog.N_PROGRAMA,
                                   MontoPrograma = prog.MONTO_PROG ?? 0,
                                   TieneApoderado = c.TIENE_APODERADO,
                                   Modalidad = (fvat.MODALIDAD ?? 0) == 1 ? "E" : "C",
                                   AltaTemprana = fvat.ALTA_TEMPRANA == null ? "N" : "S",
                                   ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                   FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                   FechaBajaBeneficio = c.FEC_BAJA,
                                   Apoderado = new Apoderado { NumeroCuentaBco = ap.NRO_CUENTA_BCO, IdSucursal = ap.ID_SUCURSAL_BCO, IdApoderadoNullable = ap.ID_APODERADO, Apellido = ap.APELLIDO ?? " ", Nombre = ap.NOMBRE ?? " ", NumeroDocumento = ap.NRO_DOCUMENTO ?? " " },
                                   IdSucursal = suc.ID_TABLA_BCO_CBA,
                                   UsuarioSistema = c.T_USUARIOS.LOGIN,
                                   FechaNotificacion = c.FEC_NOTIF,
                                   FechaInicio = fvat.AT_FECHA_INICIO,
                                   FechaFin = fvat.AT_FECHA_CESE,
                                   TipoPrograma = 0, // 13/08/2018,
                                   Ficha =
                                       new Ficha
                                       {
                                           Apellido = f.APELLIDO,
                                           Barrio = f.BARRIO,
                                           Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                           IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                           IdFicha = f.ID_FICHA,
                                           Calle = f.CALLE,
                                           CantidadHijos = f.CANTIDAD_HIJOS,
                                           CodigoPostal = f.CODIGO_POSTAL,
                                           CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                           Contacto = c.T_FICHAS.CONTACTO,
                                           Cuil = c.T_FICHAS.CUIL,
                                           DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                           TieneDeficienciaMental =
                                               f.TIENE_DEF_MENTAL == "S" ? true : false,
                                           TieneDeficienciaMotora =
                                               f.TIENE_DEF_MOTORA == "S" ? true : false,
                                           TieneDeficienciaPsicologia =
                                               f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                           TieneDeficienciaSensorial =
                                               f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                           Dpto = f.DPTO ?? " ",
                                           EntreCalles = f.ENTRECALLES ?? " ",
                                           EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                           EstadoCivil = f.ESTADO_CIVIL,
                                           FechaNacimiento = f.FER_NAC,
                                           Mail = f.MAIL,
                                           Manzana = f.MANZANA ?? " ",
                                           Monoblock = f.MONOBLOCK ?? " ",
                                           Nombre = f.NOMBRE,
                                           Numero = f.NUMERO,
                                           NumeroDocumento = f.NUMERO_DOCUMENTO,
                                           Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                           Piso = f.PISO ?? " ",
                                           Sexo = f.SEXO,
                                           TelefonoCelular = f.TEL_CELULAR,
                                           TelefonoFijo = f.TEL_FIJO,
                                           TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                           TipoDocumento = f.TIPO_DOCUMENTO,
                                           TipoFicha = f.TIPO_FICHA,
                                           FechaSistema = c.FEC_SIST,
                                           IdUsuarioSistema = c.ID_USR_SIST,
                                           UsuarioSistema = c.T_USUARIOS.LOGIN,
                                           idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                           NombreEtapa = f.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                           NroTramite = f.NRO_TRAMITE ?? " ",
                                           idCaja = 0, // 13/08/2018
                                           IdEmpresa = 0
                                       },
                                   IdEmpresa = 0
                               });

                //Terciarios e Universitarios
                var teruni = (from c in _mdb.T_BENEFICIARIOS
                              join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                              from cu in
                                  _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                              from suc in
                                  _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                              from mon in
                                  _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                              from iva in
                                  _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                              from nac in
                                  _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                              from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                  ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                              from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                              where
                                  f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                  &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.Ppp
                                   &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.PppProf
                                   &&
                                  c.ID_PROGRAMA != (int)Enums.TipoFicha.Vat
                                  &&
                                  (
                                      (
                                          (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                          ||
                                          (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                      )
                                  ) &&
                           ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                           ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                           ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                           (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                           (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                           (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                           (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                           (f.ID_ETAPA == idEtapa || idEtapa == 0)

                              select
                                  new Beneficiario
                                  {
                                      IdBeneficiario = c.ID_BENEFICIARIO,
                                      IdEstado = c.ID_ESTADO ?? 0,
                                      FechaSistema = c.FEC_SIST,
                                      IdFicha = c.ID_FICHA ?? 0,
                                      IdPrograma = c.ID_PROGRAMA ?? 0,
                                      IdUsuarioSistema = c.ID_USR_SIST,
                                      IdConvenio = prog.CONVENIO_BCO_CBA,
                                      NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                      CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                      CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                      CondicionIva = iva.COD_BCO_CBA ?? "0",
                                      Nacionalidad = c.NACIONALIDAD ?? 0,
                                      Residente = c.RESIDENTE,
                                      TipoPersona = c.TIPO_PERSONA,
                                      CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                      CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                      NombreEstado = c.T_ESTADOS.N_ESTADO,
                                      Cbu = cu.CBU ?? "",
                                      ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                      NumeroCuenta = cu.NRO_CTA ?? 0,
                                      Programa = prog.N_PROGRAMA,
                                      MontoPrograma = prog.MONTO_PROG ?? 0,
                                      TieneApoderado = c.TIENE_APODERADO,
                                      Modalidad = null,
                                      AltaTemprana = null,
                                      ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                      FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                      FechaBajaBeneficio = c.FEC_BAJA,
                                      Apoderado = new Apoderado
                                      {
                                          NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                          IdSucursal = ap.ID_SUCURSAL_BCO,
                                          IdApoderadoNullable = ap.ID_APODERADO,
                                          Apellido = ap.APELLIDO ?? " ",
                                          Nombre = ap.NOMBRE ?? " ",
                                          NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                      },
                                      IdSucursal = suc.ID_TABLA_BCO_CBA,
                                      UsuarioSistema = c.T_USUARIOS.LOGIN,
                                      FechaNotificacion = c.FEC_NOTIF,
                                      FechaInicio = null,
                                      FechaFin = null,
                                      TipoPrograma = 0, // 13/08/2018,
                                      Ficha = new Ficha
                                      {
                                          Apellido = f.APELLIDO,
                                          Barrio = f.BARRIO,
                                          Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                          IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                          IdFicha = f.ID_FICHA,
                                          Calle = f.CALLE,
                                          CantidadHijos = f.CANTIDAD_HIJOS,
                                          CodigoPostal = f.CODIGO_POSTAL,
                                          CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                          Contacto = f.CONTACTO,
                                          Cuil = f.CUIL,
                                          DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                          TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                          TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                          TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                          TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                          Dpto = f.DPTO ?? " ",
                                          EntreCalles = f.ENTRECALLES ?? " ",
                                          EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                          EstadoCivil = f.ESTADO_CIVIL,
                                          FechaNacimiento = f.FER_NAC,
                                          Mail = f.MAIL,
                                          Manzana = f.MANZANA ?? " ",
                                          Monoblock = f.MONOBLOCK ?? " ",
                                          Nombre = f.NOMBRE,
                                          Numero = f.NUMERO,
                                          NumeroDocumento = f.NUMERO_DOCUMENTO,
                                          Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                          Piso = f.PISO ?? " ",
                                          Sexo = f.SEXO,
                                          TelefonoCelular = f.TEL_CELULAR,
                                          TelefonoFijo = f.TEL_FIJO,
                                          TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                          TipoDocumento = f.TIPO_DOCUMENTO,
                                          TipoFicha = f.TIPO_FICHA,
                                          FechaSistema = c.FEC_SIST,
                                          IdUsuarioSistema = c.ID_USR_SIST,
                                          UsuarioSistema = c.T_USUARIOS.LOGIN,
                                          idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                          NombreEtapa = f.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                          NroTramite = f.NRO_TRAMITE ?? " ",
                                          idCaja = 0, // 13/08/2018
                                          IdEmpresa = 0
                                      },
                                   IdEmpresa = 0
                                  });

                return ppp.Union(teruni.Union(vat.Union(pppp)));

            #endregion

            }



            return null;
            //return ppp.Union(teruni.Union(vat.Union(pppp)));
        }



        private IQueryable<IBeneficiario> QBeneficiarioConCuentasPart3(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altatemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string nrotramite)
        {
            #region "Reconversion"

            if (idPrograma == (int)Enums.Programas.ReconversionProductiva)
            {
                var reco =


                (from c in _mdb.T_BENEFICIARIOS
                 join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                 join rcp in _mdb.T_FICHA_REC_PROD on f.ID_FICHA equals rcp.ID_FICHA // 03/12/2013 - DI CAMPLI LEANDRO - SE AÑADE PARA OBTENER EL MONTO DE SUBPROGRAMA
                 from cu in
                     _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                 from suc in
                     _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                 from mon in
                     _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                 from iva in
                     _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                 from nac in
                     _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                 from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                     ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                 from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()

                 from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == rcp.ID_SUBPROGRAMA).DefaultIfEmpty() // 03/12/2013 - DI CAMPLI LEANDRO - SE AÑADE PARA OBTENER EL MONTO DE SUBPROGRAMA
                 from conv in _mdb.T_CONVENIOS.Where(conv => conv.ID_CONVENIO == sub.ID_CONVENIO).DefaultIfEmpty() // 17/07/2014

                 where
                   f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                   && f.TIPO_FICHA == 6
                   &&
                   c.ID_PROGRAMA != (int)Enums.TipoFicha.Ppp
                    &&
                   c.ID_PROGRAMA != (int)Enums.TipoFicha.PppProf
                    &&
                   c.ID_PROGRAMA != (int)Enums.TipoFicha.Vat
                   &&
                   (
                       (
                           (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                           ||
                           (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                       )
                   ) &&
            ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

            ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

            ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

            (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
            (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
            (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
            (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
            (f.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim())) &&
            (f.ID_ETAPA == idEtapa || idEtapa == 0)

                 select
                     new Beneficiario
                     {
                         IdBeneficiario = c.ID_BENEFICIARIO,
                         IdEstado = c.ID_ESTADO ?? 0,
                         FechaSistema = c.FEC_SIST,
                         IdFicha = c.ID_FICHA ?? 0,
                         IdPrograma = c.ID_PROGRAMA ?? 0,
                         IdUsuarioSistema = c.ID_USR_SIST,
                         IdConvenio = prog.CONVENIO_BCO_CBA,
                         NumeroConvenio = prog.CONVENIO_BCO_CBA,
                         CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                         CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                         CondicionIva = iva.COD_BCO_CBA ?? "0",
                         Nacionalidad = c.NACIONALIDAD ?? 0,
                         Residente = c.RESIDENTE,
                         TipoPersona = c.TIPO_PERSONA,
                         CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                         CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                         NombreEstado = c.T_ESTADOS.N_ESTADO,
                         Cbu = cu.CBU ?? "",
                         ImportePagoPlan = (sub.MONTO_SUB ?? 0) == 0 ? (prog.MONTO_PROG ?? 0) : (decimal)sub.MONTO_SUB, // 03/12/2013 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                         NumeroCuenta = cu.NRO_CTA ?? 0,
                         Programa = prog.N_PROGRAMA,
                         MontoPrograma = (sub.MONTO_SUB ?? 0) == 0 ? (prog.MONTO_PROG ?? 0) : (decimal)sub.MONTO_SUB, // 03/12/2013 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE SUBPROGRAMA
                         TieneApoderado = c.TIENE_APODERADO,
                         Modalidad = null,
                         AltaTemprana = null,
                         ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                         FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                         FechaBajaBeneficio = c.FEC_BAJA,
                         convenio = sub.ID_CONVENIO == null || sub.ID_CONVENIO == 0 ? prog.CONVENIO_BCO_CBA ?? "" : conv.N_CONVENIO, // 17/07/2014
                         idSubprograma = sub.ID_SUBPROGRAMA == null ? 0 : sub.ID_SUBPROGRAMA,
                         Apoderado = new Apoderado
                         {
                             NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                             IdSucursal = ap.ID_SUCURSAL_BCO,
                             IdApoderadoNullable = ap.ID_APODERADO,
                             Apellido = ap.APELLIDO ?? " ",
                             Nombre = ap.NOMBRE ?? " ",
                             NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                         },
                         IdSucursal = suc.ID_TABLA_BCO_CBA,
                         UsuarioSistema = c.T_USUARIOS.LOGIN,
                         FechaNotificacion = c.FEC_NOTIF,
                         FechaInicio = null,
                         FechaFin = null,
                         Ficha = new Ficha
                         {
                             Apellido = f.APELLIDO,
                             Barrio = f.BARRIO,
                             Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                             IdLocalidad = f.ID_LOCALIDAD ?? 0,
                             IdFicha = f.ID_FICHA,
                             Calle = f.CALLE,
                             CantidadHijos = f.CANTIDAD_HIJOS,
                             CodigoPostal = f.CODIGO_POSTAL,
                             CodigoSeguridad = f.CODIGO_SEGURIDAD,
                             Contacto = f.CONTACTO,
                             Cuil = f.CUIL,
                             DeficienciaOtra = f.DEFICIENCIA_OTRA,
                             TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                             TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                             TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                             TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                             Dpto = f.DPTO ?? " ",
                             EntreCalles = f.ENTRECALLES ?? " ",
                             EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                             EstadoCivil = f.ESTADO_CIVIL,
                             FechaNacimiento = f.FER_NAC,
                             Mail = f.MAIL,
                             Manzana = f.MANZANA ?? " ",
                             Monoblock = f.MONOBLOCK ?? " ",
                             Nombre = f.NOMBRE,
                             Numero = f.NUMERO,
                             NumeroDocumento = f.NUMERO_DOCUMENTO,
                             Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                             Piso = f.PISO ?? " ",
                             Sexo = f.SEXO,
                             TelefonoCelular = f.TEL_CELULAR,
                             TelefonoFijo = f.TEL_FIJO,
                             TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                             TipoDocumento = f.TIPO_DOCUMENTO,
                             TipoFicha = f.TIPO_FICHA,
                             FechaSistema = c.FEC_SIST,
                             IdUsuarioSistema = c.ID_USR_SIST,
                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                             idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                             NombreEtapa = f.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                             NroTramite = f.NRO_TRAMITE ?? " "
                         }
                     });


                return reco;
            }
            #endregion

             #region "Efectores Sociales"

            if (idPrograma == (int)Enums.Programas.EfectoresSociales)
            {
                var eft =
                    (from c in _mdb.T_BENEFICIARIOS
                     join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                     join feft in _mdb.T_FICHA_EFEC_SOC on f.ID_FICHA equals feft.ID_FICHA
                     from cu in
                         _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                     from suc in
                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                     from mon in
                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                     from iva in
                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                     from nac in
                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                     from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                         ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                     from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                     from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == feft.ID_SUBPROGRAMA).DefaultIfEmpty() // 03/12/2013 - DI CAMPLI LEANDRO - SE AÑADE PARA OBTENER EL MONTO DE SUBPROGRAMA
                     from conv in _mdb.T_CONVENIOS.Where(conv => conv.ID_CONVENIO == sub.ID_CONVENIO).DefaultIfEmpty() // 17/07/2014

                     where (idPrograma == 0 ? c.ID_PROGRAMA > 0 : c.ID_PROGRAMA == idPrograma) && f.TIPO_FICHA == 7 &&
                         f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                         && (feft.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (feft.MODALIDAD == (int)Enums.Modalidad.Cti && feft.ALTA_TEMPRANA == "S"))
                         &&
                         (
                             (
                                 (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                 ||
                                 (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                             )
                         )
                           &&
                     ((f.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                     ((f.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                     ((f.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&

                     (c.ID_PROGRAMA == idPrograma || idPrograma == 0) && (c.ID_ESTADO == idEstado || idEstado == 0) &&
                     (modalidad != "T" ? (feft.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fp.MODALIDAD != null || string.IsNullOrEmpty(c.Modalidad))) &&
                     (conApoderados != "T" ? c.TIENE_APODERADO == conApoderados : conApoderados == "T") &&//(c.TIENE_APODERADO != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                     (discapacitado != "T" ? f.ES_DISCAPACITADO == discapacitado : discapacitado == "T") &&
                     (altatemprana != "T" ? feft.ALTA_TEMPRANA == altatemprana : altatemprana == "T") &&//(c.AltaTemprana != null || string.IsNullOrEmpty(c.AltaTemprana))) &&
                     (f.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                     (f.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim())) &&
                     (f.ID_ETAPA == idEtapa || idEtapa == 0)


                     select
                         new Beneficiario
                         {
                             IdBeneficiario = c.ID_BENEFICIARIO,
                             IdEstado = c.ID_ESTADO ?? 0,
                             FechaSistema = c.FEC_SIST,
                             IdFicha = c.ID_FICHA ?? 0,
                             IdPrograma = c.ID_PROGRAMA ?? 0,
                             IdUsuarioSistema = c.ID_USR_SIST,
                             IdConvenio = prog.CONVENIO_BCO_CBA,
                             NumeroConvenio = prog.CONVENIO_BCO_CBA,
                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                             Nacionalidad = c.NACIONALIDAD ?? 0,
                             Residente = c.RESIDENTE,
                             TipoPersona = c.TIPO_PERSONA,
                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                             CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                             Cbu = cu.CBU ?? "",
                             ImportePagoPlan = (feft.MONTO_EFE ?? 0) == 0 ? ((sub.MONTO_SUB ?? 0) == 0 ? (prog.MONTO_PROG ?? 0) : sub.MONTO_SUB ?? 0) : (decimal)feft.MONTO_EFE, // 25/07/2014 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE EFECTORES
                             NumeroCuenta = cu.NRO_CTA ?? 0,
                             Programa = prog.N_PROGRAMA,
                             MontoPrograma = (feft.MONTO_EFE ?? 0) == 0 ? ((sub.MONTO_SUB ?? 0) == 0 ? (prog.MONTO_PROG ?? 0) : sub.MONTO_SUB ?? 0) : (decimal)feft.MONTO_EFE, // 25/07/2014 - DI CAMPLI LEANDRO - SE MODIFICA PARA OBTENER EL MONTO DE EFECTORES
                             TieneApoderado = c.TIENE_APODERADO,
                             Modalidad = (feft.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                             AltaTemprana = feft.ALTA_TEMPRANA == null ? "N" : "S",
                             ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                             FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                             FechaBajaBeneficio = c.FEC_BAJA,
                             //convenio = prog.CONVENIO_BCO_CBA ?? "", // 17/07/2014
                             convenio = sub.ID_CONVENIO == null || sub.ID_CONVENIO == 0 ? prog.CONVENIO_BCO_CBA ?? "" : conv.N_CONVENIO, // 17/07/2014
                             idSubprograma = sub.ID_SUBPROGRAMA == null ? 0 : sub.ID_SUBPROGRAMA,
                             Apoderado = new Apoderado
                             {
                                 NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                 IdSucursal = ap.ID_SUCURSAL_BCO,
                                 IdApoderadoNullable = ap.ID_APODERADO,
                                 Apellido = ap.APELLIDO ?? " ",
                                 Nombre = ap.NOMBRE ?? " ",
                                 NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                             },
                             IdSucursal = suc.ID_TABLA_BCO_CBA,
                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                             FechaNotificacion = c.FEC_NOTIF,
                             FechaInicio = feft.AT_FECHA_INICIO,
                             FechaFin = feft.AT_FECHA_CESE,
                             Ficha = new Ficha
                             {
                                 Apellido = f.APELLIDO,
                                 Barrio = f.BARRIO,
                                 Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                 IdLocalidad = f.ID_LOCALIDAD,
                                 IdFicha = f.ID_FICHA,
                                 Calle = f.CALLE,
                                 CantidadHijos = f.CANTIDAD_HIJOS,
                                 CodigoPostal = f.CODIGO_POSTAL,
                                 CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                 Contacto = c.T_FICHAS.CONTACTO,
                                 Cuil = c.T_FICHAS.CUIL,
                                 DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                 TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                 TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                 TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                 TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                 Dpto = f.DPTO ?? " ",
                                 EntreCalles = f.ENTRECALLES ?? " ",
                                 EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                 EstadoCivil = f.ESTADO_CIVIL,
                                 FechaNacimiento = f.FER_NAC,
                                 Mail = f.MAIL,
                                 Manzana = f.MANZANA ?? " ",
                                 Monoblock = f.MONOBLOCK ?? " ",
                                 Nombre = f.NOMBRE,
                                 Numero = f.NUMERO,
                                 NumeroDocumento = f.NUMERO_DOCUMENTO,
                                 Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                 Piso = f.PISO ?? " ",
                                 Sexo = f.SEXO,
                                 TelefonoCelular = f.TEL_CELULAR,
                                 TelefonoFijo = f.TEL_FIJO,
                                 TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                 TipoDocumento = f.TIPO_DOCUMENTO,
                                 TipoFicha = f.TIPO_FICHA,
                                 FechaSistema = c.FEC_SIST,
                                 IdUsuarioSistema = c.ID_USR_SIST,
                                 UsuarioSistema = c.T_USUARIOS.LOGIN,
                                 idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                 NombreEtapa = f.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                 NroTramite = f.NRO_TRAMITE ?? " "
                             }
                         });



                return eft;
            }


            #endregion


            return null;
        }



        private IQueryable<IBeneficiario> QBeneficiarioConCuentas()
        {
            //PPP
            var ppp = (from c in _mdb.T_BENEFICIARIOS
                       join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                       join fp in _mdb.T_FICHA_PPP on f.ID_FICHA equals fp.ID_FICHA
                       from cu in
                           _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                       from suc in
                           _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                       from mon in
                           _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                       from iva in
                           _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                       from nac in
                           _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                       from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                           ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                       from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                       where
                           f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                           && (fp.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fp.MODALIDAD == (int)Enums.Modalidad.Cti && fp.ALTA_TEMPRANA == "S"))
                           &&
                           (
                               (
                                   (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                   ||
                                   (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                               )
                           )
                       select
                           new Beneficiario
                               {
                                   IdBeneficiario = c.ID_BENEFICIARIO,
                                   IdEstado = c.ID_ESTADO ?? 0,
                                   FechaSistema = c.FEC_SIST,
                                   IdFicha = c.ID_FICHA ?? 0,
                                   IdPrograma = c.ID_PROGRAMA ?? 0,
                                   IdUsuarioSistema = c.ID_USR_SIST,
                                   IdConvenio = prog.CONVENIO_BCO_CBA,
                                   NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                   CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                   CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                   CondicionIva = iva.COD_BCO_CBA ?? "0",
                                   Nacionalidad = c.NACIONALIDAD ?? 0,
                                   Residente = c.RESIDENTE,
                                   TipoPersona = c.TIPO_PERSONA,
                                   CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                   CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                   NombreEstado = c.T_ESTADOS.N_ESTADO,
                                   Cbu = cu.CBU ?? "",
                                   ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                   NumeroCuenta = cu.NRO_CTA ?? 0,
                                   Programa = prog.N_PROGRAMA,
                                   MontoPrograma = prog.MONTO_PROG ?? 0,
                                   TieneApoderado = c.TIENE_APODERADO,
                                   Modalidad = (fp.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                   AltaTemprana = fp.ALTA_TEMPRANA == null ? "N" : "S",
                                   ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                   FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                   FechaBajaBeneficio = c.FEC_BAJA,
                                   Apoderado = new Apoderado
                                                   {
                                                       NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO,
                                                       IdApoderadoNullable = ap.ID_APODERADO,
                                                       Apellido = ap.APELLIDO ?? " ",
                                                       Nombre = ap.NOMBRE ?? " ",
                                                       NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                                   },
                                   IdSucursal = suc.ID_TABLA_BCO_CBA,
                                   UsuarioSistema = c.T_USUARIOS.LOGIN,
                                   FechaNotificacion = c.FEC_NOTIF,
                                   FechaInicio = fp.AT_FECHA_INICIO,
                                   FechaFin = fp.AT_FECHA_CESE,
                                   Ficha = new Ficha
                                           {
                                               Apellido = f.APELLIDO,
                                               Barrio = f.BARRIO,
                                               Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = f.ID_LOCALIDAD,
                                               IdFicha = f.ID_FICHA,
                                               Calle = f.CALLE,
                                               CantidadHijos = f.CANTIDAD_HIJOS,
                                               CodigoPostal = f.CODIGO_POSTAL,
                                               CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = f.DPTO ?? " ",
                                               EntreCalles = f.ENTRECALLES ?? " ",
                                               EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = f.ESTADO_CIVIL,
                                               FechaNacimiento = f.FER_NAC,
                                               Mail = f.MAIL,
                                               Manzana = f.MANZANA ?? " ",
                                               Monoblock = f.MONOBLOCK ?? " ",
                                               Nombre = f.NOMBRE,
                                               Numero = f.NUMERO,
                                               NumeroDocumento = f.NUMERO_DOCUMENTO,
                                               Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                               Piso = f.PISO ?? " ",
                                               Sexo = f.SEXO,
                                               TelefonoCelular = f.TEL_CELULAR,
                                               TelefonoFijo = f.TEL_FIJO,
                                               TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = f.TIPO_DOCUMENTO,
                                               TipoFicha = f.TIPO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                               NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                           }
                               });

            //PPPP
            var pppp = (from c in _mdb.T_BENEFICIARIOS
                        join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                        join fppp in _mdb.T_FICHA_PPP_PROF on f.ID_FICHA equals fppp.ID_FICHA
                        from cu in
                            _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                        from suc in
                            _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                        from mon in
                            _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                        from iva in
                            _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                        from nac in
                            _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                        from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                            ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                        from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                        where
                            f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                            && (fppp.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fppp.MODALIDAD == (int)Enums.Modalidad.Cti && fppp.ALTA_TEMPRANA == "S"))
                            &&
                            (
                                (
                                    (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                    ||
                                    (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                )
                            )
                        select
                            new Beneficiario
                            {
                                IdBeneficiario = c.ID_BENEFICIARIO,
                                IdEstado = c.ID_ESTADO ?? 0,
                                FechaSistema = c.FEC_SIST,
                                IdFicha = c.ID_FICHA ?? 0,
                                IdPrograma = c.ID_PROGRAMA ?? 0,
                                IdUsuarioSistema = c.ID_USR_SIST,
                                IdConvenio = prog.CONVENIO_BCO_CBA,
                                NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                CondicionIva = iva.COD_BCO_CBA ?? "0",
                                Nacionalidad = c.NACIONALIDAD ?? 0,
                                Residente = c.RESIDENTE,
                                TipoPersona = c.TIPO_PERSONA,
                                CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                NombreEstado = c.T_ESTADOS.N_ESTADO,
                                Cbu = cu.CBU ?? "",
                                ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                NumeroCuenta = cu.NRO_CTA,
                                Programa = prog.N_PROGRAMA,
                                MontoPrograma = prog.MONTO_PROG ?? 0,
                                TieneApoderado = c.TIENE_APODERADO,
                                Modalidad = (fppp.MODALIDAD ?? 0) == 1 ? "E" : "C",
                                AltaTemprana = fppp.ALTA_TEMPRANA == null ? "N" : "S",
                                ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                FechaBajaBeneficio = c.FEC_BAJA,
                                Apoderado =
                                new Apoderado
                                    {
                                        NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                        IdSucursal = ap.ID_SUCURSAL_BCO,
                                        IdApoderadoNullable = ap.ID_APODERADO,
                                        Apellido = ap.APELLIDO ?? " ",
                                        Nombre = ap.NOMBRE ?? " ",
                                        NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                    },
                                IdSucursal = suc.ID_TABLA_BCO_CBA,
                                UsuarioSistema = c.T_USUARIOS.LOGIN,
                                FechaNotificacion = c.FEC_NOTIF,
                                FechaInicio = fppp.AT_FECHA_INICIO,
                                FechaFin = fppp.AT_FECHA_CESE,
                                Ficha =
                                    new Ficha
                                    {
                                        Apellido = f.APELLIDO,
                                        Barrio = f.BARRIO,
                                        Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                        IdLocalidad = f.ID_LOCALIDAD,
                                        IdFicha = f.ID_FICHA,
                                        Calle = f.CALLE,
                                        CantidadHijos = f.CANTIDAD_HIJOS,
                                        CodigoPostal = f.CODIGO_POSTAL,
                                        CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                        Contacto = c.T_FICHAS.CONTACTO,
                                        Cuil = c.T_FICHAS.CUIL,
                                        DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                        TieneDeficienciaMental =
                                            f.TIENE_DEF_MENTAL == "S" ? true : false,
                                        TieneDeficienciaMotora =
                                            f.TIENE_DEF_MOTORA == "S" ? true : false,
                                        TieneDeficienciaPsicologia =
                                            f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                        TieneDeficienciaSensorial =
                                            f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                        Dpto = f.DPTO ?? " ",
                                        EntreCalles = f.ENTRECALLES ?? " ",
                                        EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                        EstadoCivil = f.ESTADO_CIVIL,
                                        FechaNacimiento = f.FER_NAC,
                                        Mail = f.MAIL,
                                        Manzana = f.MANZANA ?? " ",
                                        Monoblock = f.MONOBLOCK ?? " ",
                                        Nombre = f.NOMBRE,
                                        Numero = f.NUMERO,
                                        NumeroDocumento = f.NUMERO_DOCUMENTO,
                                        Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                        Piso = f.PISO ?? " ",
                                        Sexo = f.SEXO,
                                        TelefonoCelular = f.TEL_CELULAR,
                                        TelefonoFijo = f.TEL_FIJO,
                                        TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                        TipoDocumento = f.TIPO_DOCUMENTO,
                                        TipoFicha = f.TIPO_FICHA,
                                        FechaSistema = c.FEC_SIST,
                                        IdUsuarioSistema = c.ID_USR_SIST,
                                        UsuarioSistema = c.T_USUARIOS.LOGIN,
                                        idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                        NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                    }
                            });

            //Vat
            var vat = (from c in _mdb.T_BENEFICIARIOS
                       join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                       join fvat in _mdb.T_FICHA_VAT on f.ID_FICHA equals fvat.ID_FICHA
                       from cu in
                           _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                       from suc in
                           _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                       from mon in
                           _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                       from iva in
                           _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                       from nac in
                           _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                       from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                           ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                       from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                       where
                           f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                           && (fvat.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (fvat.MODALIDAD == (int)Enums.Modalidad.Cti && fvat.ALTA_TEMPRANA == "S"))
                           &&
                           (
                               (
                                   (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                   ||
                                   (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                               )
                           )
                       select
                           new Beneficiario
                           {
                               IdBeneficiario = c.ID_BENEFICIARIO,
                               IdEstado = c.ID_ESTADO ?? 0,
                               FechaSistema = c.FEC_SIST,
                               IdFicha = c.ID_FICHA ?? 0,
                               IdPrograma = c.ID_PROGRAMA ?? 0,
                               IdUsuarioSistema = c.ID_USR_SIST,
                               IdConvenio = prog.CONVENIO_BCO_CBA,
                               NumeroConvenio = prog.CONVENIO_BCO_CBA,
                               CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                               CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                               CondicionIva = iva.COD_BCO_CBA ?? "0",
                               Nacionalidad = c.NACIONALIDAD ?? 0,
                               Residente = c.RESIDENTE,
                               TipoPersona = c.TIPO_PERSONA,
                               CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                               CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                               NombreEstado = c.T_ESTADOS.N_ESTADO,
                               Cbu = cu.CBU ?? "",
                               ImportePagoPlan = prog.MONTO_PROG ?? 0,
                               NumeroCuenta = cu.NRO_CTA ?? 0,
                               Programa = prog.N_PROGRAMA,
                               MontoPrograma = prog.MONTO_PROG ?? 0,
                               TieneApoderado = c.TIENE_APODERADO,
                               Modalidad = (fvat.MODALIDAD ?? 0) == 1 ? "E" : "C",
                               AltaTemprana = fvat.ALTA_TEMPRANA == null ? "N" : "S",
                               ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                               FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                               FechaBajaBeneficio = c.FEC_BAJA,
                               Apoderado = new Apoderado { NumeroCuentaBco = ap.NRO_CUENTA_BCO, IdSucursal = ap.ID_SUCURSAL_BCO, IdApoderadoNullable = ap.ID_APODERADO, Apellido = ap.APELLIDO ?? " ", Nombre = ap.NOMBRE ?? " ", NumeroDocumento = ap.NRO_DOCUMENTO ?? " " },
                               IdSucursal = suc.ID_TABLA_BCO_CBA,
                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                               FechaNotificacion = c.FEC_NOTIF,
                               FechaInicio = fvat.AT_FECHA_INICIO,
                               FechaFin = fvat.AT_FECHA_CESE,

                               Ficha =
                                   new Ficha
                                   {
                                       Apellido = f.APELLIDO,
                                       Barrio = f.BARRIO,
                                       Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                       IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                       IdFicha = f.ID_FICHA,
                                       Calle = f.CALLE,
                                       CantidadHijos = f.CANTIDAD_HIJOS,
                                       CodigoPostal = f.CODIGO_POSTAL,
                                       CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                       Contacto = c.T_FICHAS.CONTACTO,
                                       Cuil = c.T_FICHAS.CUIL,
                                       DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                       TieneDeficienciaMental =
                                           f.TIENE_DEF_MENTAL == "S" ? true : false,
                                       TieneDeficienciaMotora =
                                           f.TIENE_DEF_MOTORA == "S" ? true : false,
                                       TieneDeficienciaPsicologia =
                                           f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                       TieneDeficienciaSensorial =
                                           f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                       Dpto = f.DPTO ?? " ",
                                       EntreCalles = f.ENTRECALLES ?? " ",
                                       EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                       EstadoCivil = f.ESTADO_CIVIL,
                                       FechaNacimiento = f.FER_NAC,
                                       Mail = f.MAIL,
                                       Manzana = f.MANZANA ?? " ",
                                       Monoblock = f.MONOBLOCK ?? " ",
                                       Nombre = f.NOMBRE,
                                       Numero = f.NUMERO,
                                       NumeroDocumento = f.NUMERO_DOCUMENTO,
                                       Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                       Piso = f.PISO ?? " ",
                                       Sexo = f.SEXO,
                                       TelefonoCelular = f.TEL_CELULAR,
                                       TelefonoFijo = f.TEL_FIJO,
                                       TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                       TipoDocumento = f.TIPO_DOCUMENTO,
                                       TipoFicha = f.TIPO_FICHA,
                                       FechaSistema = c.FEC_SIST,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                       NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                   }
                           });

            //Terciarios e Universitarios
            var teruni = (from c in _mdb.T_BENEFICIARIOS
                          join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                          from cu in
                              _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                          from suc in
                              _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                          from mon in
                              _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                          from iva in
                              _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                          from nac in
                              _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                          from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                              ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                          from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                          where
                              f.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario && (c.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && c.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                              &&
                              c.ID_PROGRAMA != (int)Enums.TipoFicha.Ppp
                               &&
                              c.ID_PROGRAMA != (int)Enums.TipoFicha.PppProf
                               &&
                              c.ID_PROGRAMA != (int)Enums.TipoFicha.Vat
                              &&
                              (
                                  (
                                      (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.NRO_CTA != null)
                                      ||
                                      (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.NRO_CUENTA_BCO != null)
                                  )
                              )
                          select
                              new Beneficiario
                                  {
                                      IdBeneficiario = c.ID_BENEFICIARIO,
                                      IdEstado = c.ID_ESTADO ?? 0,
                                      FechaSistema = c.FEC_SIST,
                                      IdFicha = c.ID_FICHA ?? 0,
                                      IdPrograma = c.ID_PROGRAMA ?? 0,
                                      IdUsuarioSistema = c.ID_USR_SIST,
                                      IdConvenio = prog.CONVENIO_BCO_CBA,
                                      NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                      CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                      CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                      CondicionIva = iva.COD_BCO_CBA ?? "0",
                                      Nacionalidad = c.NACIONALIDAD ?? 0,
                                      Residente = c.RESIDENTE,
                                      TipoPersona = c.TIPO_PERSONA,
                                      CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                      CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                      NombreEstado = c.T_ESTADOS.N_ESTADO,
                                      Cbu = cu.CBU ?? "",
                                      ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                      NumeroCuenta = cu.NRO_CTA ?? 0,
                                      Programa = prog.N_PROGRAMA,
                                      MontoPrograma = prog.MONTO_PROG ?? 0,
                                      TieneApoderado = c.TIENE_APODERADO,
                                      Modalidad = null,
                                      AltaTemprana = null,
                                      ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                      FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                      FechaBajaBeneficio = c.FEC_BAJA,
                                      Apoderado = new Apoderado
                                                      {
                                                          NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                          IdSucursal = ap.ID_SUCURSAL_BCO,
                                                          IdApoderadoNullable = ap.ID_APODERADO,
                                                          Apellido = ap.APELLIDO ?? " ",
                                                          Nombre = ap.NOMBRE ?? " ",
                                                          NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                                      },
                                      IdSucursal = suc.ID_TABLA_BCO_CBA,
                                      UsuarioSistema = c.T_USUARIOS.LOGIN,
                                      FechaNotificacion = c.FEC_NOTIF,
                                      FechaInicio = null,
                                      FechaFin = null,
                                      Ficha = new Ficha
                                              {
                                                  Apellido = f.APELLIDO,
                                                  Barrio = f.BARRIO,
                                                  Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                                  IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                                  IdFicha = f.ID_FICHA,
                                                  Calle = f.CALLE,
                                                  CantidadHijos = f.CANTIDAD_HIJOS,
                                                  CodigoPostal = f.CODIGO_POSTAL,
                                                  CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                                  Contacto = f.CONTACTO,
                                                  Cuil = f.CUIL,
                                                  DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                                  TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                                  TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                                  TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                  TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                  Dpto = f.DPTO ?? " ",
                                                  EntreCalles = f.ENTRECALLES ?? " ",
                                                  EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                                  EstadoCivil = f.ESTADO_CIVIL,
                                                  FechaNacimiento = f.FER_NAC,
                                                  Mail = f.MAIL,
                                                  Manzana = f.MANZANA ?? " ",
                                                  Monoblock = f.MONOBLOCK ?? " ",
                                                  Nombre = f.NOMBRE,
                                                  Numero = f.NUMERO,
                                                  NumeroDocumento = f.NUMERO_DOCUMENTO,
                                                  Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                                  Piso = f.PISO ?? " ",
                                                  Sexo = f.SEXO,
                                                  TelefonoCelular = f.TEL_CELULAR,
                                                  TelefonoFijo = f.TEL_FIJO,
                                                  TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                                  TipoDocumento = f.TIPO_DOCUMENTO,
                                                  TipoFicha = f.TIPO_FICHA,
                                                  FechaSistema = c.FEC_SIST,
                                                  IdUsuarioSistema = c.ID_USR_SIST,
                                                  UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                  idEtapa = f.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                                  NombreEtapa = f.T_ETAPAS.N_ETAPA // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                              }
                                  });

            return ppp.Union(teruni.Union(vat.Union(pppp)));
        }

        //Para reporte de anexoI
        private IQueryable<IBeneficiario> QBeneficiariosRetenidos()
        {
            //PPP
            var ppp = (from c in _mdb.T_BENEFICIARIOS
                       join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                       join fp in _mdb.T_FICHA_PPP on f.ID_FICHA equals fp.ID_FICHA
                       from cu in
                           _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                       from suc in
                           _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                       from mon in
                           _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                       from iva in
                           _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                       from nac in
                           _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                       from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                           ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                       from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                       where 
                            c.ID_ESTADO == (int)Enums.EstadoBeneficiario.BeneficiarioRetenido
                       select
                           new Beneficiario
                           {
                               IdBeneficiario = c.ID_BENEFICIARIO,
                               IdEstado = c.ID_ESTADO ?? 0,
                               FechaSistema = c.FEC_SIST,
                               IdFicha = c.ID_FICHA ?? 0,
                               IdPrograma = c.ID_PROGRAMA ?? 0,
                               IdUsuarioSistema = c.ID_USR_SIST,
                               IdConvenio = prog.CONVENIO_BCO_CBA,
                               NumeroConvenio = prog.CONVENIO_BCO_CBA,
                               CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                               CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                               CondicionIva = iva.COD_BCO_CBA ?? "0",
                               Nacionalidad = c.NACIONALIDAD ?? 0,
                               Residente = c.RESIDENTE,
                               TipoPersona = c.TIPO_PERSONA,
                               CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                               CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                               NombreEstado = c.T_ESTADOS.N_ESTADO,
                               Cbu = cu.CBU ?? "",
                               ImportePagoPlan = prog.MONTO_PROG ?? 0,
                               NumeroCuenta = cu.NRO_CTA ?? 0,
                               Programa = prog.N_PROGRAMA,
                               MontoPrograma = prog.MONTO_PROG ?? 0,
                               TieneApoderado = c.TIENE_APODERADO,
                               Modalidad = (fp.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                               AltaTemprana = fp.ALTA_TEMPRANA == null ? "N" : "S",
                               ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                               Apoderado = new Apoderado
                               {
                                   NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                   IdSucursal = ap.ID_SUCURSAL_BCO,
                                   IdApoderadoNullable = ap.ID_APODERADO,
                                   Apellido = ap.APELLIDO ?? " ",
                                   Nombre = ap.NOMBRE ?? " ",
                                   NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                               },
                               IdSucursal = suc.ID_TABLA_BCO_CBA,
                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                               FechaNotificacion = c.FEC_NOTIF,
                               FechaInicio = fp.AT_FECHA_INICIO,
                               FechaFin = fp.AT_FECHA_CESE,
                               Ficha = new Ficha
                               {
                                   Apellido = f.APELLIDO,
                                   Barrio = f.BARRIO,
                                   Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                   IdLocalidad = f.ID_LOCALIDAD,
                                   IdFicha = f.ID_FICHA,
                                   Calle = f.CALLE,
                                   CantidadHijos = f.CANTIDAD_HIJOS,
                                   CodigoPostal = f.CODIGO_POSTAL,
                                   CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                   Contacto = c.T_FICHAS.CONTACTO,
                                   Cuil = c.T_FICHAS.CUIL,
                                   DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                   TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                   TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                   TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                   TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                   Dpto = f.DPTO ?? " ",
                                   EntreCalles = f.ENTRECALLES ?? " ",
                                   EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                   EstadoCivil = f.ESTADO_CIVIL,
                                   FechaNacimiento = f.FER_NAC,
                                   Mail = f.MAIL,
                                   Manzana = f.MANZANA ?? " ",
                                   Monoblock = f.MONOBLOCK ?? " ",
                                   Nombre = f.NOMBRE,
                                   Numero = f.NUMERO,
                                   NumeroDocumento = f.NUMERO_DOCUMENTO,
                                   Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                   Piso = f.PISO ?? " ",
                                   Sexo = f.SEXO,
                                   TelefonoCelular = f.TEL_CELULAR,
                                   TelefonoFijo = f.TEL_FIJO,
                                   TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                   TipoDocumento = f.TIPO_DOCUMENTO,
                                   TipoFicha = f.TIPO_FICHA,
                                   FechaSistema = c.FEC_SIST,
                                   IdUsuarioSistema = c.ID_USR_SIST,
                                   UsuarioSistema = c.T_USUARIOS.LOGIN
                               }
                           });

            //PPPP
            var pppp = (from c in _mdb.T_BENEFICIARIOS
                        join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                        join fppp in _mdb.T_FICHA_PPP_PROF on f.ID_FICHA equals fppp.ID_FICHA
                        from cu in
                            _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                        from suc in
                            _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                        from mon in
                            _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                        from iva in
                            _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                        from nac in
                            _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                        from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                            ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                        from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                        where
                            c.ID_ESTADO == (int)Enums.EstadoBeneficiario.BeneficiarioRetenido
                        select
                            new Beneficiario
                            {
                                IdBeneficiario = c.ID_BENEFICIARIO,
                                IdEstado = c.ID_ESTADO ?? 0,
                                FechaSistema = c.FEC_SIST,
                                IdFicha = c.ID_FICHA ?? 0,
                                IdPrograma = c.ID_PROGRAMA ?? 0,
                                IdUsuarioSistema = c.ID_USR_SIST,
                                IdConvenio = prog.CONVENIO_BCO_CBA,
                                NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                CondicionIva = iva.COD_BCO_CBA ?? "0",
                                Nacionalidad = c.NACIONALIDAD ?? 0,
                                Residente = c.RESIDENTE,
                                TipoPersona = c.TIPO_PERSONA,
                                CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                NombreEstado = c.T_ESTADOS.N_ESTADO,
                                Cbu = cu.CBU ?? "",
                                ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                NumeroCuenta = cu.NRO_CTA,
                                Programa = prog.N_PROGRAMA,
                                MontoPrograma = prog.MONTO_PROG ?? 0,
                                TieneApoderado = c.TIENE_APODERADO,
                                Modalidad = (fppp.MODALIDAD ?? 0) == 1 ? "E" : "C",
                                AltaTemprana = fppp.ALTA_TEMPRANA == null ? "N" : "S",
                                ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                Apoderado =
                                new Apoderado
                                {
                                    NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                    IdSucursal = ap.ID_SUCURSAL_BCO,
                                    IdApoderadoNullable = ap.ID_APODERADO,
                                    Apellido = ap.APELLIDO ?? " ",
                                    Nombre = ap.NOMBRE ?? " ",
                                    NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                },
                                IdSucursal = suc.ID_TABLA_BCO_CBA,
                                UsuarioSistema = c.T_USUARIOS.LOGIN,
                                FechaNotificacion = c.FEC_NOTIF,
                                FechaInicio = fppp.AT_FECHA_INICIO,
                                FechaFin = fppp.AT_FECHA_CESE,
                                Ficha =
                                    new Ficha
                                    {
                                        Apellido = f.APELLIDO,
                                        Barrio = f.BARRIO,
                                        Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                        IdLocalidad = f.ID_LOCALIDAD,
                                        IdFicha = f.ID_FICHA,
                                        Calle = f.CALLE,
                                        CantidadHijos = f.CANTIDAD_HIJOS,
                                        CodigoPostal = f.CODIGO_POSTAL,
                                        CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                        Contacto = c.T_FICHAS.CONTACTO,
                                        Cuil = c.T_FICHAS.CUIL,
                                        DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                        TieneDeficienciaMental =
                                            f.TIENE_DEF_MENTAL == "S" ? true : false,
                                        TieneDeficienciaMotora =
                                            f.TIENE_DEF_MOTORA == "S" ? true : false,
                                        TieneDeficienciaPsicologia =
                                            f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                        TieneDeficienciaSensorial =
                                            f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                        Dpto = f.DPTO ?? " ",
                                        EntreCalles = f.ENTRECALLES ?? " ",
                                        EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                        EstadoCivil = f.ESTADO_CIVIL,
                                        FechaNacimiento = f.FER_NAC,
                                        Mail = f.MAIL,
                                        Manzana = f.MANZANA ?? " ",
                                        Monoblock = f.MONOBLOCK ?? " ",
                                        Nombre = f.NOMBRE,
                                        Numero = f.NUMERO,
                                        NumeroDocumento = f.NUMERO_DOCUMENTO,
                                        Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                        Piso = f.PISO ?? " ",
                                        Sexo = f.SEXO,
                                        TelefonoCelular = f.TEL_CELULAR,
                                        TelefonoFijo = f.TEL_FIJO,
                                        TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                        TipoDocumento = f.TIPO_DOCUMENTO,
                                        TipoFicha = f.TIPO_FICHA,
                                        FechaSistema = c.FEC_SIST,
                                        IdUsuarioSistema = c.ID_USR_SIST,
                                        UsuarioSistema = c.T_USUARIOS.LOGIN
                                    }
                            });

            //Vat
            var vat = (from c in _mdb.T_BENEFICIARIOS
                       join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                       join fvat in _mdb.T_FICHA_VAT on f.ID_FICHA equals fvat.ID_FICHA
                       from cu in
                           _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                       from suc in
                           _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                       from mon in
                           _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                       from iva in
                           _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                       from nac in
                           _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                       from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                           ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                       from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                       where
                           c.ID_ESTADO == (int)Enums.EstadoBeneficiario.BeneficiarioRetenido
                       select
                           new Beneficiario
                           {
                               IdBeneficiario = c.ID_BENEFICIARIO,
                               IdEstado = c.ID_ESTADO ?? 0,
                               FechaSistema = c.FEC_SIST,
                               IdFicha = c.ID_FICHA ?? 0,
                               IdPrograma = c.ID_PROGRAMA ?? 0,
                               IdUsuarioSistema = c.ID_USR_SIST,
                               IdConvenio = prog.CONVENIO_BCO_CBA,
                               NumeroConvenio = prog.CONVENIO_BCO_CBA,
                               CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                               CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                               CondicionIva = iva.COD_BCO_CBA ?? "0",
                               Nacionalidad = c.NACIONALIDAD ?? 0,
                               Residente = c.RESIDENTE,
                               TipoPersona = c.TIPO_PERSONA,
                               CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                               CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                               NombreEstado = c.T_ESTADOS.N_ESTADO,
                               Cbu = cu.CBU ?? "",
                               ImportePagoPlan = prog.MONTO_PROG ?? 0,
                               NumeroCuenta = cu.NRO_CTA ?? 0,
                               Programa = prog.N_PROGRAMA,
                               MontoPrograma = prog.MONTO_PROG ?? 0,
                               TieneApoderado = c.TIENE_APODERADO,
                               Modalidad = (fvat.MODALIDAD ?? 0) == 1 ? "E" : "C",
                               AltaTemprana = fvat.ALTA_TEMPRANA == null ? "N" : "S",
                               ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                               Apoderado = new Apoderado { NumeroCuentaBco = ap.NRO_CUENTA_BCO, IdSucursal = ap.ID_SUCURSAL_BCO, IdApoderadoNullable = ap.ID_APODERADO, Apellido = ap.APELLIDO ?? " ", Nombre = ap.NOMBRE ?? " ", NumeroDocumento = ap.NRO_DOCUMENTO ?? " " },
                               IdSucursal = suc.ID_TABLA_BCO_CBA,
                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                               FechaNotificacion = c.FEC_NOTIF,
                               FechaInicio = fvat.AT_FECHA_INICIO,
                               FechaFin = fvat.AT_FECHA_CESE,
                               Ficha =
                                   new Ficha
                                   {
                                       Apellido = f.APELLIDO,
                                       Barrio = f.BARRIO,
                                       Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                       IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                       IdFicha = f.ID_FICHA,
                                       Calle = f.CALLE,
                                       CantidadHijos = f.CANTIDAD_HIJOS,
                                       CodigoPostal = f.CODIGO_POSTAL,
                                       CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                       Contacto = c.T_FICHAS.CONTACTO,
                                       Cuil = c.T_FICHAS.CUIL,
                                       DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                       TieneDeficienciaMental =
                                           f.TIENE_DEF_MENTAL == "S" ? true : false,
                                       TieneDeficienciaMotora =
                                           f.TIENE_DEF_MOTORA == "S" ? true : false,
                                       TieneDeficienciaPsicologia =
                                           f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                       TieneDeficienciaSensorial =
                                           f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                       Dpto = f.DPTO ?? " ",
                                       EntreCalles = f.ENTRECALLES ?? " ",
                                       EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                       EstadoCivil = f.ESTADO_CIVIL,
                                       FechaNacimiento = f.FER_NAC,
                                       Mail = f.MAIL,
                                       Manzana = f.MANZANA ?? " ",
                                       Monoblock = f.MONOBLOCK ?? " ",
                                       Nombre = f.NOMBRE,
                                       Numero = f.NUMERO,
                                       NumeroDocumento = f.NUMERO_DOCUMENTO,
                                       Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                       Piso = f.PISO ?? " ",
                                       Sexo = f.SEXO,
                                       TelefonoCelular = f.TEL_CELULAR,
                                       TelefonoFijo = f.TEL_FIJO,
                                       TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                       TipoDocumento = f.TIPO_DOCUMENTO,
                                       TipoFicha = f.TIPO_FICHA,
                                       FechaSistema = c.FEC_SIST,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN
                                   }
                           });

            //Terciarios e Universitarios
            var teruni = (from c in _mdb.T_BENEFICIARIOS
                          join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                          from cu in
                              _mdb.T_CUENTAS_BANCO.Where(cub => cub.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                          from suc in
                              _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                          from mon in
                              _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                          from iva in
                              _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                          from nac in
                              _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                          from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                              ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                          from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                          where
                              c.ID_ESTADO == (int)Enums.EstadoBeneficiario.BeneficiarioRetenido
                          select
                              new Beneficiario
                              {
                                  IdBeneficiario = c.ID_BENEFICIARIO,
                                  IdEstado = c.ID_ESTADO ?? 0,
                                  FechaSistema = c.FEC_SIST,
                                  IdFicha = c.ID_FICHA ?? 0,
                                  IdPrograma = c.ID_PROGRAMA ?? 0,
                                  IdUsuarioSistema = c.ID_USR_SIST,
                                  IdConvenio = prog.CONVENIO_BCO_CBA,
                                  NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                  CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                  CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                  CondicionIva = iva.COD_BCO_CBA ?? "0",
                                  Nacionalidad = c.NACIONALIDAD ?? 0,
                                  Residente = c.RESIDENTE,
                                  TipoPersona = c.TIPO_PERSONA,
                                  CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                  CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                  NombreEstado = c.T_ESTADOS.N_ESTADO,
                                  Cbu = cu.CBU ?? "",
                                  ImportePagoPlan = prog.MONTO_PROG ?? 0,
                                  NumeroCuenta = cu.NRO_CTA ?? 0,
                                  Programa = prog.N_PROGRAMA,
                                  MontoPrograma = prog.MONTO_PROG ?? 0,
                                  TieneApoderado = c.TIENE_APODERADO,
                                  Modalidad = null,
                                  AltaTemprana = null,
                                  ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                  Apoderado = new Apoderado
                                  {
                                      NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                      IdSucursal = ap.ID_SUCURSAL_BCO,
                                      IdApoderadoNullable = ap.ID_APODERADO,
                                      Apellido = ap.APELLIDO ?? " ",
                                      Nombre = ap.NOMBRE ?? " ",
                                      NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                  },
                                  IdSucursal = suc.ID_TABLA_BCO_CBA,
                                  UsuarioSistema = c.T_USUARIOS.LOGIN,
                                  FechaNotificacion = c.FEC_NOTIF,
                                  FechaInicio = null,
                                  FechaFin = null,
                                  Ficha = new Ficha
                                  {
                                      Apellido = f.APELLIDO,
                                      Barrio = f.BARRIO,
                                      Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                      IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                      IdFicha = f.ID_FICHA,
                                      Calle = f.CALLE,
                                      CantidadHijos = f.CANTIDAD_HIJOS,
                                      CodigoPostal = f.CODIGO_POSTAL,
                                      CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                      Contacto = f.CONTACTO,
                                      Cuil = f.CUIL,
                                      DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                      TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                      TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                      TieneDeficienciaPsicologia = f.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                      TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                      Dpto = f.DPTO ?? " ",
                                      EntreCalles = f.ENTRECALLES ?? " ",
                                      EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                      EstadoCivil = f.ESTADO_CIVIL,
                                      FechaNacimiento = f.FER_NAC,
                                      Mail = f.MAIL,
                                      Manzana = f.MANZANA ?? " ",
                                      Monoblock = f.MONOBLOCK ?? " ",
                                      Nombre = f.NOMBRE,
                                      Numero = f.NUMERO,
                                      NumeroDocumento = f.NUMERO_DOCUMENTO,
                                      Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                      Piso = f.PISO ?? " ",
                                      Sexo = f.SEXO,
                                      TelefonoCelular = f.TEL_CELULAR,
                                      TelefonoFijo = f.TEL_FIJO,
                                      TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                      TipoDocumento = f.TIPO_DOCUMENTO,
                                      TipoFicha = f.TIPO_FICHA,
                                      FechaSistema = c.FEC_SIST,
                                      IdUsuarioSistema = c.ID_USR_SIST,
                                      UsuarioSistema = c.T_USUARIOS.LOGIN
                                  }
                              });

            return ppp.Union(teruni.Union(vat.Union(pppp)));
        }

        private IEnumerable<IBeneficiario> QBeneficiarioSinCuentas()
        {

            var a = (from c in _mdb.T_BENEFICIARIOS
                     join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                     from cu in
                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                     from suc in
                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                     from mon in
                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                     from iva in
                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                     from nac in
                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                     from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                         ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                     from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                     from fpp in _mdb.T_FICHA_PPP.Where(cons => cons.ID_FICHA == f.ID_FICHA).DefaultIfEmpty()
                     where
                         (
                             (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                              cu.NRO_CTA == null)
                             ||
                             (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                              ap.NRO_CUENTA_BCO == null)
                         )
                     select
                         new Beneficiario
                             {
                                 IdBeneficiario = c.ID_BENEFICIARIO,
                                 IdEstado = c.ID_ESTADO ?? 0,
                                 FechaSistema = c.FEC_SIST,
                                 IdFicha = c.ID_FICHA ?? 0,
                                 IdPrograma = prog.ID_PROGRAMA,
                                 IdUsuarioSistema = c.ID_USR_SIST,
                                 IdConvenio = prog.CONVENIO_BCO_CBA,
                                 NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                 CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                 CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                 CondicionIva = "01",
                                 Nacionalidad = c.NACIONALIDAD ?? 0,
                                 Residente = c.RESIDENTE,
                                 TipoPersona = c.TIPO_PERSONA,
                                 CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                 CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                 NombreEstado = c.T_ESTADOS.N_ESTADO,
                                 Cbu = cu.CBU ?? "",
                                 ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                 NumeroCuenta = cu.NRO_CTA ?? 0,
                                 Programa = prog.N_PROGRAMA,
                                 MontoPrograma = prog.MONTO_PROG ?? 0,
                                 TieneApoderado = c.TIENE_APODERADO,
                                 Modalidad = (fpp.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                 AltaTemprana = fpp.ALTA_TEMPRANA == null ? "N" : "S",

                                 ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                 UsuarioSistema = c.T_USUARIOS.LOGIN,
                                 FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                 FechaBajaBeneficio = c.FEC_BAJA,

                                 Apoderado = new Apoderado
                                                 {
                                                     Apellido = ap.APELLIDO ?? " ",
                                                     Nombre = ap.NOMBRE ?? " ",
                                                     NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                                 },
                                 Ficha = new Ficha
                                 {
                                     Apellido = f.APELLIDO,
                                     Barrio = f.BARRIO,
                                     Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                     IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                     IdFicha = f.ID_FICHA,
                                     Calle = (f.CALLE ?? "").Trim(),
                                     CantidadHijos = f.CANTIDAD_HIJOS,
                                     CodigoPostal = f.CODIGO_POSTAL,
                                     CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                     Contacto = f.CONTACTO,
                                     Cuil = f.CUIL,
                                     DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                     TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                     TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                     TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                     Dpto = f.DPTO ?? " ",
                                     EntreCalles = f.ENTRECALLES ?? " ",
                                     EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                     EstadoCivil = f.ESTADO_CIVIL,
                                     FechaNacimiento = f.FER_NAC,
                                     Mail = f.MAIL,
                                     Manzana = f.MANZANA ?? " ",
                                     Monoblock = f.MONOBLOCK ?? " ",
                                     Nombre = f.NOMBRE,
                                     Numero = f.NUMERO ?? " ",
                                     NumeroDocumento = f.NUMERO_DOCUMENTO,
                                     Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                     Piso = f.PISO ?? " ",
                                     Sexo = f.SEXO,
                                     TelefonoCelular = f.TEL_CELULAR,
                                     TelefonoFijo = f.TEL_FIJO,
                                     TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                     TipoDocumento = f.TIPO_DOCUMENTO,
                                     TipoFicha = f.TIPO_FICHA,
                                     IdEstadoFicha = f.ID_ESTADO_FICHA ?? 0,
                                     FechaSistema = c.FEC_SIST,
                                     IdUsuarioSistema = c.ID_USR_SIST,
                                     UsuarioSistema = c.T_USUARIOS.LOGIN,
                                     NroTramite = f.NRO_TRAMITE ?? " "
                                 }
                             });
            return a;
        }

        private IEnumerable<IBeneficiario> QBeneficiarioExportar(int idPrograma)
        {



            switch (idPrograma)
            {
                case (int)Enums.Programas.Terciaria:
                    var fichaterc = (from c in _mdb.T_BENEFICIARIOS
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     from fiterc in
                                         _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from fiUniv in
                                         _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                             ap =>
                                             ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                             ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma
                                     select
                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {

                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,

                                                     //Fichas Terciarias
                                                     PromedioTerciaria = fiterc.PROMEDIO,
                                                     OtraCarreraTerciaria = fiterc.OTRA_CARRERA,
                                                     OtraInstitucionTerciaria = fiterc.OTRA_INSTITUCION,
                                                     IdCarreraTerciaria = fiterc.ID_CARRERA,
                                                     IdEscuelaTerciaria = fiterc.ID_ESCUELA,
                                                     IdLocalidadEscTerc = fiterc.T_ESCUELAS.ID_LOCALIDAD,
                                                     NombreEscuela = fiterc.T_ESCUELAS.N_ESCUELA,
                                                     OtroSectorTerciaria = fiterc.OTRO_SECTOR,
                                                     EscuelaFicha =
                                                         new Escuela
                                                         {
                                                             Anexo = fiterc.T_ESCUELAS.ANEXO,
                                                             Barrio = fiterc.T_ESCUELAS.BARRIO,
                                                             Cue = fiterc.T_ESCUELAS.CUE,
                                                             Id_Escuela = fiterc.ID_ESCUELA ?? 0,
                                                             Nombre_Escuela = fiterc.T_ESCUELAS.N_ESCUELA,
                                                             LocalidadEscuela =
                                                                 new Localidad
                                                                 {
                                                                     IdLocalidad = fiterc.T_ESCUELAS.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = fiterc.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                         {
                                                                             IdDepartamento = fiterc.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                             NombreDepartamento = fiterc.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                         }
                                                                 }
                                                         },
                                                     CarreraFicha =
                                                         new Carrera
                                                         {
                                                             IdCarrera = fiterc.ID_CARRERA ?? 0,
                                                             NombreCarrera = fiterc.T_CARRERAS.N_CARRERA,
                                                             IdSector = fiterc.T_CARRERAS.ID_SECTOR,
                                                             SectorCarrera =
                                                                 new Sector
                                                                 {
                                                                     IdSector = fiterc.T_CARRERAS.ID_SECTOR ?? 0,
                                                                     NombreSector = fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR
                                                                 },
                                                             IdNivel = fiterc.T_CARRERAS.ID_NIVEL,
                                                             NivelCarrera =
                                                                 new Nivel
                                                                 {
                                                                     IdNivel = fiterc.T_CARRERAS.ID_NIVEL ?? 0,
                                                                     NombreNivel = fiterc.T_CARRERAS.T_NIVEL.N_NIVEL
                                                                 },
                                                             IdInstitucion = fiterc.T_CARRERAS.ID_INSTITUCION,
                                                             InstitucionCarrera =
                                                                 new Institucion
                                                                 {
                                                                     IdInstitucion = fiterc.T_CARRERAS.ID_INSTITUCION ?? 0,
                                                                     NombreInstitucion = fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return fichaterc;
                case (int)Enums.Programas.Universitaria:
                    var fichauniv = (from c in _mdb.T_BENEFICIARIOS
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     from fiterc in
                                         _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from fiUniv in
                                         _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()

                                     from ap in
                                         
                                         _mdb.T_APODERADOS.Where(
                                             ap =>
                                             ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                             ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma
                                     select
                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {
                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,

                                                     // Fichas Universitarias
                                                     PromedioUniversitaria = fiUniv.PROMEDIO,
                                                     OtraCarreraUniversitaria = fiUniv.OTRA_CARRERA,
                                                     OtraInstitucionUniversitaria = fiUniv.OTRA_INSTITUCION,
                                                     IdCarreraUniversitaria = fiUniv.ID_CARRERA,
                                                     IdEscuelaUniversitaria = fiUniv.ID_ESCUELA,
                                                     OtroSectorUniversitaria = fiUniv.OTRO_SECTOR,
                                                     EscuelaFicha =
                                                         new Escuela
                                                         {
                                                             Anexo = fiUniv.T_ESCUELAS.ANEXO,
                                                             Barrio = fiUniv.T_ESCUELAS.BARRIO,
                                                             Cue = fiUniv.T_ESCUELAS.CUE,
                                                             Id_Escuela = fiUniv.ID_ESCUELA ?? 0,
                                                             Nombre_Escuela = fiUniv.T_ESCUELAS.N_ESCUELA,
                                                             Id_Localidad = fiUniv.T_ESCUELAS.ID_LOCALIDAD,
                                                             LocalidadEscuela =
                                                                 new Localidad
                                                                 {
                                                                     IdLocalidad = fiUniv.T_ESCUELAS.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = fiUniv.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                         {
                                                                             IdDepartamento = fiUniv.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                             NombreDepartamento = fiUniv.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                         }
                                                                 }
                                                         },
                                                     CarreraFicha =
                                                         new Carrera
                                                         {
                                                             IdCarrera = fiUniv.ID_CARRERA ?? 0,
                                                             NombreCarrera = fiUniv.T_CARRERAS.N_CARRERA,
                                                             IdSector = fiUniv.T_CARRERAS.ID_SECTOR,
                                                             SectorCarrera =
                                                                 new Sector
                                                                 {
                                                                     IdSector = fiUniv.T_CARRERAS.ID_SECTOR ?? 0,
                                                                     NombreSector = fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR
                                                                 },
                                                             IdNivel = fiUniv.T_CARRERAS.ID_NIVEL,
                                                             NivelCarrera =
                                                                 new Nivel
                                                                 {
                                                                     IdNivel = fiUniv.T_CARRERAS.ID_NIVEL ?? 0,
                                                                     NombreNivel = fiUniv.T_CARRERAS.T_NIVEL.N_NIVEL
                                                                 },
                                                             IdInstitucion = fiUniv.T_CARRERAS.ID_INSTITUCION,
                                                             InstitucionCarrera =
                                                                 new Institucion
                                                                 {
                                                                     IdInstitucion = fiUniv.T_CARRERAS.ID_INSTITUCION ?? 0,
                                                                     NombreInstitucion = fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return fichauniv;
                case (int)Enums.Programas.Ppp:
                    var ppp = (from c in _mdb.T_BENEFICIARIOS
                               join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                               from fiterc in
                                   _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from fiUniv in
                                   _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from fichappp in
                                   _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                               from ap in
                                   
                                   _mdb.T_APODERADOS.Where(
                                       ap =>
                                       ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                       (ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo || ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Suspendido)).DefaultIfEmpty()
                               from sucapo in
                                   _mdb.T_TABLAS_BCO_CBA.Where(
                                       sucapo =>
                                       sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                   DefaultIfEmpty()
                               where c.ID_PROGRAMA == idPrograma
                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA,
                                       Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                       MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       Notificado = c.NOTIFICADO == "S" ? true : false,
                                       Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                       SucursalDescripcion = suc.DESCRIPCION,
                                       FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                       IdSucursal = cu.ID_SUCURSAL,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       Apoderado =
                                           new Apoderado
                                           {
                                               IdApoderadoNullable = ap.ID_APODERADO,
                                               Nombre = ap.NOMBRE,
                                               Apellido = ap.APELLIDO,
                                               Barrio = ap.BARRIO,
                                               Calle = ap.CALLE,
                                               Cbu = ap.CBU,
                                               CodigoPostal = ap.CODIGO_POSTAL,
                                               Cuil = ap.CUIL,
                                               Dpto = ap.DPTO,
                                               EntreCalles = ap.ENTRECALLES,
                                               FechaNacimiento = ap.FER_NAC,
                                               FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                               IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                               IdSistema = ap.ID_SISTEMA ?? 0,
                                               IdSucursal = ap.ID_SUCURSAL_BCO,
                                               Mail = ap.MAIL,
                                               Numero = ap.NUMERO,
                                               IdLocalidad = ap.ID_LOCALIDAD,
                                               LocalidadApoderado =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   },
                                               Manzana = ap.MANZANA,
                                               Monoblock = ap.MONOBLOCK,
                                               NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                               NumeroDocumento = ap.NRO_DOCUMENTO,
                                               Parcela = ap.PARCELA,
                                               Piso = ap.PISO,
                                               Sexo = ap.SEXO,
                                               TelefonoCelular = ap.TEL_CELULAR,
                                               TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                               TelefonoFijo = ap.TEL_FIJO,
                                               UsuarioBanco = ap.USUARIO_BANCO,
                                               SucursalApoderado =
                                                   new Sucursal
                                                   {
                                                       CodigoBanco = sucapo.COD_BCO_CBA,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                       Detalle = sucapo.DESCRIPCION
                                                   }
                                           },
                                       Ficha =
                                           new Ficha
                                           {

                                               Apellido = c.T_FICHAS.APELLIDO,
                                               Barrio = c.T_FICHAS.BARRIO,
                                               Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                               IdFicha = c.T_FICHAS.ID_FICHA,
                                               Calle = c.T_FICHAS.CALLE,
                                               CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                               CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                               CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = c.T_FICHAS.DPTO ?? " ",
                                               EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                               EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                               FechaNacimiento = c.T_FICHAS.FER_NAC,
                                               Mail = c.T_FICHAS.MAIL,
                                               Manzana = c.T_FICHAS.MANZANA ?? " ",
                                               Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                               Nombre = c.T_FICHAS.NOMBRE,
                                               Numero = c.T_FICHAS.NUMERO,
                                               NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                               Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                               Piso = c.T_FICHAS.PISO ?? " ",
                                               Sexo = c.T_FICHAS.SEXO,
                                               TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                               TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                               TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                               TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                               IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                               NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               FichaPpp =
                                                   new FichaPPP
                                                   {
                                                       AltaTemprana = fichappp.ALTA_TEMPRANA == null ? "N" : "S",
                                                       FechaInicioActividad = fichappp.AT_FECHA_INICIO,
                                                       FechaFinActividad = fichappp.AT_FECHA_CESE,
                                                       IdModalidadAfip = fichappp.ID_MOD_CONT_AFIP,
                                                       ModalidadAfip = fichappp.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                       Finalizado = (fichappp.FINALIZADO == "S" ? true : false),
                                                       Cursando = (fichappp.CURSANDO == "S" ? true : false),
                                                       IdEmpresa = fichappp.ID_EMPRESA,
                                                       DeseaTermNivel = (fichappp.DESEA_TERM_NIVEL == "S" ? true : false),
                                                       IdNivelEscolaridad = fichappp.ID_NIVEL_ESCOLARIDAD,
                                                       Modalidad = fichappp.MODALIDAD,
                                                       IdSede = fichappp.ID_SEDE,
                                                       Tareas = fichappp.TAREAS,
                                                       Empresa =
                                                           new Empresa
                                                           {
                                                               Calle = fichappp.T_EMPRESAS.CALLE,
                                                               CantidadEmpleados = fichappp.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                               CodigoActividad = fichappp.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                               CodigoPostal = fichappp.T_EMPRESAS.CODIGO_POSTAL,
                                                               Cuit = fichappp.T_EMPRESAS.CUIT,
                                                               DomicilioLaboralIdem = fichappp.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                               IdEmpresa = fichappp.ID_EMPRESA ?? 0,
                                                               NombreEmpresa = fichappp.T_EMPRESAS.N_EMPRESA,
                                                               Numero = fichappp.T_EMPRESAS.NUMERO,
                                                               Piso = fichappp.T_EMPRESAS.PISO,
                                                               Telefono = fichappp.T_EMPRESAS.PISO,
                                                               IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD,
                                                               LocalidadEmpresa =
                                                                   new Localidad
                                                                   {
                                                                       IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                       NombreLocalidad = fichappp.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                       Departamento =
                                                                           new Departamento
                                                                           {
                                                                               IdDepartamento =
                                                                                   fichappp.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                               NombreDepartamento =
                                                                                   fichappp.T_EMPRESAS.
                                                                                   T_LOCALIDADES.
                                                                                   T_DEPARTAMENTOS.
                                                                                   N_DEPARTAMENTO
                                                                           }
                                                                   },
                                                               Usuario =
                                                                   new UsuarioEmpresa
                                                                   {
                                                                       ApellidoUsuario = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.APELLIDO,
                                                                       Cuil = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.CUIL,
                                                                       IdUsuarioEmpresa = fichappp.T_EMPRESAS.ID_USUARIO,
                                                                       Mail = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.MAIL,
                                                                       NombreUsuario = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.NOMBRE
                                                                   }
                                                           }
                                                   },
                                               LocalidadFicha =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                   N_DEPARTAMENTO
                                                           }
                                                   }
                                           }
                                   });
                    return ppp;
                case (int)Enums.Programas.PppProf:
                    var pppProf = (from c in _mdb.T_BENEFICIARIOS
                                   join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                   from fiterc in
                                       _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                   from fiUniv in
                                       _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                   from cu in
                                       _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                   from suc in
                                       _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                   from mon in
                                       _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                   from iva in
                                       _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                   from nac in
                                       _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                   from fichapppProf in
                                       _mdb.T_FICHA_PPP_PROF.Where(fichapppProf => fichapppProf.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                                   from ap in
                                       _mdb.T_APODERADOS.Where(
                                           ap =>
                                           ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                           ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                   from sucapo in
                                       _mdb.T_TABLAS_BCO_CBA.Where(
                                           sucapo =>
                                           sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                       DefaultIfEmpty()
                                   where c.ID_PROGRAMA == idPrograma
                                   select
                                       new Beneficiario
                                       {
                                           IdBeneficiario = c.ID_BENEFICIARIO,
                                           IdEstado = c.ID_ESTADO ?? 0,
                                           FechaSistema = c.FEC_SIST,
                                           IdFicha = c.ID_FICHA ?? 0,
                                           IdPrograma = c.ID_PROGRAMA ?? 0,
                                           IdUsuarioSistema = c.ID_USR_SIST,
                                           IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                           NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                           CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                           CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                           CondicionIva = iva.COD_BCO_CBA ?? "0",
                                           Nacionalidad = c.NACIONALIDAD ?? 0,
                                           Residente = c.RESIDENTE,
                                           TipoPersona = c.TIPO_PERSONA,
                                           CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                           CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                           NombreEstado = c.T_ESTADOS.N_ESTADO,
                                           Cbu = cu.CBU ?? "",
                                           ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                           NumeroCuenta = cu.NRO_CTA,
                                           Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                           MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                           TieneApoderado = c.TIENE_APODERADO,
                                           FechaNotificacion = c.FEC_NOTIF,
                                           Notificado = c.NOTIFICADO == "S" ? true : false,
                                           Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                           SucursalDescripcion = suc.DESCRIPCION,
                                           FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                           IdSucursal = cu.ID_SUCURSAL,
                                           UsuarioSistema = c.T_USUARIOS.LOGIN,
                                           Apoderado =
                                               new Apoderado
                                               {
                                                   IdApoderadoNullable = ap.ID_APODERADO,
                                                   Nombre = ap.NOMBRE,
                                                   Apellido = ap.APELLIDO,
                                                   Barrio = ap.BARRIO,
                                                   Calle = ap.CALLE,
                                                   Cbu = ap.CBU,
                                                   CodigoPostal = ap.CODIGO_POSTAL,
                                                   Cuil = ap.CUIL,
                                                   Dpto = ap.DPTO,
                                                   EntreCalles = ap.ENTRECALLES,
                                                   FechaNacimiento = ap.FER_NAC,
                                                   FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                   IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                   IdSistema = ap.ID_SISTEMA ?? 0,
                                                   IdSucursal = ap.ID_SUCURSAL_BCO,
                                                   Mail = ap.MAIL,
                                                   Numero = ap.NUMERO,
                                                   IdLocalidad = ap.ID_LOCALIDAD,
                                                   LocalidadApoderado =
                                                       new Localidad
                                                       {
                                                           IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                           NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                           Departamento =
                                                               new Departamento
                                                               {
                                                                   IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                   NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                               }
                                                       },
                                                   Manzana = ap.MANZANA,
                                                   Monoblock = ap.MONOBLOCK,
                                                   NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                   NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                   NumeroDocumento = ap.NRO_DOCUMENTO,
                                                   Parcela = ap.PARCELA,
                                                   Piso = ap.PISO,
                                                   Sexo = ap.SEXO,
                                                   TelefonoCelular = ap.TEL_CELULAR,
                                                   TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                   TelefonoFijo = ap.TEL_FIJO,
                                                   UsuarioBanco = ap.USUARIO_BANCO,
                                                   SucursalApoderado =
                                                       new Sucursal
                                                       {
                                                           CodigoBanco = sucapo.COD_BCO_CBA,
                                                           IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                           Detalle = sucapo.DESCRIPCION
                                                       }
                                               },
                                           Ficha =
                                               new Ficha
                                               {
                                                   Apellido = c.T_FICHAS.APELLIDO,
                                                   Barrio = c.T_FICHAS.BARRIO,
                                                   Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                   IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                   IdFicha = c.T_FICHAS.ID_FICHA,
                                                   Calle = c.T_FICHAS.CALLE,
                                                   CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                   CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                   CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                   Contacto = c.T_FICHAS.CONTACTO,
                                                   Cuil = c.T_FICHAS.CUIL,
                                                   DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                   TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                   TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                   TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                   TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                   Dpto = c.T_FICHAS.DPTO ?? " ",
                                                   EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                   EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                   EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                   FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                   Mail = c.T_FICHAS.MAIL,
                                                   Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                   Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                   Nombre = c.T_FICHAS.NOMBRE,
                                                   Numero = c.T_FICHAS.NUMERO,
                                                   NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                   Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                   Piso = c.T_FICHAS.PISO ?? " ",
                                                   Sexo = c.T_FICHAS.SEXO,
                                                   TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                   TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                   TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                   TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                   TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                   IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                   NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                   FechaSistema = c.FEC_SIST,
                                                   IdUsuarioSistema = c.ID_USR_SIST,
                                                   UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                   FichaPppp =
                                                       new FichaPPPP
                                                       {
                                                           AltaTemprana = fichapppProf.ALTA_TEMPRANA,
                                                           Promedio = fichapppProf.PROMEDIO,
                                                           IdTitulo = fichapppProf.ID_TITULO,
                                                           FechaEgreso = fichapppProf.FECHA_EGRESO,
                                                           IdEmpresa = fichapppProf.ID_EMPRESA,
                                                           Modalidad = fichapppProf.MODALIDAD,
                                                           IdSede = fichapppProf.ID_SEDE,
                                                           Tareas = fichapppProf.TAREAS,
                                                           FechaInicioActividad = fichapppProf.AT_FECHA_INICIO,
                                                           FechaFinActividad = fichapppProf.AT_FECHA_CESE,
                                                           IdModalidadAFIP = fichapppProf.ID_MOD_CONT_AFIP,
                                                           ModalidadAFIP = fichapppProf.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                           Empresa =
                                                               new Empresa
                                                               {
                                                                   Calle = fichapppProf.T_EMPRESAS.CALLE,
                                                                   CantidadEmpleados = fichapppProf.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                   CodigoActividad = fichapppProf.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                   CodigoPostal = fichapppProf.T_EMPRESAS.CODIGO_POSTAL,
                                                                   Cuit = fichapppProf.T_EMPRESAS.CUIT,
                                                                   DomicilioLaboralIdem = fichapppProf.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                   IdEmpresa = fichapppProf.ID_EMPRESA ?? 0,
                                                                   NombreEmpresa = fichapppProf.T_EMPRESAS.N_EMPRESA,
                                                                   Numero = fichapppProf.T_EMPRESAS.NUMERO,
                                                                   Piso = fichapppProf.T_EMPRESAS.PISO,
                                                                   Telefono = fichapppProf.T_EMPRESAS.PISO,
                                                                   IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD,
                                                                   LocalidadEmpresa =
                                                                       new Localidad
                                                                       {
                                                                           IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                           NombreLocalidad = fichapppProf.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                           Departamento =
                                                                               new Departamento
                                                                               {
                                                                                   IdDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                   NombreDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                               }
                                                                       },
                                                                   IdUsuario = fichapppProf.T_EMPRESAS.ID_USUARIO,
                                                                   Usuario =
                                                                       new UsuarioEmpresa
                                                                       {
                                                                           ApellidoUsuario =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.APELLIDO,
                                                                           Cuil =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.CUIL,
                                                                           IdUsuarioEmpresa =
                                                                               fichapppProf.T_EMPRESAS.ID_USUARIO ?? 0,
                                                                           Mail =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.MAIL,
                                                                           NombreUsuario =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.NOMBRE
                                                                       }
                                                               }
                                                       },
                                                   LocalidadFicha =
                                                       new Localidad
                                                       {
                                                           IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                           NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                           Departamento =
                                                               new Departamento
                                                               {
                                                                   IdDepartamento =
                                                                       c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                   NombreDepartamento =
                                                                       c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                       N_DEPARTAMENTO
                                                               }
                                                       }
                                               }
                                       });
                    return pppProf;
                case (int)Enums.Programas.Vat:
                    var vat = (from c in _mdb.T_BENEFICIARIOS
                               join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                               from fiterc in
                                   _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from fiUniv in
                                   _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from fichaVat in
                                   _mdb.T_FICHA_VAT.Where(fichaVat => fichaVat.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                               from ap in
                                   
                                   _mdb.T_APODERADOS.Where(
                                       ap =>
                                       ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                       ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                               from sucapo in
                                   _mdb.T_TABLAS_BCO_CBA.Where(
                                       sucapo =>
                                       sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                   DefaultIfEmpty()
                               where c.ID_PROGRAMA == idPrograma
                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA,
                                       Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                       MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       Notificado = c.NOTIFICADO == "S" ? true : false,
                                       Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                       SucursalDescripcion = suc.DESCRIPCION,
                                       FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                       IdSucursal = cu.ID_SUCURSAL,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       Apoderado =
                                           new Apoderado
                                           {
                                               IdApoderadoNullable = ap.ID_APODERADO,
                                               Nombre = ap.NOMBRE,
                                               Apellido = ap.APELLIDO,
                                               Barrio = ap.BARRIO,
                                               Calle = ap.CALLE,
                                               Cbu = ap.CBU,
                                               CodigoPostal = ap.CODIGO_POSTAL,
                                               Cuil = ap.CUIL,
                                               Dpto = ap.DPTO,
                                               EntreCalles = ap.ENTRECALLES,
                                               FechaNacimiento = ap.FER_NAC,
                                               FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                               IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                               IdSistema = ap.ID_SISTEMA ?? 0,
                                               IdSucursal = ap.ID_SUCURSAL_BCO,
                                               Mail = ap.MAIL,
                                               Numero = ap.NUMERO,
                                               IdLocalidad = ap.ID_LOCALIDAD,
                                               LocalidadApoderado =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento =
                                                                   ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento =
                                                                   ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   },
                                               Manzana = ap.MANZANA,
                                               Monoblock = ap.MONOBLOCK,
                                               NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                               NumeroDocumento = ap.NRO_DOCUMENTO,
                                               Parcela = ap.PARCELA,
                                               Piso = ap.PISO,
                                               Sexo = ap.SEXO,
                                               TelefonoCelular = ap.TEL_CELULAR,
                                               TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                               TelefonoFijo = ap.TEL_FIJO,
                                               UsuarioBanco = ap.USUARIO_BANCO,
                                               SucursalApoderado =
                                                   new Sucursal
                                                   {
                                                       CodigoBanco = sucapo.COD_BCO_CBA,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                       Detalle = sucapo.DESCRIPCION
                                                   }
                                           },
                                       Ficha =
                                           new Ficha
                                           {
                                               Apellido = c.T_FICHAS.APELLIDO,
                                               Barrio = c.T_FICHAS.BARRIO,
                                               Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                               IdFicha = c.T_FICHAS.ID_FICHA,
                                               Calle = c.T_FICHAS.CALLE,
                                               CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                               CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                               CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = c.T_FICHAS.DPTO ?? " ",
                                               EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                               EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                               FechaNacimiento = c.T_FICHAS.FER_NAC,
                                               Mail = c.T_FICHAS.MAIL,
                                               Manzana = c.T_FICHAS.MANZANA ?? " ",
                                               Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                               Nombre = c.T_FICHAS.NOMBRE,
                                               Numero = c.T_FICHAS.NUMERO,
                                               NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                               Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                               Piso = c.T_FICHAS.PISO ?? " ",
                                               Sexo = c.T_FICHAS.SEXO,
                                               TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                               TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                               TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                               TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                               IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                               NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               FichaVat =
                                                            new FichaVAT
                                                            {
                                                                AltaTemprana = fichaVat.ALTA_TEMPRANA,
                                                                AniosAportes = fichaVat.ANIOS_APORTES,
                                                                Finalizado = (fichaVat.FINALIZADO == "S" ? true : false),
                                                                Cursando = (fichaVat.CURSANDO == "S" ? true : false),
                                                                IdEmpresa = fichaVat.ID_EMPRESA,
                                                                IdNivelEscolaridad = fichaVat.ID_NIVEL_ESCOLARIDAD,
                                                                Modalidad = fichaVat.MODALIDAD,
                                                                IdSede = fichaVat.ID_SEDE,
                                                                Tareas = fichaVat.TAREAS,
                                                                FechaInicioActividad = fichaVat.AT_FECHA_INICIO,
                                                                FechaFinActividad = fichaVat.AT_FECHA_CESE,
                                                                IdModalidadAFIP = fichaVat.ID_MOD_CONT_AFIP,
                                                                ModalidadAFIP = fichaVat.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                                Empresa =
                                                                    new Empresa
                                                                    {
                                                                        Calle = fichaVat.T_EMPRESAS.CALLE,
                                                                        CantidadEmpleados = fichaVat.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                        CodigoActividad = fichaVat.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                        CodigoPostal = fichaVat.T_EMPRESAS.CODIGO_POSTAL,
                                                                        Cuit = fichaVat.T_EMPRESAS.CUIT,
                                                                        DomicilioLaboralIdem = fichaVat.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                        IdEmpresa = fichaVat.ID_EMPRESA ?? 0,
                                                                        NombreEmpresa = fichaVat.T_EMPRESAS.N_EMPRESA,
                                                                        Numero = fichaVat.T_EMPRESAS.NUMERO,
                                                                        Piso = fichaVat.T_EMPRESAS.PISO,
                                                                        Telefono = fichaVat.T_EMPRESAS.PISO,
                                                                        IdLocalidad = fichaVat.T_EMPRESAS.ID_LOCALIDAD,
                                                                        LocalidadEmpresa =
                                                                            new Localidad
                                                                            {
                                                                                IdLocalidad = fichaVat.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                NombreLocalidad = fichaVat.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                Departamento =
                                                                                    new Departamento
                                                                                    {
                                                                                        IdDepartamento =
                                                                                            fichaVat.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ??
                                                                                            0,
                                                                                        NombreDepartamento = fichaVat.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                    }
                                                                            },
                                                                        IdUsuario = fichaVat.T_EMPRESAS.ID_USUARIO,
                                                                        Usuario =
                                                                            new UsuarioEmpresa
                                                                            {
                                                                                ApellidoUsuario = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.APELLIDO,
                                                                                Cuil = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.CUIL,
                                                                                IdUsuarioEmpresa = fichaVat.T_EMPRESAS.ID_USUARIO ?? 0,
                                                                                Mail = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.MAIL,
                                                                                NombreUsuario = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.NOMBRE
                                                                            }
                                                                    }
                                                            },
                                               LocalidadFicha =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   }
                                           }
                                   });
                    return vat;
                case (int)Enums.Programas.ReconversionProductiva:
                    var reconversion = (from c in _mdb.T_BENEFICIARIOS
                               join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                               from fiterc in
                                   _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from fiUniv in
                                   _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from ficharecprod in
                                    _mdb.T_FICHA_REC_PROD.Where(ficharecprod => ficharecprod.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                        from ap in
                                   
                                            _mdb.T_APODERADOS.Where(
                                                ap =>
                                                ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                        from sucapo in
                                   _mdb.T_TABLAS_BCO_CBA.Where(
                                       sucapo =>
                                       sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                   DefaultIfEmpty()
                               where c.ID_PROGRAMA == idPrograma
                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA,
                                       Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                       MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       Notificado = c.NOTIFICADO == "S" ? true : false,
                                       Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                       SucursalDescripcion = suc.DESCRIPCION,
                                       FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                       IdSucursal = cu.ID_SUCURSAL,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       Apoderado =
                                           new Apoderado
                                           {
                                               IdApoderadoNullable = ap.ID_APODERADO,
                                               Nombre = ap.NOMBRE,
                                               Apellido = ap.APELLIDO,
                                               Barrio = ap.BARRIO,
                                               Calle = ap.CALLE,
                                               Cbu = ap.CBU,
                                               CodigoPostal = ap.CODIGO_POSTAL,
                                               Cuil = ap.CUIL,
                                               Dpto = ap.DPTO,
                                               EntreCalles = ap.ENTRECALLES,
                                               FechaNacimiento = ap.FER_NAC,
                                               FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                               IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                               IdSistema = ap.ID_SISTEMA ?? 0,
                                               IdSucursal = ap.ID_SUCURSAL_BCO,
                                               Mail = ap.MAIL,
                                               Numero = ap.NUMERO,
                                               IdLocalidad = ap.ID_LOCALIDAD,
                                               LocalidadApoderado =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   },
                                               Manzana = ap.MANZANA,
                                               Monoblock = ap.MONOBLOCK,
                                               NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                               NumeroDocumento = ap.NRO_DOCUMENTO,
                                               Parcela = ap.PARCELA,
                                               Piso = ap.PISO,
                                               Sexo = ap.SEXO,
                                               TelefonoCelular = ap.TEL_CELULAR,
                                               TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                               TelefonoFijo = ap.TEL_FIJO,
                                               UsuarioBanco = ap.USUARIO_BANCO,
                                               SucursalApoderado =
                                                   new Sucursal
                                                   {
                                                       CodigoBanco = sucapo.COD_BCO_CBA,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                       Detalle = sucapo.DESCRIPCION
                                                   }
                                           },
                                       Ficha =
                                           new Ficha
                                           {

                                               Apellido = c.T_FICHAS.APELLIDO,
                                               Barrio = c.T_FICHAS.BARRIO,
                                               Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                               IdFicha = c.T_FICHAS.ID_FICHA,
                                               Calle = c.T_FICHAS.CALLE,
                                               CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                               CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                               CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = c.T_FICHAS.DPTO ?? " ",
                                               EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                               EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                               FechaNacimiento = c.T_FICHAS.FER_NAC,
                                               Mail = c.T_FICHAS.MAIL,
                                               Manzana = c.T_FICHAS.MANZANA ?? " ",
                                               Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                               Nombre = c.T_FICHAS.NOMBRE,
                                               Numero = c.T_FICHAS.NUMERO,
                                               NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                               Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                               Piso = c.T_FICHAS.PISO ?? " ",
                                               Sexo = c.T_FICHAS.SEXO,
                                               TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                               TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                               TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                               TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                               IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                               NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               FichaReconversion = 
                                                   new FichaReconversion()
                                                   {
                                                       AltaTemprana = ficharecprod.ALTA_TEMPRANA,
                                                       IdEmpresa = ficharecprod.ID_EMPRESA,
                                                       Modalidad = ficharecprod.MODALIDAD,
                                                       IdSede = ficharecprod.ID_SEDE,
                                                       FechaInicioActividad = ficharecprod.AT_FECHA_INICIO,
                                                       FechaFinActividad = ficharecprod.AT_FECHA_CESE,
                                                       IdModalidadAfip = ficharecprod.ID_MOD_CONT_AFIP,
                                                       ModalidadAfip = ficharecprod.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                       IdSubprograma = ficharecprod.ID_SUBPROGRAMA,
                                                       Subprograma = ficharecprod.T_SUBPROGRAMAS.N_SUBPROGRAMA,
                                                       AportesDeLaEmpresa = ficharecprod.APORTES_EMP,
                                                       ApellidoTutor = ficharecprod.APELLIDO_TUTOR,
                                                       NombreTutor = ficharecprod.NOMBRE_TUTOR,
                                                       NroDocumentoTutor = ficharecprod.DNI_TUTOR,
                                                       PuestoTutor = ficharecprod.PUESTO_TUTOR,
                                                       Proyecto =
                                                       new Proyecto
                                                       {
                                                           IdProyecto = ficharecprod.T_PROYECTOS.ID_PROYECTO,
                                                           NombreProyecto = ficharecprod.T_PROYECTOS.N_PROYECTO,
                                                           CantidadAcapacitar = ficharecprod.T_PROYECTOS.CANT_CAPACITAR,
                                                           FechaInicioProyecto = ficharecprod.T_PROYECTOS.FEC_INICIO,
                                                           FechaFinProyecto = ficharecprod.T_PROYECTOS.FEC_FIN,
                                                           MesesDuracionProyecto = ficharecprod.T_PROYECTOS.MESES_DURAC
                                                       },
                                                       Sede =
                                                       new Sede
                                                       {
                                                           IdSede = ficharecprod.ID_SEDE ?? 0,
                                                           NombreSede = ficharecprod.T_SEDES.N_SEDE,
                                                           Calle = ficharecprod.T_SEDES.CALLE,
                                                           Numero = ficharecprod.T_SEDES.NUMERO,
                                                           Piso = ficharecprod.T_SEDES.PISO,
                                                           Dpto = ficharecprod.T_SEDES.DPTO,
                                                           CodigoPostal = ficharecprod.T_SEDES.CODIGO_POSTAL,
                                                           NombreLocalidad = ficharecprod.T_SEDES.T_LOCALIDADES.N_LOCALIDAD,
                                                           ApellidoContacto = ficharecprod.T_SEDES.APE_CONTACTO,
                                                           NombreContacto = ficharecprod.T_SEDES.NOM_CONTACTO,
                                                           Telefono = ficharecprod.T_SEDES.TELEFONO,
                                                           Fax = ficharecprod.T_SEDES.FAX,
                                                           Email = ficharecprod.T_SEDES.EMAIL
                                                       },
                                                       Empresa =
                                                           new Empresa
                                                           {
                                                               Calle = ficharecprod.T_EMPRESAS.CALLE,
                                                               CantidadEmpleados =
                                                                   ficharecprod.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                               CodigoActividad =
                                                                   ficharecprod.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                               CodigoPostal = ficharecprod.T_EMPRESAS.CODIGO_POSTAL,
                                                               Cuit = ficharecprod.T_EMPRESAS.CUIT,
                                                               DomicilioLaboralIdem =
                                                                   ficharecprod.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                               IdEmpresa = ficharecprod.ID_EMPRESA ?? 0,
                                                               NombreEmpresa = ficharecprod.T_EMPRESAS.N_EMPRESA,
                                                               Numero = ficharecprod.T_EMPRESAS.NUMERO,
                                                               Piso = ficharecprod.T_EMPRESAS.PISO,
                                                               Telefono = ficharecprod.T_EMPRESAS.PISO,
                                                               LocalidadEmpresa =
                                                                   new Localidad
                                                                   {
                                                                       IdLocalidad =
                                                                           ficharecprod.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                       NombreLocalidad =
                                                                           ficharecprod.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                       Departamento =
                                                                           new Departamento
                                                                           {
                                                                               IdDepartamento =
                                                                                   ficharecprod.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                               NombreDepartamento =
                                                                                   ficharecprod.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                                   N_DEPARTAMENTO
                                                                           }
                                                                   },
                                                               Usuario =
                                                                   new UsuarioEmpresa
                                                                   {
                                                                       ApellidoUsuario =
                                                                           ficharecprod.T_EMPRESAS.
                                                                           T_USUARIOS_EMPRESA.APELLIDO,
                                                                       Cuil =
                                                                           ficharecprod.T_EMPRESAS.
                                                                           T_USUARIOS_EMPRESA.CUIL,
                                                                       IdUsuarioEmpresa =
                                                                           ficharecprod.T_EMPRESAS.ID_USUARIO,
                                                                       Mail =
                                                                           ficharecprod.T_EMPRESAS.
                                                                           T_USUARIOS_EMPRESA.MAIL,
                                                                       NombreUsuario =
                                                                           ficharecprod.T_EMPRESAS.
                                                                           T_USUARIOS_EMPRESA.NOMBRE
                                                                   }
                                                           }
                                                   },
                                               LocalidadFicha =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                   N_DEPARTAMENTO
                                                           }
                                                   }
                                           }
                                   });
                    return reconversion;
                case (int)Enums.Programas.EfectoresSociales:
                    var efectores = (from c in _mdb.T_BENEFICIARIOS
                                        join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                        from fiterc in
                                            _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                        from fiUniv in
                                            _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                        from cu in
                                            _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                        from suc in
                                            _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                        from mon in
                                            _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                        from iva in
                                            _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                        from nac in
                                            _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                        from fichaefecsoc in
                                            _mdb.T_FICHA_EFEC_SOC.Where(fichaefecsoc => fichaefecsoc.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from ap in

                                         _mdb.T_APODERADOS.Where(
                                             ap =>
                                             ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                             ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                     from sucapo in
                                            _mdb.T_TABLAS_BCO_CBA.Where(
                                                sucapo =>
                                                sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                            DefaultIfEmpty()
                                        where c.ID_PROGRAMA == idPrograma
                                        select
                                            new Beneficiario
                                            {
                                                IdBeneficiario = c.ID_BENEFICIARIO,
                                                IdEstado = c.ID_ESTADO ?? 0,
                                                FechaSistema = c.FEC_SIST,
                                                IdFicha = c.ID_FICHA ?? 0,
                                                IdPrograma = c.ID_PROGRAMA ?? 0,
                                                IdUsuarioSistema = c.ID_USR_SIST,
                                                IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                                CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                                CondicionIva = iva.COD_BCO_CBA ?? "0",
                                                Nacionalidad = c.NACIONALIDAD ?? 0,
                                                Residente = c.RESIDENTE,
                                                TipoPersona = c.TIPO_PERSONA,
                                                CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                                CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                                NombreEstado = c.T_ESTADOS.N_ESTADO,
                                                Cbu = cu.CBU ?? "",
                                                ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                NumeroCuenta = cu.NRO_CTA,
                                                Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                                MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                TieneApoderado = c.TIENE_APODERADO,
                                                FechaNotificacion = c.FEC_NOTIF,
                                                Notificado = c.NOTIFICADO == "S" ? true : false,
                                                Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                                SucursalDescripcion = suc.DESCRIPCION,
                                                FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                                IdSucursal = cu.ID_SUCURSAL,
                                                UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                Apoderado =
                                                    new Apoderado
                                                    {
                                                        IdApoderadoNullable = ap.ID_APODERADO,
                                                        Nombre = ap.NOMBRE,
                                                        Apellido = ap.APELLIDO,
                                                        Barrio = ap.BARRIO,
                                                        Calle = ap.CALLE,
                                                        Cbu = ap.CBU,
                                                        CodigoPostal = ap.CODIGO_POSTAL,
                                                        Cuil = ap.CUIL,
                                                        Dpto = ap.DPTO,
                                                        EntreCalles = ap.ENTRECALLES,
                                                        FechaNacimiento = ap.FER_NAC,
                                                        FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                        IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                        IdSistema = ap.ID_SISTEMA ?? 0,
                                                        IdSucursal = ap.ID_SUCURSAL_BCO,
                                                        Mail = ap.MAIL,
                                                        Numero = ap.NUMERO,
                                                        IdLocalidad = ap.ID_LOCALIDAD,
                                                        LocalidadApoderado =
                                                            new Localidad
                                                            {
                                                                IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                                NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                                Departamento =
                                                                    new Departamento
                                                                    {
                                                                        IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                        NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                    }
                                                            },
                                                        Manzana = ap.MANZANA,
                                                        Monoblock = ap.MONOBLOCK,
                                                        NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                        NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                        NumeroDocumento = ap.NRO_DOCUMENTO,
                                                        Parcela = ap.PARCELA,
                                                        Piso = ap.PISO,
                                                        Sexo = ap.SEXO,
                                                        TelefonoCelular = ap.TEL_CELULAR,
                                                        TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                        TelefonoFijo = ap.TEL_FIJO,
                                                        UsuarioBanco = ap.USUARIO_BANCO,
                                                        SucursalApoderado =
                                                            new Sucursal
                                                            {
                                                                CodigoBanco = sucapo.COD_BCO_CBA,
                                                                IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                                Detalle = sucapo.DESCRIPCION
                                                            }
                                                    },
                                                Ficha =
                                                    new Ficha
                                                    {

                                                        Apellido = c.T_FICHAS.APELLIDO,
                                                        Barrio = c.T_FICHAS.BARRIO,
                                                        Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                        IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                        IdFicha = c.T_FICHAS.ID_FICHA,
                                                        Calle = c.T_FICHAS.CALLE,
                                                        CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                        CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                        CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                        Contacto = c.T_FICHAS.CONTACTO,
                                                        Cuil = c.T_FICHAS.CUIL,
                                                        DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                        TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                        TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                        TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                        TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                        Dpto = c.T_FICHAS.DPTO ?? " ",
                                                        EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                        EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                        EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                        FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                        Mail = c.T_FICHAS.MAIL,
                                                        Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                        Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                        Nombre = c.T_FICHAS.NOMBRE,
                                                        Numero = c.T_FICHAS.NUMERO,
                                                        NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                        Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                        Piso = c.T_FICHAS.PISO ?? " ",
                                                        Sexo = c.T_FICHAS.SEXO,
                                                        TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                        TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                        TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                        TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                        TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                        IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                        NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                        FechaSistema = c.FEC_SIST,
                                                        IdUsuarioSistema = c.ID_USR_SIST,
                                                        UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                        FichaEfectores = 
                                                            new FichaEfectoresSociales()
                                                            {
                                                                AltaTemprana = fichaefecsoc.ALTA_TEMPRANA,
                                                                IdEmpresa = fichaefecsoc.ID_EMPRESA,
                                                                Modalidad = fichaefecsoc.MODALIDAD,
                                                                IdSede = fichaefecsoc.ID_SEDE,
                                                                FechaInicioActividad = fichaefecsoc.AT_FECHA_INICIO,
                                                                FechaFinActividad = fichaefecsoc.AT_FECHA_CESE,
                                                                IdModalidadAfip = fichaefecsoc.ID_MOD_CONT_AFIP,
                                                                ModalidadAfip = fichaefecsoc.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                                IdSubprograma = fichaefecsoc.ID_SUBPROGRAMA,
                                                                Subprograma = fichaefecsoc.T_SUBPROGRAMAS.N_SUBPROGRAMA,
                                                                AportesDeLaEmpresa = fichaefecsoc.APORTES_EMP,
                                                                ApellidoTutor = fichaefecsoc.APELLIDO_TUTOR,
                                                                NombreTutor = fichaefecsoc.NOMBRE_TUTOR,
                                                                NroDocumentoTutor = fichaefecsoc.DNI_TUTOR,
                                                                PuestoTutor = fichaefecsoc.PUESTO_TUTOR,
                                                                Proyecto =
                                                                new Proyecto
                                                                {
                                                                    IdProyecto = fichaefecsoc.T_PROYECTOS.ID_PROYECTO,
                                                                    NombreProyecto = fichaefecsoc.T_PROYECTOS.N_PROYECTO,
                                                                    CantidadAcapacitar = fichaefecsoc.T_PROYECTOS.CANT_CAPACITAR,
                                                                    FechaInicioProyecto = fichaefecsoc.T_PROYECTOS.FEC_INICIO,
                                                                    FechaFinProyecto = fichaefecsoc.T_PROYECTOS.FEC_FIN,
                                                                    MesesDuracionProyecto = fichaefecsoc.T_PROYECTOS.MESES_DURAC
                                                                },
                                                                Sede =
                                                                new Sede
                                                                {
                                                                    IdSede = fichaefecsoc.ID_SEDE ?? 0,
                                                                    NombreSede = fichaefecsoc.T_SEDES.N_SEDE,
                                                                    Calle = fichaefecsoc.T_SEDES.CALLE,
                                                                    Numero = fichaefecsoc.T_SEDES.NUMERO,
                                                                    Piso = fichaefecsoc.T_SEDES.PISO,
                                                                    Dpto = fichaefecsoc.T_SEDES.DPTO,
                                                                    CodigoPostal = fichaefecsoc.T_SEDES.CODIGO_POSTAL,
                                                                    NombreLocalidad = fichaefecsoc.T_SEDES.T_LOCALIDADES.N_LOCALIDAD,
                                                                    ApellidoContacto = fichaefecsoc.T_SEDES.APE_CONTACTO,
                                                                    NombreContacto = fichaefecsoc.T_SEDES.NOM_CONTACTO,
                                                                    Telefono = fichaefecsoc.T_SEDES.TELEFONO,
                                                                    Fax = fichaefecsoc.T_SEDES.FAX,
                                                                    Email = fichaefecsoc.T_SEDES.EMAIL
                                                                },
                                                                Empresa =
                                                                    new Empresa
                                                                    {
                                                                        Calle = fichaefecsoc.T_EMPRESAS.CALLE,
                                                                        CantidadEmpleados =
                                                                            fichaefecsoc.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                        CodigoActividad =
                                                                            fichaefecsoc.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                        CodigoPostal = fichaefecsoc.T_EMPRESAS.CODIGO_POSTAL,
                                                                        Cuit = fichaefecsoc.T_EMPRESAS.CUIT,
                                                                        DomicilioLaboralIdem =
                                                                            fichaefecsoc.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                        IdEmpresa = fichaefecsoc.ID_EMPRESA ?? 0,
                                                                        NombreEmpresa = fichaefecsoc.T_EMPRESAS.N_EMPRESA,
                                                                        Numero = fichaefecsoc.T_EMPRESAS.NUMERO,
                                                                        Piso = fichaefecsoc.T_EMPRESAS.PISO,
                                                                        Telefono = fichaefecsoc.T_EMPRESAS.PISO,
                                                                        LocalidadEmpresa =
                                                                            new Localidad
                                                                            {
                                                                                IdLocalidad =
                                                                                    fichaefecsoc.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                NombreLocalidad =
                                                                                    fichaefecsoc.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                Departamento =
                                                                                    new Departamento
                                                                                    {
                                                                                        IdDepartamento =
                                                                                            fichaefecsoc.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                        NombreDepartamento =
                                                                                            fichaefecsoc.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                                            N_DEPARTAMENTO
                                                                                    }
                                                                            },
                                                                        Usuario =
                                                                            new UsuarioEmpresa
                                                                            {
                                                                                ApellidoUsuario =
                                                                                    fichaefecsoc.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.APELLIDO,
                                                                                Cuil =
                                                                                    fichaefecsoc.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.CUIL,
                                                                                IdUsuarioEmpresa =
                                                                                    fichaefecsoc.T_EMPRESAS.ID_USUARIO,
                                                                                Mail =
                                                                                    fichaefecsoc.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.MAIL,
                                                                                NombreUsuario =
                                                                                    fichaefecsoc.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.NOMBRE
                                                                            }
                                                                    }
                                                            },
                                                        LocalidadFicha =
                                                            new Localidad
                                                            {
                                                                IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                                NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                Departamento =
                                                                    new Departamento
                                                                    {
                                                                        IdDepartamento =
                                                                            c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                        NombreDepartamento =
                                                                            c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                            N_DEPARTAMENTO
                                                                    }
                                                            }
                                                    }
                                            });
                    return efectores;
                default:
                    return null;
            }
        }

        private IEnumerable<IBeneficiario> QBeneficiarioSinCuentasByFechaSol(DateTime fecha)
        {

            var a = (from c in _mdb.T_BENEFICIARIOS
                     join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                     from cu in
                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO && cu.FEC_SOL_CTA == fecha).DefaultIfEmpty()
                     from suc in
                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                     from mon in
                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                     from iva in
                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                     from nac in
                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                     from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO && ap.FEC_SOL_CTA == fecha && ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                     where

                         (
                             (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null &&
                              cu.NRO_CTA == null)
                             ||
                             (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null &&
                              ap.NRO_CUENTA_BCO == null)
                         )
                     select
                         new Beneficiario
                         {
                             IdBeneficiario = c.ID_BENEFICIARIO,
                             IdEstado = c.ID_ESTADO ?? 0,
                             FechaSistema = c.FEC_SIST,
                             IdFicha = c.ID_FICHA ?? 0,
                             IdPrograma = c.ID_PROGRAMA ?? 0,
                             IdUsuarioSistema = c.ID_USR_SIST,
                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                             CondicionIva = "01",
                             Nacionalidad = c.NACIONALIDAD ?? 0,
                             Residente = c.RESIDENTE,
                             TipoPersona = c.TIPO_PERSONA,
                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                             CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                             Cbu = cu.CBU ?? "",
                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                             NumeroCuenta = cu.NRO_CTA ?? 0,
                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                             TieneApoderado = c.TIENE_APODERADO,
                             Modalidad = (c.T_FICHAS.T_FICHA_PPP.MODALIDAD ?? 0) == 1 ? "E" : "C",
                             AltaTemprana = c.T_FICHAS.T_FICHA_PPP.ALTA_TEMPRANA == null ? "N" : "S",
                             FechaSolicitudCuenta = cu.FEC_SOL_CTA == null ? ap.FEC_SOL_CTA : cu.FEC_SOL_CTA,
                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                             Apoderado = new Apoderado { Apellido = ap.APELLIDO ?? " ", Nombre = ap.NOMBRE ?? " ", NumeroDocumento = ap.NRO_DOCUMENTO ?? " " },
                             FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                             FechaBajaBeneficio = c.FEC_BAJA,

                             Ficha =
                                 new Ficha
                                 {
                                     Apellido = c.T_FICHAS.APELLIDO,
                                     Barrio = c.T_FICHAS.BARRIO,
                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                     Calle = (c.T_FICHAS.CALLE ?? "").Trim(),
                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                     Contacto = c.T_FICHAS.CONTACTO,
                                     Cuil = c.T_FICHAS.CUIL,
                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                     TieneDeficienciaMental =
                                         c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                     TieneDeficienciaMotora =
                                         c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                     TieneDeficienciaPsicologia =
                                         c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                     TieneDeficienciaSensorial =
                                         c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                     Dpto = c.T_FICHAS.DPTO ?? "0",
                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                     Mail = c.T_FICHAS.MAIL,
                                     Manzana = c.T_FICHAS.MANZANA ?? "0",
                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? "0",
                                     Nombre = c.T_FICHAS.NOMBRE,
                                     Numero = c.T_FICHAS.NUMERO ?? "0",
                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? "" : c.T_FICHAS.PARCELA) ?? " ",
                                     Piso = c.T_FICHAS.PISO ?? "0",
                                     Sexo = c.T_FICHAS.SEXO,
                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                     FechaSistema = c.FEC_SIST,
                                     IdUsuarioSistema = c.ID_USR_SIST,
                                     UsuarioSistema = c.T_USUARIOS.LOGIN
                                 }
                         });
            return a;
        }

        private IEnumerable<IBeneficiario> QBeneficiarioExportarArt(int idPrograma, DateTime fecInicioBenef, DateTime fecBenefHasta)
        {
            switch (idPrograma)
            {
                #region "case (int) Enums.Programas.Ppp:"
                case (int) Enums.Programas.Ppp:
                    var beneficiariosPpp = (from c in _mdb.T_BENEFICIARIOS
                                            join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                            from fiterc in
                                                _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                            from fiUniv in
                                                _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                            from cu in
                                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                            from suc in
                                                _mdb.T_TABLAS_BCO_CBA.Where(
                                                    suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                            from mon in
                                                _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                            from iva in
                                                _mdb.T_TABLAS_BCO_CBA.Where(
                                                    iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                            from nac in
                                                _mdb.T_TABLAS_BCO_CBA.Where(
                                                    nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                            from fichappp in
                                                _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                                            from ap in
                                                _mdb.T_APODERADOS.Where(ap =>ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO && ap.ID_ESTADO_APODERADO == (short) Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                            from sucapo in
                                                _mdb.T_TABLAS_BCO_CBA.Where(sucapo =>sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int) Enums.TiposTablaBcoCba.Sucursales).DefaultIfEmpty()

                                            where c.FEC_INICIO >= fecInicioBenef // 24/06/2013 - DI CAMPLI LEANDRO - AGREGAR FILTROS 
                                                  && c.FEC_INICIO <= fecBenefHasta   // 24/06/2013 - DI CAMPLI LEANDRO - AGREGAR FILTROS 
                                            select
                                                new Beneficiario
                                                    {
                                                        IdBeneficiario = c.ID_BENEFICIARIO,
                                                        IdEstado = c.ID_ESTADO ?? 0,
                                                        FechaSistema = c.FEC_SIST,
                                                        IdFicha = c.ID_FICHA ?? 0,
                                                        IdPrograma = c.ID_PROGRAMA ?? 0,
                                                        IdUsuarioSistema = c.ID_USR_SIST,
                                                        IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                        NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                        CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                                        CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                                        CondicionIva = iva.COD_BCO_CBA ?? "0",
                                                        Nacionalidad = c.NACIONALIDAD ?? 0,
                                                        Residente = c.RESIDENTE,
                                                        TipoPersona = c.TIPO_PERSONA,
                                                        CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                                        CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                                        NombreEstado = c.T_ESTADOS.N_ESTADO,
                                                        Cbu = cu.CBU ?? "",
                                                        ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                        NumeroCuenta = cu.NRO_CTA,
                                                        Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                                        MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                        TieneApoderado = c.TIENE_APODERADO,
                                                        FechaNotificacion = c.FEC_NOTIF,
                                                        Notificado = c.NOTIFICADO == "S" ? true : false,
                                                        Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                                        SucursalDescripcion = suc.DESCRIPCION,
                                                        FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                                        IdSucursal = cu.ID_SUCURSAL,
                                                        UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                        Ficha =
                                                            new Ficha
                                                                {
                                                                    Apellido = c.T_FICHAS.APELLIDO,
                                                                    Barrio = c.T_FICHAS.BARRIO,
                                                                    Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                    IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                                    IdFicha = c.T_FICHAS.ID_FICHA,
                                                                    Calle = c.T_FICHAS.CALLE,
                                                                    CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                                    Cuil = c.T_FICHAS.CUIL,
                                                                    EsDiscapacitado =
                                                                        c.T_FICHAS.ES_DISCAPACITADO == "S"
                                                                            ? true
                                                                            : false,
                                                                    Dpto = c.T_FICHAS.DPTO ?? " ",
                                                                    FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                                    Mail = c.T_FICHAS.MAIL,
                                                                    Nombre = c.T_FICHAS.NOMBRE,
                                                                    Numero = c.T_FICHAS.NUMERO,
                                                                    NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                                    Piso = c.T_FICHAS.PISO ?? " ",
                                                                    TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                                    TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                                    IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                                    NombreEstadoFicha =
                                                                        c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                                    FechaSistema = c.FEC_SIST,
                                                                    IdUsuarioSistema = c.ID_USR_SIST,
                                                                    UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                                    FichaPpp =
                                                                        new FichaPPP
                                                                            {
                                                                                IdEmpresa = fichappp.ID_EMPRESA,
                                                                                IdNivelEscolaridad =fichappp.ID_NIVEL_ESCOLARIDAD,
                                                                                Modalidad = fichappp.MODALIDAD,
                                                                                IdSede = fichappp.ID_SEDE,
                                                                                Sede =
                                                                                    new Sede
                                                                                        {
                                                                                            Calle =fichappp.T_SEDES.CALLE,
                                                                                            Numero =fichappp.T_SEDES.NUMERO,
                                                                                            Piso = fichappp.T_SEDES.PISO,
                                                                                            Dpto = fichappp.T_SEDES.DPTO,
                                                                                            CodigoPostal =fichappp.T_SEDES.CODIGO_POSTAL,
                                                                                            IdLocalidad =fichappp.T_SEDES.ID_LOCALIDAD,
                                                                                            NombreLocalidad =fichappp.T_SEDES.T_LOCALIDADES.N_LOCALIDAD
                                                                                        },
                                                                                Empresa =
                                                                                    new Empresa
                                                                                        {
                                                                                            Calle =fichappp.T_EMPRESAS.CALLE,
                                                                                            CodigoPostal =fichappp.T_EMPRESAS.CODIGO_POSTAL,
                                                                                            Cuit =fichappp.T_EMPRESAS.CUIT,
                                                                                            DomicilioLaboralIdem =fichappp.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                                            IdEmpresa =fichappp.ID_EMPRESA ?? 0,
                                                                                            NombreEmpresa =fichappp.T_EMPRESAS.N_EMPRESA,
                                                                                            Numero =fichappp.T_EMPRESAS.NUMERO,
                                                                                            Piso =fichappp.T_EMPRESAS.PISO,
                                                                                            Telefono =fichappp.T_EMPRESAS.PISO,
                                                                                            IdLocalidad =fichappp.T_EMPRESAS.ID_LOCALIDAD,
                                                                                            LocalidadEmpresa =
                                                                                                new Localidad
                                                                                                    {
                                                                                                        IdLocalidad =fichappp.T_EMPRESAS.ID_LOCALIDAD ??0,
                                                                                                        NombreLocalidad=fichappp.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                                        Departamento =
                                                                                                            new Departamento
                                                                                                                {
                                                                                                                    IdDepartamento=fichappp.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ??0,
                                                                                                                    NombreDepartamento=fichappp.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                                                }
                                                                                                    }
                                                                                        }

                                                                            },
                                                                    LocalidadFicha =
                                                                        new Localidad
                                                                            {
                                                                                IdLocalidad =c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                                                NombreLocalidad =c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                Departamento =
                                                                                    new Departamento
                                                                                        {
                                                                                            IdDepartamento =c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ??0,
                                                                                            NombreDepartamento =c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                        }
                                                                            }
                                                                }
                                                    }).OrderBy(x => new {x.IdFicha});
                    return beneficiariosPpp;
                #endregion

                #region "case (int) Enums.Programas.ReconversionProductiva:"
                case (int) Enums.Programas.ReconversionProductiva:
                    var beneficiariosReconversion = (from c in _mdb.T_BENEFICIARIOS
                                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                                     from fiterc 
                                                         in _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                                     from fiUniv in
                                                         _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                                     from cu in
                                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                                     from suc in
                                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                                     from mon in
                                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                                     from iva in
                                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                                     from nac in
                                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                                     from fichareconversion in
                                                         _mdb.T_FICHA_REC_PROD.Where(fichareconversion =>fichareconversion.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                                                     from ap in
                                                         _mdb.T_APODERADOS.Where(ap =>ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&ap.ID_ESTADO_APODERADO ==(short) Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                                     from sucapo in
                                                         _mdb.T_TABLAS_BCO_CBA.Where(sucapo =>sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int) Enums.TiposTablaBcoCba.Sucursales).DefaultIfEmpty()
                                                     where c.FEC_INICIO >= fecInicioBenef // 24/06/2013 - DI CAMPLI LEANDRO - AGREGAR FILTROS 
                                                            && c.FEC_INICIO <= fecBenefHasta   // 24/06/2013 - DI CAMPLI LEANDRO - AGREGAR FILTROS 
                                                     select
                                                         new Beneficiario
                                                             {
                                                                 IdBeneficiario = c.ID_BENEFICIARIO,
                                                                 IdEstado = c.ID_ESTADO ?? 0,
                                                                 FechaSistema = c.FEC_SIST,
                                                                 IdFicha = c.ID_FICHA ?? 0,
                                                                 IdPrograma = c.ID_PROGRAMA ?? 0,
                                                                 IdUsuarioSistema = c.ID_USR_SIST,
                                                                 IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                                 NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                                 CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                                                 CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                                                 CondicionIva = iva.COD_BCO_CBA ?? "0",
                                                                 Nacionalidad = c.NACIONALIDAD ?? 0,
                                                                 Residente = c.RESIDENTE,
                                                                 TipoPersona = c.TIPO_PERSONA,
                                                                 CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                                                 CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                                                 NombreEstado = c.T_ESTADOS.N_ESTADO,
                                                                 Cbu = cu.CBU ?? "",
                                                                 ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                                 NumeroCuenta = cu.NRO_CTA,
                                                                 Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                                                 MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                                 TieneApoderado = c.TIENE_APODERADO,
                                                                 FechaNotificacion = c.FEC_NOTIF,
                                                                 Notificado = c.NOTIFICADO == "S" ? true : false,
                                                                 Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                                                 SucursalDescripcion = suc.DESCRIPCION,
                                                                 FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                                                 IdSucursal = cu.ID_SUCURSAL,
                                                                 UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                                 Ficha =
                                                                     new Ficha
                                                                         {
                                                                             Apellido = c.T_FICHAS.APELLIDO,
                                                                             Barrio = c.T_FICHAS.BARRIO,
                                                                             Localidad =c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                                             IdFicha = c.T_FICHAS.ID_FICHA,
                                                                             Calle = c.T_FICHAS.CALLE,
                                                                             CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                                             Cuil = c.T_FICHAS.CUIL,
                                                                             EsDiscapacitado =c.T_FICHAS.ES_DISCAPACITADO == "S"? true: false,
                                                                             Dpto = c.T_FICHAS.DPTO ?? " ",
                                                                             FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                                             Mail = c.T_FICHAS.MAIL,
                                                                             Nombre = c.T_FICHAS.NOMBRE,
                                                                             Numero = c.T_FICHAS.NUMERO,
                                                                             NumeroDocumento =c.T_FICHAS.NUMERO_DOCUMENTO,
                                                                             Piso = c.T_FICHAS.PISO ?? " ",
                                                                             TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                                             TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                                             IdEstadoFicha =c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                                             NombreEstadoFicha =c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                                             FechaSistema = c.FEC_SIST,
                                                                             IdUsuarioSistema = c.ID_USR_SIST,
                                                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                                             FichaReconversion =
                                                                                 new FichaReconversion()
                                                                                     {
                                                                                         IdEmpresa =fichareconversion.ID_EMPRESA,
                                                                                         IdNivelEscolaridad =fichareconversion.ID_NIVEL_ESCOLARIDAD,
                                                                                         Modalidad =fichareconversion.MODALIDAD,
                                                                                         IdSede =fichareconversion.ID_SEDE,
                                                                                         Sede =
                                                                                             new Sede
                                                                                                 {
                                                                                                     Calle =fichareconversion.T_SEDES.CALLE,
                                                                                                     Numero =fichareconversion.T_SEDES.NUMERO,
                                                                                                     Piso =fichareconversion.T_SEDES.PISO,
                                                                                                     Dpto =fichareconversion.T_SEDES.DPTO,
                                                                                                     CodigoPostal =fichareconversion.T_SEDES.CODIGO_POSTAL,
                                                                                                     IdLocalidad =fichareconversion.T_SEDES.ID_LOCALIDAD,
                                                                                                     NombreLocalidad =fichareconversion.T_SEDES.T_LOCALIDADES.N_LOCALIDAD
                                                                                                 },
                                                                                         Empresa =
                                                                                             new Empresa
                                                                                                 {
                                                                                                     Calle =fichareconversion.T_EMPRESAS.CALLE,
                                                                                                     CodigoPostal =fichareconversion.T_EMPRESAS.CODIGO_POSTAL,
                                                                                                     Cuit =fichareconversion.T_EMPRESAS.CUIT,
                                                                                                     DomicilioLaboralIdem=fichareconversion.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                                                     IdEmpresa =fichareconversion.ID_EMPRESA ?? 0,
                                                                                                     NombreEmpresa =fichareconversion.T_EMPRESAS.N_EMPRESA,
                                                                                                     Numero =fichareconversion.T_EMPRESAS.NUMERO,
                                                                                                     Piso =fichareconversion.T_EMPRESAS.PISO,
                                                                                                     Telefono =fichareconversion.T_EMPRESAS.PISO,
                                                                                                     IdLocalidad =fichareconversion.T_EMPRESAS.ID_LOCALIDAD,
                                                                                                     LocalidadEmpresa =
                                                                                                         new Localidad
                                                                                                             {
                                                                                                                 IdLocalidad=fichareconversion.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                                                 NombreLocalidad =fichareconversion.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                                                 Departamento=
                                                                                                                     new Departamento
                                                                                                                         {
                                                                                                                             IdDepartamento=fichareconversion.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ??0,
                                                                                                                             NombreDepartamento=fichareconversion.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                                                         }
                                                                                                             }
                                                                                                 }
                                                                                     },
                                                                             LocalidadFicha =
                                                                                 new Localidad
                                                                                     {
                                                                                         IdLocalidad =c.T_FICHAS.ID_LOCALIDAD ??0,
                                                                                         NombreLocalidad =c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                         Departamento =
                                                                                             new Departamento
                                                                                                 {
                                                                                                     IdDepartamento =c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                                     NombreDepartamento=c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                                 }
                                                                                     }
                                                                         }
                                                             }).OrderBy(x => new {x.IdFicha});
                    return beneficiariosReconversion;
                #endregion
                #region "case (int) Enums.Programas.EfectoresSociales:"
                case (int)Enums.Programas.EfectoresSociales:
                    var beneficiariosEfectores = (from c in _mdb.T_BENEFICIARIOS
                                            join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                            from fiterc in
                                                _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                            from fiUniv in
                                                _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                            from cu in
                                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                            from suc in
                                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                            from mon in
                                                _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                            from iva in
                                                _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                            from nac in
                                                _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                            from fichaefectores in
                                                      _mdb.T_FICHA_EFEC_SOC.Where(fichaefectores => fichaefectores.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                                            from ap in
                                                _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO && ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                            from sucapo in
                                                _mdb.T_TABLAS_BCO_CBA.Where(sucapo => sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).DefaultIfEmpty()
                                                  where c.FEC_INICIO >= fecInicioBenef // 24/06/2013 - DI CAMPLI LEANDRO - AGREGAR FILTROS 
                                                    && c.FEC_INICIO <= fecBenefHasta   // 24/06/2013 - DI CAMPLI LEANDRO - AGREGAR FILTROS 
                                            select
                                                new Beneficiario
                                                {
                                                    IdBeneficiario = c.ID_BENEFICIARIO,
                                                    IdEstado = c.ID_ESTADO ?? 0,
                                                    FechaSistema = c.FEC_SIST,
                                                    IdFicha = c.ID_FICHA ?? 0,
                                                    IdPrograma = c.ID_PROGRAMA ?? 0,
                                                    IdUsuarioSistema = c.ID_USR_SIST,
                                                    IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                    NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                    CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                                    CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                                    CondicionIva = iva.COD_BCO_CBA ?? "0",
                                                    Nacionalidad = c.NACIONALIDAD ?? 0,
                                                    Residente = c.RESIDENTE,
                                                    TipoPersona = c.TIPO_PERSONA,
                                                    CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                                    CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                                    NombreEstado = c.T_ESTADOS.N_ESTADO,
                                                    Cbu = cu.CBU ?? "",
                                                    ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                    NumeroCuenta = cu.NRO_CTA,
                                                    Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                                    MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                    TieneApoderado = c.TIENE_APODERADO,
                                                    FechaNotificacion = c.FEC_NOTIF,
                                                    Notificado = c.NOTIFICADO == "S" ? true : false,
                                                    Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                                    SucursalDescripcion = suc.DESCRIPCION,
                                                    FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                                    IdSucursal = cu.ID_SUCURSAL,
                                                    UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                    Ficha =
                                                        new Ficha
                                                        {
                                                            Apellido = c.T_FICHAS.APELLIDO,
                                                            Barrio = c.T_FICHAS.BARRIO,
                                                            Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                            IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                            IdFicha = c.T_FICHAS.ID_FICHA,
                                                            Calle = c.T_FICHAS.CALLE,
                                                            CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                            Cuil = c.T_FICHAS.CUIL,
                                                            EsDiscapacitado =c.T_FICHAS.ES_DISCAPACITADO == "S"? true: false,
                                                            Dpto = c.T_FICHAS.DPTO ?? " ",
                                                            FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                            Mail = c.T_FICHAS.MAIL,
                                                            Nombre = c.T_FICHAS.NOMBRE,
                                                            Numero = c.T_FICHAS.NUMERO,
                                                            NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                            Piso = c.T_FICHAS.PISO ?? " ",
                                                            TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                            TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                            IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                            NombreEstadoFicha =c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                            FechaSistema = c.FEC_SIST,
                                                            IdUsuarioSistema = c.ID_USR_SIST,
                                                            UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                            FichaEfectores = 
                                                                new FichaEfectoresSociales
                                                                {
                                                                    IdEmpresa = fichaefectores.ID_EMPRESA,
                                                                    IdNivelEscolaridad = fichaefectores.ID_NIVEL_ESCOLARIDAD,
                                                                    Modalidad = fichaefectores.MODALIDAD,
                                                                    IdSede = fichaefectores.ID_SEDE,
                                                                    Sede =
                                                                        new Sede
                                                                        {
                                                                            Calle = fichaefectores.T_SEDES.CALLE,
                                                                            Numero = fichaefectores.T_SEDES.NUMERO,
                                                                            Piso = fichaefectores.T_SEDES.PISO,
                                                                            Dpto = fichaefectores.T_SEDES.DPTO,
                                                                            CodigoPostal = fichaefectores.T_SEDES.CODIGO_POSTAL,
                                                                            IdLocalidad = fichaefectores.T_SEDES.ID_LOCALIDAD,
                                                                            NombreLocalidad = fichaefectores.T_SEDES.T_LOCALIDADES.N_LOCALIDAD
                                                                        },
                                                                    Empresa =
                                                                        new Empresa
                                                                        {
                                                                            Calle = fichaefectores.T_EMPRESAS.CALLE,
                                                                            CodigoPostal = fichaefectores.T_EMPRESAS.CODIGO_POSTAL,
                                                                            Cuit = fichaefectores.T_EMPRESAS.CUIT,
                                                                            DomicilioLaboralIdem = fichaefectores.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                            IdEmpresa = fichaefectores.ID_EMPRESA ?? 0,
                                                                            NombreEmpresa = fichaefectores.T_EMPRESAS.N_EMPRESA,
                                                                            Numero = fichaefectores.T_EMPRESAS.NUMERO,
                                                                            Piso = fichaefectores.T_EMPRESAS.PISO,
                                                                            Telefono = fichaefectores.T_EMPRESAS.PISO,
                                                                            IdLocalidad = fichaefectores.T_EMPRESAS.ID_LOCALIDAD,
                                                                            LocalidadEmpresa =
                                                                                new Localidad
                                                                                {
                                                                                    IdLocalidad = fichaefectores.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                    NombreLocalidad = fichaefectores.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                    Departamento =
                                                                                        new Departamento
                                                                                        {
                                                                                            IdDepartamento = fichaefectores.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                            NombreDepartamento = fichaefectores.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                        }
                                                                                }
                                                                        }

                                                                },
                                                            LocalidadFicha =
                                                                new Localidad
                                                                {
                                                                    IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                                    NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                    Departamento =
                                                                        new Departamento
                                                                        {
                                                                            IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                            NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                        }
                                                                }
                                                        }
                                                }).OrderBy(x => new { x.IdFicha });
                    return beneficiariosEfectores;
                #endregion

                #region "case (int) Enums.Programas.PppProf:"
                case (int)Enums.Programas.PppProf:
                    var beneficiariosPppProf = (from c in _mdb.T_BENEFICIARIOS
                                            join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                            from fiterc in
                                                _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                            from fiUniv in
                                                _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                            from cu in
                                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                            from suc in
                                                _mdb.T_TABLAS_BCO_CBA.Where(
                                                    suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                            from mon in
                                                _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                            from iva in
                                                _mdb.T_TABLAS_BCO_CBA.Where(
                                                    iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                            from nac in
                                                _mdb.T_TABLAS_BCO_CBA.Where(
                                                    nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                            from fichapppProf in
                                                    _mdb.T_FICHA_PPP_PROF.Where(fichapppProf => fichapppProf.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                                            from ap in
                                                _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO && ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                            from sucapo in
                                                _mdb.T_TABLAS_BCO_CBA.Where(sucapo => sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).DefaultIfEmpty()

                                                where c.FEC_INICIO >= fecInicioBenef // 24/06/2013 - DI CAMPLI LEANDRO - AGREGAR FILTROS 
                                                      && c.FEC_INICIO <= fecBenefHasta   // 24/06/2013 - DI CAMPLI LEANDRO - AGREGAR FILTROS 


                                            select
                                                new Beneficiario
                                                {
                                                    IdBeneficiario = c.ID_BENEFICIARIO,
                                                    IdEstado = c.ID_ESTADO ?? 0,
                                                    FechaSistema = c.FEC_SIST,
                                                    IdFicha = c.ID_FICHA ?? 0,
                                                    IdPrograma = c.ID_PROGRAMA ?? 0,
                                                    IdUsuarioSistema = c.ID_USR_SIST,
                                                    IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                    NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                    CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                                    CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                                    CondicionIva = iva.COD_BCO_CBA ?? "0",
                                                    Nacionalidad = c.NACIONALIDAD ?? 0,
                                                    Residente = c.RESIDENTE,
                                                    TipoPersona = c.TIPO_PERSONA,
                                                    CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                                    CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                                    NombreEstado = c.T_ESTADOS.N_ESTADO,
                                                    Cbu = cu.CBU ?? "",
                                                    ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                    NumeroCuenta = cu.NRO_CTA,
                                                    Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                                    MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                    TieneApoderado = c.TIENE_APODERADO,
                                                    FechaNotificacion = c.FEC_NOTIF,
                                                    Notificado = c.NOTIFICADO == "S" ? true : false,
                                                    Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                                    SucursalDescripcion = suc.DESCRIPCION,
                                                    FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                                    IdSucursal = cu.ID_SUCURSAL,
                                                    UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                    Ficha =
                                                        new Ficha
                                                        {
                                                            Apellido = c.T_FICHAS.APELLIDO,
                                                            Barrio = c.T_FICHAS.BARRIO,
                                                            Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                            IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                            IdFicha = c.T_FICHAS.ID_FICHA,
                                                            Calle = c.T_FICHAS.CALLE,
                                                            CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                            Cuil = c.T_FICHAS.CUIL,
                                                            EsDiscapacitado =
                                                                c.T_FICHAS.ES_DISCAPACITADO == "S"
                                                                    ? true
                                                                    : false,
                                                            Dpto = c.T_FICHAS.DPTO ?? " ",
                                                            FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                            Mail = c.T_FICHAS.MAIL,
                                                            Nombre = c.T_FICHAS.NOMBRE,
                                                            Numero = c.T_FICHAS.NUMERO,
                                                            NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                            Piso = c.T_FICHAS.PISO ?? " ",
                                                            TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                            TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                            IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                            NombreEstadoFicha =
                                                                c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                            FechaSistema = c.FEC_SIST,
                                                            IdUsuarioSistema = c.ID_USR_SIST,
                                                            UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                            FichaPppp = 
                                                                new FichaPPPP
                                                                {
                                                                    IdEmpresa = fichapppProf.ID_EMPRESA,
                                                                   // IdNivelEscolaridad = fichapppProf.ID_NIVEL_ESCOLARIDAD,
                                                                    Modalidad = fichapppProf.MODALIDAD,
                                                                    IdSede = fichapppProf.ID_SEDE,
                                                                    Sede =
                                                                        new Sede
                                                                        {
                                                                            Calle = fichapppProf.T_SEDES.CALLE,
                                                                            Numero = fichapppProf.T_SEDES.NUMERO,
                                                                            Piso = fichapppProf.T_SEDES.PISO,
                                                                            Dpto = fichapppProf.T_SEDES.DPTO,
                                                                            CodigoPostal = fichapppProf.T_SEDES.CODIGO_POSTAL,
                                                                            IdLocalidad = fichapppProf.T_SEDES.ID_LOCALIDAD,
                                                                            NombreLocalidad = fichapppProf.T_SEDES.T_LOCALIDADES.N_LOCALIDAD
                                                                        },
                                                                    Empresa =
                                                                        new Empresa
                                                                        {
                                                                            Calle = fichapppProf.T_EMPRESAS.CALLE,
                                                                            CodigoPostal = fichapppProf.T_EMPRESAS.CODIGO_POSTAL,
                                                                            Cuit = fichapppProf.T_EMPRESAS.CUIT,
                                                                            DomicilioLaboralIdem = fichapppProf.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                            IdEmpresa = fichapppProf.ID_EMPRESA ?? 0,
                                                                            NombreEmpresa = fichapppProf.T_EMPRESAS.N_EMPRESA,
                                                                            Numero = fichapppProf.T_EMPRESAS.NUMERO,
                                                                            Piso = fichapppProf.T_EMPRESAS.PISO,
                                                                            Telefono = fichapppProf.T_EMPRESAS.PISO,
                                                                            IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD,
                                                                            LocalidadEmpresa =
                                                                                new Localidad
                                                                                {
                                                                                    IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                    NombreLocalidad = fichapppProf.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                    Departamento =
                                                                                        new Departamento
                                                                                        {
                                                                                            IdDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                            NombreDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                        }
                                                                                }
                                                                        }

                                                                },
                                                            LocalidadFicha =
                                                                new Localidad
                                                                {
                                                                    IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                                    NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                    Departamento =
                                                                        new Departamento
                                                                        {
                                                                            IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                            NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                        }
                                                                }
                                                        }
                                                }).OrderBy(x => new { x.IdFicha });
                    return beneficiariosPppProf;
                #endregion
                #region "case (int) Enums.Programas.Vat:"
                case (int)Enums.Programas.Vat:
                    var beneficiariosVat = (from c in _mdb.T_BENEFICIARIOS
                                            join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                            from fiterc in
                                                _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                            from fiUniv in
                                                _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                            from cu in
                                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                            from suc in
                                                _mdb.T_TABLAS_BCO_CBA.Where(
                                                    suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                            from mon in
                                                _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                            from iva in
                                                _mdb.T_TABLAS_BCO_CBA.Where(
                                                    iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                            from nac in
                                                _mdb.T_TABLAS_BCO_CBA.Where(
                                                    nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                            from fichavat in
                                                _mdb.T_FICHA_VAT.Where(fichavat => fichavat.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                                            from ap in
                                                _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO && ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                            from sucapo in
                                                _mdb.T_TABLAS_BCO_CBA.Where(sucapo => sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).DefaultIfEmpty()

                                            where c.FEC_INICIO >= fecInicioBenef // 24/06/2013 - DI CAMPLI LEANDRO - AGREGAR FILTROS 
                                                  && c.FEC_INICIO <= fecBenefHasta   // 24/06/2013 - DI CAMPLI LEANDRO - AGREGAR FILTROS 
                                            
                                            select
                                                new Beneficiario
                                                {
                                                    IdBeneficiario = c.ID_BENEFICIARIO,
                                                    IdEstado = c.ID_ESTADO ?? 0,
                                                    FechaSistema = c.FEC_SIST,
                                                    IdFicha = c.ID_FICHA ?? 0,
                                                    IdPrograma = c.ID_PROGRAMA ?? 0,
                                                    IdUsuarioSistema = c.ID_USR_SIST,
                                                    IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                    NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                    CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                                    CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                                    CondicionIva = iva.COD_BCO_CBA ?? "0",
                                                    Nacionalidad = c.NACIONALIDAD ?? 0,
                                                    Residente = c.RESIDENTE,
                                                    TipoPersona = c.TIPO_PERSONA,
                                                    CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                                    CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                                    NombreEstado = c.T_ESTADOS.N_ESTADO,
                                                    Cbu = cu.CBU ?? "",
                                                    ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                    NumeroCuenta = cu.NRO_CTA,
                                                    Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                                    MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                    TieneApoderado = c.TIENE_APODERADO,
                                                    FechaNotificacion = c.FEC_NOTIF,
                                                    Notificado = c.NOTIFICADO == "S" ? true : false,
                                                    Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                                    SucursalDescripcion = suc.DESCRIPCION,
                                                    FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                                    IdSucursal = cu.ID_SUCURSAL,
                                                    UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                    Ficha =
                                                        new Ficha
                                                        {
                                                            Apellido = c.T_FICHAS.APELLIDO,
                                                            Barrio = c.T_FICHAS.BARRIO,
                                                            Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                            IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                            IdFicha = c.T_FICHAS.ID_FICHA,
                                                            Calle = c.T_FICHAS.CALLE,
                                                            CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                            Cuil = c.T_FICHAS.CUIL,
                                                            EsDiscapacitado =
                                                                c.T_FICHAS.ES_DISCAPACITADO == "S"
                                                                    ? true
                                                                    : false,
                                                            Dpto = c.T_FICHAS.DPTO ?? " ",
                                                            FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                            Mail = c.T_FICHAS.MAIL,
                                                            Nombre = c.T_FICHAS.NOMBRE,
                                                            Numero = c.T_FICHAS.NUMERO,
                                                            NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                            Piso = c.T_FICHAS.PISO ?? " ",
                                                            TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                            TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                            IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                            NombreEstadoFicha =
                                                                c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                            FechaSistema = c.FEC_SIST,
                                                            IdUsuarioSistema = c.ID_USR_SIST,
                                                            UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                            FichaVat =
                                                                new FichaVAT
                                                                {
                                                                    IdEmpresa = fichavat.ID_EMPRESA,
                                                                  //  IdNivelEscolaridad = fichavat.ID_NIVEL_ESCOLARIDAD,
                                                                    Modalidad = fichavat.MODALIDAD,
                                                                    IdSede = fichavat.ID_SEDE,
                                                                    Sede =
                                                                        new Sede
                                                                        {
                                                                            Calle = fichavat.T_SEDES.CALLE,
                                                                            Numero = fichavat.T_SEDES.NUMERO,
                                                                            Piso = fichavat.T_SEDES.PISO,
                                                                            Dpto = fichavat.T_SEDES.DPTO,
                                                                            CodigoPostal = fichavat.T_SEDES.CODIGO_POSTAL,
                                                                            IdLocalidad = fichavat.T_SEDES.ID_LOCALIDAD,
                                                                            NombreLocalidad = fichavat.T_SEDES.T_LOCALIDADES.N_LOCALIDAD
                                                                        },
                                                                    Empresa =
                                                                        new Empresa
                                                                        {
                                                                            Calle = fichavat.T_EMPRESAS.CALLE,
                                                                            CodigoPostal = fichavat.T_EMPRESAS.CODIGO_POSTAL,
                                                                            Cuit = fichavat.T_EMPRESAS.CUIT,
                                                                            DomicilioLaboralIdem = fichavat.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                            IdEmpresa = fichavat.ID_EMPRESA ?? 0,
                                                                            NombreEmpresa = fichavat.T_EMPRESAS.N_EMPRESA,
                                                                            Numero = fichavat.T_EMPRESAS.NUMERO,
                                                                            Piso = fichavat.T_EMPRESAS.PISO,
                                                                            Telefono = fichavat.T_EMPRESAS.PISO,
                                                                            IdLocalidad = fichavat.T_EMPRESAS.ID_LOCALIDAD,
                                                                            LocalidadEmpresa =
                                                                                new Localidad
                                                                                {
                                                                                    IdLocalidad = fichavat.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                    NombreLocalidad = fichavat.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                    Departamento =
                                                                                        new Departamento
                                                                                        {
                                                                                            IdDepartamento = fichavat.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                            NombreDepartamento = fichavat.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                        }
                                                                                }
                                                                        }

                                                                },
                                                            LocalidadFicha =
                                                                new Localidad
                                                                {
                                                                    IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                                    NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                    Departamento =
                                                                        new Departamento
                                                                        {
                                                                            IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                            NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                        }
                                                                }
                                                        }
                                                }).OrderBy(x => new { x.IdFicha });
                    return beneficiariosVat;
                #endregion
                #region "case (int) Enums.Programas.ConfVos:"

                case (int)Enums.Programas.ConfiamosEnVos:
                    var beneficiariosConfVos = (from c in _mdb.T_BENEFICIARIOS
                                            join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                            from cu in
                                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                            from suc in
                                                _mdb.T_TABLAS_BCO_CBA.Where(
                                                    suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                            from mon in
                                                _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                            from iva in
                                                _mdb.T_TABLAS_BCO_CBA.Where(
                                                    iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                            from nac in
                                                _mdb.T_TABLAS_BCO_CBA.Where(
                                                    nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                            from fichaConf in
                                                    _mdb.T_FICHAS_CONF_VOS.Where(fichaConf => fichaConf.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                            from ap in
                                                _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO && ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                            from sucapo in
                                                _mdb.T_TABLAS_BCO_CBA.Where(sucapo => sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).DefaultIfEmpty()

                                            where c.FEC_INICIO >= fecInicioBenef // 24/06/2013 - DI CAMPLI LEANDRO - AGREGAR FILTROS 
                                                  && c.FEC_INICIO <= fecBenefHasta   // 24/06/2013 - DI CAMPLI LEANDRO - AGREGAR FILTROS 
                                            && c.ID_PROGRAMA == 8
                                                select
                                                new Beneficiario
                                                {
                                                    IdBeneficiario = c.ID_BENEFICIARIO,
                                                    IdEstado = c.ID_ESTADO ?? 0,
                                                    FechaSistema = c.FEC_SIST,
                                                    IdFicha = c.ID_FICHA ?? 0,
                                                    IdPrograma = c.ID_PROGRAMA ?? 0,
                                                    IdUsuarioSistema = c.ID_USR_SIST,
                                                    IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                    NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                    CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                                    CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                                    CondicionIva = iva.COD_BCO_CBA ?? "0",
                                                    Nacionalidad = c.NACIONALIDAD ?? 0,
                                                    Residente = c.RESIDENTE,
                                                    TipoPersona = c.TIPO_PERSONA,
                                                    CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                                    CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                                    NombreEstado = c.T_ESTADOS.N_ESTADO,
                                                    Cbu = cu.CBU ?? "",
                                                    ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                    NumeroCuenta = cu.NRO_CTA,
                                                    Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                                    MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                    TieneApoderado = c.TIENE_APODERADO,
                                                    FechaNotificacion = c.FEC_NOTIF,
                                                    Notificado = c.NOTIFICADO == "S" ? true : false,
                                                    Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                                    SucursalDescripcion = suc.DESCRIPCION,
                                                    FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                                    IdSucursal = cu.ID_SUCURSAL,
                                                    UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                    Ficha =
                                                        new Ficha
                                                        {
                                                            Apellido = c.T_FICHAS.APELLIDO,
                                                            Barrio = c.T_FICHAS.BARRIO,
                                                            Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                            IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                            IdFicha = c.T_FICHAS.ID_FICHA,
                                                            Calle = c.T_FICHAS.CALLE,
                                                            CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                            Cuil = c.T_FICHAS.CUIL,
                                                            EsDiscapacitado =
                                                                c.T_FICHAS.ES_DISCAPACITADO == "S"
                                                                    ? true
                                                                    : false,
                                                            Dpto = c.T_FICHAS.DPTO ?? " ",
                                                            FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                            Mail = c.T_FICHAS.MAIL,
                                                            Nombre = c.T_FICHAS.NOMBRE,
                                                            Numero = c.T_FICHAS.NUMERO,
                                                            NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                            Piso = c.T_FICHAS.PISO ?? " ",
                                                            TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                            TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                            IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                            NombreEstadoFicha =
                                                                c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                            FechaSistema = c.FEC_SIST,
                                                            IdUsuarioSistema = c.ID_USR_SIST,
                                                            UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                            FichaConfVos =
                                                                new FichaConfVos
                                                                {
                                                                    IdEmpresa = fichaConf.ID_EMPRESA,
                                                                    IdNivelEscolaridad = fichaConf.ID_NIVEL_ESCOLARIDAD,
                                                                    Modalidad = fichaConf.MODALIDAD,
                                                                    IdSede = fichaConf.ID_SEDE,
                                                                    Sede =
                                                                        new Sede
                                                                        {
                                                                            Calle = fichaConf.T_SEDES.CALLE,
                                                                            Numero = fichaConf.T_SEDES.NUMERO,
                                                                            Piso = fichaConf.T_SEDES.PISO,
                                                                            Dpto = fichaConf.T_SEDES.DPTO,
                                                                            CodigoPostal = fichaConf.T_SEDES.CODIGO_POSTAL,
                                                                            IdLocalidad = fichaConf.T_SEDES.ID_LOCALIDAD,
                                                                            NombreLocalidad = fichaConf.T_SEDES.T_LOCALIDADES.N_LOCALIDAD
                                                                        },
                                                                    Empresa =
                                                                        new Empresa
                                                                        {
                                                                            Calle = fichaConf.T_EMPRESAS.CALLE,
                                                                            CodigoPostal = fichaConf.T_EMPRESAS.CODIGO_POSTAL,
                                                                            Cuit = fichaConf.T_EMPRESAS.CUIT,
                                                                            DomicilioLaboralIdem = fichaConf.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                            IdEmpresa = fichaConf.ID_EMPRESA ?? 0,
                                                                            NombreEmpresa = fichaConf.T_EMPRESAS.N_EMPRESA,
                                                                            Numero = fichaConf.T_EMPRESAS.NUMERO,
                                                                            Piso = fichaConf.T_EMPRESAS.PISO,
                                                                            Telefono = fichaConf.T_EMPRESAS.PISO,
                                                                            IdLocalidad = fichaConf.T_EMPRESAS.ID_LOCALIDAD,
                                                                            LocalidadEmpresa =
                                                                                new Localidad
                                                                                {
                                                                                    IdLocalidad = fichaConf.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                    NombreLocalidad = fichaConf.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                    Departamento =
                                                                                        new Departamento
                                                                                        {
                                                                                            IdDepartamento = fichaConf.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                            NombreDepartamento = fichaConf.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                        }
                                                                                }
                                                                        },
                                                                        Id_Escuela = fichaConf.ID_ESCUELA

                                                                },
                                                            LocalidadFicha =
                                                                new Localidad
                                                                {
                                                                    IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                                    NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                    Departamento =
                                                                        new Departamento
                                                                        {
                                                                            IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                            NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                        }
                                                                },
                                                            IdEscuelaConfVos = fichaConf.ID_ESCUELA 
                                                        }
                                                }).OrderBy(x => new { x.IdFicha });
                    return beneficiariosConfVos;
                
                #endregion
                default:
                    return null;
            }
        }

        private IEnumerable<IArchivo> QArchivos()
        {

            var a =
                _mdb.T_CUENTAS_BANCO.Where(c => c.FEC_SOL_CTA != null && (c.NRO_CTA == null || c.NRO_CTA == 0) && c.T_BENEFICIARIOS.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo && c.T_BENEFICIARIOS.TIENE_APODERADO == "N").Select
                    (c => new Archivo { Fecha = c.FEC_SOL_CTA, Id = c.ID_BENEFICIARIO });


            var b =
                _mdb.T_APODERADOS.Where(
                    c => c.FEC_SOL_CTA != null && (c.NRO_CUENTA_BCO == null || c.NRO_CUENTA_BCO == 0) && c.ID_ESTADO_APODERADO == (int)Enums.EstadoApoderado.Activo && c.T_BENEFICIARIOS.TIENE_APODERADO == "S").Select(
                        c => new Archivo { Fecha = c.FEC_SOL_CTA, Id = c.ID_APODERADO });

            return a.Union(b);
        }

        public IList<IBeneficiario> GetBeneficiarios(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string nrotramite, int tipoprograma = 0, int subprograma = 0)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";
            nrotramite = nrotramite ?? String.Empty;

            IList<IBeneficiario> listabeneficiariototal =

                idPrograma == 0 ? QBeneficiarioSimpleTodos(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, nrotramite).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList() : idPrograma < 3 ? QBeneficiarioSimpleC(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, nrotramite).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList()
                : QBeneficiarioSimpleB(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, nrotramite, tipoprograma, subprograma).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();// 27/06/2013 - DI CAMPLI LEANDRO - LLAMAR IQUERIABLE CON TODOS LOS FILTROS
            
            
            return listabeneficiariototal.ToList();
        }

        public IList<IBeneficiario> GetBeneficiarios(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int excluirprograma, int idEtapa)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";

            IList<IBeneficiario> listabeneficiariototal =
                //QBeneficiarioSimple(idPrograma).Where(c => c.IdPrograma != excluirprograma).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();
                QBeneficiarioSimple(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa).Where(c => c.IdPrograma != excluirprograma).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList(); // 27/06/2013 - DI CAMPLI LEANDRO - LLAMAR IQUERIABLE CON TODOS LOS FILTROS
            
            return listabeneficiariototal/*.Where(
                c =>
                ((c.Ficha.Apellido.ToLower().Contains(apellido.ToLower()) || (c.Apoderado.Apellido ?? "").ToLower().Contains(apellido.ToLower())) ||
                String.IsNullOrEmpty(apellido)) && ((c.Ficha.Nombre.ToLower().Contains(nombre.ToLower()) ||
                (c.Apoderado.Nombre ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                ((c.Ficha.NumeroDocumento.ToLower() == numeroDocumento.ToLower() || c.Apoderado.NumeroDocumento.ToLower() == numeroDocumento.ToLower()) ||
                 String.IsNullOrEmpty(numeroDocumento)) && (c.IdPrograma == idPrograma || idPrograma == 0) &&
                (c.IdEstado == idEstado || idEstado == 0) &&
                (modalidad != "T"
                     ? (c.Ficha.FichaPpp.Modalidad == 1 ? "E" : "C") == modalidad
                     : (c.Ficha.FichaPpp.Modalidad != null || string.IsNullOrEmpty(c.Modalidad))) &&
                (conApoderados != "T"
                     ? c.TieneApoderado == conApoderados
                     : (c.TieneApoderado != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                (discapacitado != "T"
                     ? c.Ficha.EsDiscapacitado == (discapacitado == "S" ? true : false)
                     : (true || true)) &&
                (altaTemprana != "T"
                     ? c.Ficha.FichaPpp.AltaTemprana == altaTemprana
                     : (c.Ficha.FichaPpp.AltaTemprana != null || string.IsNullOrEmpty(c.Ficha.FichaPpp.AltaTemprana))) &&
                (c.Ficha.Cuil.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                 && (c.Ficha.idEtapa == idEtapa || idEtapa == 0))*/.ToList();
        }

        /// <summary>
        /// GetBeneficiarios -- BUSQUEDA CON Y SIN CUENTA - CON PAGINADOR
        /// </summary>
        /// <param name="nombre"></param>
        /// <param name="apellido"></param>
        /// <param name="cuil"></param>
        /// <param name="numeroDocumento"></param>
        /// <param name="idPrograma"></param>
        /// <param name="conApoderados"></param>
        /// <param name="modalidad"></param>
        /// <param name="discapacitado"></param>
        /// <param name="altaTemprana"></param>
        /// <param name="idEstado"></param>
        /// <param name="apellidonombreapoderado"></param>
        /// <param name="skip"></param>
        /// <param name="take"></param>
        /// <returns></returns>
        public IList<IBeneficiario> GetBeneficiarios(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int skip, int take, int idEtapa)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;

            IList<IBeneficiario> listabeneficiariototal =
                //QBeneficiarioSimple(idPrograma).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();
            QBeneficiarioSimple(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList(); // 27/06/2013 - DI CAMPLI LEANDRO - LLAMAR IQUERIABLE CON TODOS LOS FILTROS
            
            return listabeneficiariototal.Skip(skip).Take(take).
                ToList();
        }

        public IList<IBeneficiario> GetBeneficiarios(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int skip, int take, int excluirprograma, int idEtapa)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;

            IList<IBeneficiario> listabeneficiariototal =
                //QBeneficiarioSimple(idPrograma).Where(c => c.IdPrograma != excluirprograma).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();
                QBeneficiarioSimple(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa).Where(c => c.IdPrograma != excluirprograma).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList(); // 27/06/2013 - DI CAMPLI LEANDRO - LLAMAR IQUERIABLE CON TODOS LOS FILTROS

            return listabeneficiariototal.Skip(skip).Take(take).
                ToList();
        }

        public int GetBeneficiariosCount(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altatemprana, int idEstado, string apellidonombreapoderado)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            discapacitado = discapacitado ?? "T";
            altatemprana = altatemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;

            IList<IBeneficiario> listabeneficiariototal = QBeneficiarioSimple(idPrograma).ToList();

            return listabeneficiariototal.Where(
                c =>
                ((c.Ficha.Apellido.ToLower().Contains(apellido.ToLower()) || (c.Apoderado.Apellido ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&

                ((c.Ficha.Nombre.ToLower().Contains(nombre.ToLower()) || (c.Apoderado.Nombre ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                //(((c.Apoderado.Apellido + "," + c.Apoderado.Nombre) ?? "").ToLower().Contains(
                    //    apellidonombreapoderado.ToLower()) || String.IsNullOrEmpty(apellidonombreapoderado)) &&

                (c.Ficha.NumeroDocumento.ToLower() == numeroDocumento.ToLower() ||
                 String.IsNullOrEmpty(numeroDocumento)) &&
                (c.IdPrograma == idPrograma || idPrograma == 0) &&
                (c.IdEstado == idEstado || idEstado == 0) &&
                (modalidad != "T"
                     ? (c.Ficha.FichaPpp.Modalidad == 1 ? "E" : "C") == modalidad
                     : (c.Ficha.FichaPpp.Modalidad != null || string.IsNullOrEmpty(c.Modalidad))) &&
                (conApoderados != "T"
                     ? c.TieneApoderado == conApoderados
                     : (c.TieneApoderado != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                (discapacitado != "T"
                     ? c.Ficha.EsDiscapacitado == (discapacitado == "S" ? true : false)
                     : (true || true)) &&
                (altatemprana != "T"
                     ? c.Ficha.FichaPpp.AltaTemprana == altatemprana
                     : (c.Ficha.FichaPpp.AltaTemprana != null || string.IsNullOrEmpty(c.Ficha.FichaPpp.AltaTemprana))) &&
                (c.Ficha.Cuil.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))).Count();
        }

        public IBeneficiario GetBeneficiario(int idBeneficiario)
        {
            return QBeneficiario().Where(c => c.IdBeneficiario == idBeneficiario).SingleOrDefault();
        }

        public bool UpdateBeneficiario(IBeneficiario beneficiario)
        {

            base.AgregarDatos(beneficiario);

            _mdb.Connection.Open();

            using (var trans = _mdb.Connection.BeginTransaction())
            {
                var dbbeneficiario =
                _mdb.T_BENEFICIARIOS.Where(c => c.ID_BENEFICIARIO == beneficiario.IdBeneficiario).SingleOrDefault();

                var dbfichas = _mdb.T_FICHAS.Where(c => c.ID_FICHA == beneficiario.Ficha.IdFicha).SingleOrDefault();


                dbfichas.APELLIDO = beneficiario.Ficha.Apellido.ToUpper();
                dbfichas.NOMBRE = beneficiario.Ficha.Nombre.ToUpper();
                dbfichas.NUMERO_DOCUMENTO = beneficiario.Ficha.NumeroDocumento;
                dbfichas.CUIL = beneficiario.Ficha.Cuil;
                dbbeneficiario.ID_ESTADO = Convert.ToInt16(beneficiario.IdEstado);
                dbbeneficiario.TIENE_APODERADO = beneficiario.TieneApoderado;
                dbbeneficiario.ID_USR_SIST = beneficiario.IdUsuarioSistema;
                dbbeneficiario.FEC_NOTIF = beneficiario.FechaNotificacion;
                dbbeneficiario.NOTIFICADO = (beneficiario.Notificado == true ? "S" : "N");
                dbbeneficiario.FEC_INICIO = beneficiario.FechaInicioBeneficio;
                dbbeneficiario.FEC_BAJA = beneficiario.FechaBajaBeneficio;

                _mdb.SaveChanges();
                trans.Commit();
            }

            return true;


        }

        public IList<IBeneficiario> GetBeneficiarioSinCuenta(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altatemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string nrotramite, int tipoprograma = 0, int subprograma = 0)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            discapacitado = discapacitado ?? "T";
            altatemprana = altatemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;
            nrotramite = nrotramite ?? String.Empty;
            //IList<IBeneficiario> dario = QBeneficiarioSinCuentasTest(idPrograma).Where(c => c.IdPrograma == 2).ToList();


            IList<IBeneficiario> listabeneficiariosincuenta = idPrograma < 3 ? 
                QBeneficiarioSinCuentasPart2(idPrograma).Where(
                    c =>
                    c.Ficha.IdEstadoFicha == (int)Enums.EstadoFicha.Beneficiario &&
                    c.IdEstado == (int)Enums.EstadoBeneficiario.Activo &&
                    c.Ficha.TipoFicha != (int)Enums.TipoFicha.Ppp &&
                    (c.Ficha.idEtapa == idEtapa || idEtapa == 0)// 14/06/2013 - DI CAMPLI LEANDRO - FILTRO ETAPAS
                    ).ToList()
                    :
                    QBeneficiarioSinCuentas(idPrograma).Where(
                    c =>
                    c.Ficha.IdEstadoFicha == (int)Enums.EstadoFicha.Beneficiario &&
                    c.IdEstado == (int)Enums.EstadoBeneficiario.Activo &&
                    c.Ficha.TipoFicha != (int)Enums.TipoFicha.Ppp &&
                    (c.Ficha.idEtapa == idEtapa || idEtapa == 0)// 14/06/2013 - DI CAMPLI LEANDRO - FILTRO ETAPAS
                    ).ToList();

            IList<IBeneficiario> listabeneficiariosincuentappp =
                QBeneficiarioSinCuentas(idPrograma).Where(c => c.Ficha.IdEstadoFicha == (int)Enums.EstadoFicha.Beneficiario &&
                                                     c.IdEstado == (int)Enums.EstadoBeneficiario.Activo &&
                                                     c.Ficha.TipoFicha == (int)Enums.TipoFicha.Ppp &&
                                                     (c.Modalidad == "E" ||
                                                      (c.Modalidad == "C" && c.AltaTemprana == "S")) &&
                                                      (c.Ficha.idEtapa == idEtapa || idEtapa == 0)// 14/06/2013 - DI CAMPLI LEANDRO - FILTRO ETAPAS
                                                      ).ToList();

            IList<IBeneficiario> final =
                listabeneficiariosincuenta.Union(listabeneficiariosincuentappp).OrderBy(c => c.Ficha.Apellido).ThenBy(
                    c => c.Ficha.Nombre).ToList();


            return
                (from c in final

                 select c).Where(
                     c =>
                     ((c.Ficha.Apellido.ToLower().Contains(apellido.ToLower()) ||
                       (c.Apoderado.Apellido ?? "").ToLower().Contains(apellido.ToLower())) ||
                      String.IsNullOrEmpty(apellido)) &&

                     ((c.Ficha.Nombre.ToLower().Contains(nombre.ToLower()) ||
                       (c.Apoderado.Nombre ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                     //((c.ApellidoNombreApoderado ?? "").ToLower().Contains(
                         //    apellidonombreapoderado.ToLower()) || String.IsNullOrEmpty(apellidonombreapoderado)) &&
                     ((c.Ficha.NumeroDocumento.ToLower() == numeroDocumento.ToLower() ||
                       c.Apoderado.NumeroDocumento.ToLower() == numeroDocumento.ToLower()) ||
                      String.IsNullOrEmpty(numeroDocumento)) &&
                     (c.Ficha.Cuil.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                     (c.IdPrograma == idPrograma || idPrograma == 0) &&
                     (c.IdEstado == idEstado || idEstado == 0) &&
                     c.IdEstado == (int)Enums.EstadoBeneficiario.Activo &&
                     (c.Ficha.NroTramite.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim())) &&
                     (modalidad != "T"
                          ? (modalidad == "E" ? c.Modalidad == "E" : c.Modalidad == "C")
                          : c.Modalidad != null) &&

                     (conApoderados != "T"
                          ? c.TieneApoderado == conApoderados
                          : (c.TieneApoderado != null || string.IsNullOrEmpty(c.TieneApoderado))) &&

                     (discapacitado != "T"
                          ? c.Ficha.EsDiscapacitado == (discapacitado == "S" ? true : false)
                          : (true || true)) &&

                     (altatemprana != "T"
                          ? (altatemprana == "S"
                                 ? c.Modalidad == "E" || (c.Modalidad == "C" && c.AltaTemprana == "S")
                                 : c.Modalidad == "E" || (c.Modalidad == "C" && c.AltaTemprana == "N"))
                          : c.AltaTemprana != null)).Distinct().
                    ToList();

        }

        public IList<IBeneficiario> GetBeneficiarioSinCuenta(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altatemprana, int idEstado, string apellidonombreapoderado, int skip, int take, int idEtapa)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            discapacitado = discapacitado ?? "T";
            altatemprana = altatemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;

            IList<IBeneficiario> listabeneficiariosincuenta =
               QBeneficiarioSinCuentas().Where(
                   c =>
                   c.Ficha.IdEstadoFicha == (int)Enums.EstadoFicha.Beneficiario &&
                   c.IdEstado == (int)Enums.EstadoBeneficiario.Activo &&
                   c.Ficha.TipoFicha != (int)Enums.TipoFicha.Ppp &&
                   (c.Ficha.idEtapa == idEtapa || idEtapa == 0)// 14/06/2013 - DI CAMPLI LEANDRO - FILTRO ETAPAS
                   ).ToList();

            IList<IBeneficiario> listabeneficiariosincuentappp =
                QBeneficiarioSinCuentas().Where(c => c.Ficha.IdEstadoFicha == (int)Enums.EstadoFicha.Beneficiario &&
                                                     c.IdEstado == (int)Enums.EstadoBeneficiario.Activo &&
                                                     (c.Modalidad == "E" ||
                                                      (c.Modalidad == "C" && c.AltaTemprana == "S")) &&
                                                      (c.Ficha.idEtapa == idEtapa || idEtapa == 0)// 14/06/2013 - DI CAMPLI LEANDRO - FILTRO ETAPAS
                                                      ).ToList();

            IList<IBeneficiario> final =
                listabeneficiariosincuenta.Union(listabeneficiariosincuentappp).OrderBy(c => c.Ficha.Apellido).ThenBy(
                    c => c.Ficha.Nombre).Distinct().ToList();

            return
                (from c in final

                 select c).Where(
                     c =>
                     ((c.Ficha.Apellido.ToLower().Contains(apellido.ToLower()) ||
                       (c.Apoderado.Apellido ?? "").ToLower().Contains(apellido.ToLower())) ||
                      String.IsNullOrEmpty(apellido)) &&

                     ((c.Ficha.Nombre.ToLower().Contains(nombre.ToLower()) ||
                       (c.Apoderado.Nombre ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                         //((c.ApellidoNombreApoderado ?? "").ToLower().Contains(
                         //    apellidonombreapoderado.ToLower()) || String.IsNullOrEmpty(apellidonombreapoderado)) &&
                     ((c.Ficha.NumeroDocumento.ToLower() == numeroDocumento.ToLower() ||
                       c.Apoderado.NumeroDocumento.ToLower() == numeroDocumento.ToLower()) ||
                      String.IsNullOrEmpty(numeroDocumento)) &&
                     (c.Ficha.Cuil.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                     (c.IdPrograma == idPrograma || idPrograma == 0) &&
                     (c.IdEstado == idEstado || idEstado == 0) &&
                     c.IdEstado == (int)Enums.EstadoBeneficiario.Activo &&
                     (modalidad != "T"
                          ? (modalidad == "E" ? c.Modalidad == "E" : c.Modalidad == "C")
                          : c.Modalidad != null) &&

                     (conApoderados != "T"
                          ? c.TieneApoderado == conApoderados
                          : (c.TieneApoderado != null || string.IsNullOrEmpty(c.TieneApoderado))) &&

                     (discapacitado != "T"
                          ? c.Ficha.EsDiscapacitado == (discapacitado == "S" ? true : false)
                          : (true || true)) &&

                     (altatemprana != "T"
                          ? (altatemprana == "S"
                                 ? c.Modalidad == "E" || (c.Modalidad == "C" && c.AltaTemprana == "S")
                                 : c.Modalidad == "E" || (c.Modalidad == "C" && c.AltaTemprana == "N"))
                          : c.AltaTemprana != null)).Skip(skip).Take(take).Distinct().
                    ToList();

        }

        public IList<IBeneficiario> GetBeneficiarioSinCuenta(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string discapacitado, string altatemprana, string modalidad, int idEstado, string apellidonombreapoderado, int skip, int take, int excluirprograma, int idEtapa)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            discapacitado = discapacitado ?? "T";
            altatemprana = altatemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;

            IList<IBeneficiario> listabeneficiariosincuenta =
               QBeneficiarioSinCuentas().Where(
                   c =>
                   c.Ficha.IdEstadoFicha == (int)Enums.EstadoFicha.Beneficiario &&
                   c.IdEstado == (int)Enums.EstadoBeneficiario.Activo &&
                   c.Ficha.TipoFicha != (int)Enums.TipoFicha.Ppp && 
                   (c.Ficha.idEtapa == idEtapa || idEtapa == 0)// 14/06/2013 - DI CAMPLI LEANDRO - FILTRO ETAPAS
                   ).ToList();

            IList<IBeneficiario> listabeneficiariosincuentappp =
                QBeneficiarioSinCuentas().Where(c => c.Ficha.IdEstadoFicha == (int)Enums.EstadoFicha.Beneficiario &&
                                                     c.IdEstado == (int)Enums.EstadoBeneficiario.Activo &&
                                                     (c.Modalidad == "E" ||
                                                      (c.Modalidad == "C" && c.AltaTemprana == "S")) &&
                                                      (c.Ficha.idEtapa == idEtapa || idEtapa == 0)// 14/06/2013 - DI CAMPLI LEANDRO - FILTRO ETAPAS
                                                      ).ToList();

            IList<IBeneficiario> final =
                listabeneficiariosincuenta.Union(listabeneficiariosincuentappp).OrderBy(c => c.Ficha.Apellido).ThenBy(
                    c => c.Ficha.Nombre).Distinct().ToList();

            return
                (from c in final

                 select c).Where(
                     c =>
                     ((c.Ficha.Apellido.ToLower().Contains(apellido.ToLower()) ||
                       (c.Apoderado.Apellido ?? "").ToLower().Contains(apellido.ToLower())) ||
                      String.IsNullOrEmpty(apellido)) &&

                     ((c.Ficha.Nombre.ToLower().Contains(nombre.ToLower()) ||
                       (c.Apoderado.Nombre ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                     //((c.ApellidoNombreApoderado ?? "").ToLower().Contains(
                     //    apellidonombreapoderado.ToLower()) || String.IsNullOrEmpty(apellidonombreapoderado)) &&
                     ((c.Ficha.NumeroDocumento.ToLower() == numeroDocumento.ToLower() ||
                       c.Apoderado.NumeroDocumento.ToLower() == numeroDocumento.ToLower()) ||
                      String.IsNullOrEmpty(numeroDocumento)) &&
                     (c.Ficha.Cuil.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                     (c.IdPrograma == idPrograma || idPrograma == 0) && (c.IdPrograma != excluirprograma) &&
                     (c.IdEstado == idEstado || idEstado == 0) &&
                     c.IdEstado == (int) Enums.EstadoBeneficiario.Activo &&
                     (modalidad != "T"
                          ? (modalidad == "E" ? c.Modalidad == "E" : c.Modalidad == "C")
                          : c.Modalidad != null) &&

                     (conApoderados != "T"
                          ? c.TieneApoderado == conApoderados
                          : (c.TieneApoderado != null || string.IsNullOrEmpty(c.TieneApoderado))) &&

                     (discapacitado != "T"
                          ? c.Ficha.EsDiscapacitado == (discapacitado == "S" ? true : false)
                          : (true || true)) &&

                     (altatemprana != "T"
                          ? (altatemprana == "S"
                                 ? c.Modalidad == "E" || (c.Modalidad == "C" && c.AltaTemprana == "S")
                                 : c.Modalidad == "E" || (c.Modalidad == "C" && c.AltaTemprana == "N"))
                          : c.AltaTemprana != null)).Skip(skip).Take(take).Distinct().
                    ToList();
        }

        public IList<IBeneficiario> GetBeneficiarioSinCuentaByFecha(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altatemprana, int idEstado, string apellidonombreapoderado, DateTime fechasolicitud)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            discapacitado = discapacitado ?? "T";
            altatemprana = altatemprana ?? "T";


            IList<IBeneficiario> listabeneficiariosincuenta =
                QBeneficiarioSinCuentasByFechaSol(fechasolicitud).Where(
                    c =>
                    c.Ficha.IdEstadoFicha == (int)Enums.EstadoFicha.Beneficiario &&
                    c.IdEstado == (int)Enums.EstadoBeneficiario.Activo &&
                    c.Ficha.TipoFicha != (int)Enums.TipoFicha.Ppp).ToList();

            IList<IBeneficiario> listabeneficiariosincuentappp =
                QBeneficiarioSinCuentasByFechaSol(fechasolicitud).Where(
                    c => c.Ficha.IdEstadoFicha == (int)Enums.EstadoFicha.Beneficiario &&
                         c.IdEstado == (int)Enums.EstadoBeneficiario.Activo &&
                         (c.Modalidad == "E" ||
                          (c.Modalidad == "C" && c.AltaTemprana == "S"))).ToList();


            IList<IBeneficiario> final =
                listabeneficiariosincuenta.Union(listabeneficiariosincuentappp).ToList();


            return
                (from c in final

                 select c).Where(
                     c =>
                     ((c.Ficha.Apellido.ToLower().Contains(apellido.ToLower()) ||
                       (c.Apoderado.Apellido ?? "").ToLower().Contains(apellido.ToLower())) ||
                      String.IsNullOrEmpty(apellido)) &&

                     ((c.Ficha.Nombre.ToLower().Contains(nombre.ToLower()) ||
                       (c.Apoderado.Nombre ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                      ((c.Ficha.NumeroDocumento.ToLower() == numeroDocumento.ToLower() ||
                       c.Apoderado.NumeroDocumento.ToLower() == numeroDocumento.ToLower()) ||
                      String.IsNullOrEmpty(numeroDocumento)) &&

                     (c.Ficha.Cuil.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                     (c.IdPrograma == idPrograma || idPrograma == 0) &&
                     (c.IdEstado == idEstado || idEstado == 0) &&
                     c.IdEstado == (int)Enums.EstadoBeneficiario.Activo &&
                     (modalidad != "T"
                          ? (modalidad == "E" ? c.Modalidad == "E" : c.Modalidad == "C")
                          : c.Modalidad != null) &&

                     (conApoderados != "T"
                          ? c.TieneApoderado == conApoderados
                          : (c.TieneApoderado != null || string.IsNullOrEmpty(c.TieneApoderado))) &&

                     (discapacitado != "T"
                          ? c.Ficha.EsDiscapacitado == (discapacitado == "S" ? true : false)
                          : (true || true)) &&

                     (altatemprana != "T"
                          ? (altatemprana == "S"
                                 ? c.Modalidad == "E" || (c.Modalidad == "C" && c.AltaTemprana == "S")
                                 : c.Modalidad == "E" || (c.Modalidad == "C" && c.AltaTemprana == "N"))
                          : c.AltaTemprana != null)).ToList();

        }

        public IList<IBeneficiario> GetBeneficiarioConCuenta(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altatemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string nrotramite, int tipoprograma = 0, int subprograma = 0)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altatemprana = altatemprana ?? "T";
            nrotramite = nrotramite ?? String.Empty;
            idEstado = (int)Enums.EstadoBeneficiario.Activo;

            //IList<IBeneficiario> listabeneficiariosconcuentas = 
                //(idPrograma == (int)Enums.Programas.EfectoresSociales || idPrograma == (int)Enums.Programas.ReconversionProductiva) ?
                //    QBeneficiarioConCuentas().OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList() 
                //        :
            IList<IBeneficiario> listabeneficiariosconcuentas = 
                (idPrograma == null ? 0 : idPrograma) < 6 ? QBeneficiarioConCuentasPrueba(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altatemprana, idEstado, apellidonombreapoderado, idEtapa, nrotramite, tipoprograma, subprograma).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList()
                                : (idPrograma == null ? 0 : idPrograma) < 8 ? QBeneficiarioConCuentasPart3(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altatemprana, idEstado, apellidonombreapoderado, idEtapa, nrotramite).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList()
                                : QBeneficiarioConCuentasConVos(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altatemprana, idEstado, apellidonombreapoderado, idEtapa, nrotramite).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList(); // 28/06/2013 - DI CAMPLI LEANDRO - LLAMAR IQUERYABLE CON TODOS LOS FILTROS
             
            return listabeneficiariosconcuentas.ToList();


                
        }

        public IList<IBeneficiario> GetBeneficiarioConCuenta(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altatemprana, int idEstado, string apellidonombreapoderado, int skip, int take, int idEtapa)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altatemprana = altatemprana ?? "T";

            idEstado = (int)Enums.EstadoBeneficiario.Activo;

            IList<IBeneficiario> listabeneficiariosconcuentas =
                //QBeneficiarioConCuentas().OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();
                QBeneficiarioConCuentas(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altatemprana, idEstado, apellidonombreapoderado, idEtapa).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList(); // 28/06/2013 - DI CAMPLI LEANDRO - LLAMAR IQUERYABLE CON TODOS LOS FILTROS

            return listabeneficiariosconcuentas.Skip(skip).Take(take).
                    ToList();
        }

        public IList<IBeneficiario> GetBeneficiarioConCuenta(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altatemprana, int idEstado, string apellidonombreapoderado, int skip, int take, int excluirprograma, int idEtapa)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altatemprana = altatemprana ?? "T";

            IList<IBeneficiario> listabeneficiariosconcuentas =
                QBeneficiarioConCuentas().OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();

            return
                (from c in listabeneficiariosconcuentas
                 where
                     c.IdEstado == (int)Enums.EstadoBeneficiario.Activo
                 select c).Where(
                     c =>
                     ((c.Ficha.Apellido.ToLower().Contains(apellido.ToLower()) ||
                       (c.Apoderado.Apellido ?? "").ToLower().Contains(apellido.ToLower())) ||
                      String.IsNullOrEmpty(apellido)) &&

                     ((c.Ficha.Nombre.ToLower().Contains(nombre.ToLower()) ||
                       (c.Apoderado.Nombre ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&

                     ((c.Ficha.NumeroDocumento.ToLower() == numeroDocumento.ToLower() ||
                       c.Apoderado.NumeroDocumento.ToLower() == numeroDocumento.ToLower()) ||
                      String.IsNullOrEmpty(numeroDocumento)) &&

                     (c.IdPrograma == idPrograma || idPrograma == 0) && (c.IdPrograma != excluirprograma) &&
                     (c.IdEstado == idEstado || idEstado == 0) &&
                     (modalidad != "T"
                          ? c.Modalidad == modalidad
                          : (c.Modalidad != null || string.IsNullOrEmpty(c.Modalidad))) &&
                     (conApoderados != "T"
                          ? c.TieneApoderado == conApoderados
                          : (c.TieneApoderado != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                     (discapacitado != "T"
                          ? c.Ficha.EsDiscapacitado == (discapacitado == "S" ? true : false)
                          : (true || true)) &&
                     (altatemprana != "T"
                          ? c.AltaTemprana == altatemprana
                          : (c.AltaTemprana != null || string.IsNullOrEmpty(c.AltaTemprana))) &&
                     (c.Ficha.Cuil.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                     (c.Ficha.idEtapa == idEtapa || idEtapa == 0)// 14/06/2013 - DI CAMPLI LEANDRO - FILTRO ETAPAS
                     ).Skip(skip).Take(take).
                    ToList();
        }

        public IList<IBeneficiario> GetBeneficiarioForLiquidacion(int idPrograma, int idConcepto, DateTime fecinipago)
        {

            // Listado de Beneficiarios con el concepto seleccionado que ya tiene una liquidación

            int[] listBenefLiqenConcepto =
                _mdb.T_BENEFICIARIO_CONCEP_LIQ.Where(
                    c =>
                    c.ID_CONCEPTO == idConcepto &&
                    c.T_LIQUIDACIONES.ID_ESTADO_LIQ != (short)Enums.EstadoLiquidacion.Cancelado &&
                    (c.ID_EST_BEN_CON_LIQ == (short)Enums.EstadoBeneficiarioLiquidacion.EnviadoAlBanco
                     || c.ID_EST_BEN_CON_LIQ == (short)Enums.EstadoBeneficiarioLiquidacion.ImputadoEnCuenta
                     || c.ID_EST_BEN_CON_LIQ == (short)Enums.EstadoBeneficiarioLiquidacion.CuentaBloqueada // 12/09/2013
                    )
                    ).Select(
                        c => c.ID_BENEFICIARIO).ToArray();


            // Traigo la lista de Beneficiario con el Programa cuya fecha de Notificacion no es null y si está en CTI, tenga fecha de inicio

            // 14/02/2013 - Di Campli - Ajustes para validación de liquidación mensual.
            IList<IBeneficiario> listreturn =
                (idPrograma== null ? 0 : idPrograma)<6 ? 
                QBeneficiarioConCuentasPrueba("", "", "", "", Convert.ToInt32(idPrograma), "T", "T", "T", "T", (int)Enums.EstadoBeneficiario.Activo,"", 0, "")
                .Where(//comenzar a controlar desde aqui las validaciones
                    c =>
                    c.IdPrograma == idPrograma &&
                    (
                        ((c.Modalidad == "E" || c.Modalidad == null) //Si es entrenamiento tener la fecha de inicio
                            && c.FechaInicioBeneficio <= fecinipago && c.FechaInicioBeneficio != null ) //como beneficiario inferior al día 15 del mes a liquidar.
                            ||
                        (c.Modalidad == "C" && c.AltaTemprana == "S" && c.FechaInicio != null && c.FechaInicio <= fecinipago))). //Si es modalidad CTI tene el alta temprana y la fecha de inicio del alta temprana inferior al día 15 del mes a liquidar.
                    ToList()
                    
                    :
                    (idPrograma== null ? 0 : idPrograma)<8 ?
                    QBeneficiarioConCuentasPart3("", "", "", "", Convert.ToInt32(idPrograma), "T", "T", "T", "T", (int)Enums.EstadoBeneficiario.Activo, "", 0, "")
                .Where(//comenzar a controlar desde aqui las validaciones
                    c =>
                    c.IdPrograma == idPrograma &&
                    (
                        ((c.Modalidad == "E" || c.Modalidad == null) //Si es entrenamiento tener la fecha de inicio
                            && c.FechaInicioBeneficio <= fecinipago && c.FechaInicioBeneficio != null) //como beneficiario inferior al día 15 del mes a liquidar.
                            ||
                        (c.Modalidad == "C" && c.AltaTemprana == "S" && c.FechaInicio != null && c.FechaInicio <= fecinipago))). //Si es modalidad CTI tene el alta temprana y la fecha de inicio del alta temprana inferior al día 15 del mes a liquidar.
                    ToList()

                    :
                    QBeneficiarioConCuentasConVos("", "", "", "", Convert.ToInt32(idPrograma), "T", "T", "T", "T", (int)Enums.EstadoBeneficiario.Activo, "", 0, "")
                .Where(
                    c =>
                    c.IdPrograma == idPrograma &&
                    ( c.FechaInicioBeneficio <= fecinipago && c.FechaInicioBeneficio != null) && c.EsBenfProgresar == "N" && c.idEscuela !=0). 
                    ToList();

            //

            // 19/038/2013 - DI CAMPLI LEANDRO - OBTENER EL MES A LIQUIDAR
            
            string strMMYYYY = string.Empty;

            var varMMYYYY = (from my in _mdb.T_CONCEPTOS.Where(c => c.ID_CONCEPTO == idConcepto)
                             //select my.MES + '/' +  my.ANIO).FirstOrDefault();
                             select new Concepto 
                             {
                                Id_Concepto=my.ID_CONCEPTO,
                                Año=my.ANIO,
                                Mes=my.MES

                             }).FirstOrDefault();

           strMMYYYY = varMMYYYY.Mes.ToString().PadLeft(1,'0') + "/" + varMMYYYY.Año.ToString();
            DateTime dtmConcepto = Convert.ToDateTime("15/" + strMMYYYY);

            //Controlo QUE LOS BENEFICIARIOS NO ESTEN DADOS DE BAJA O QUE
            // LA FECHA DE BAJA SEA SUPERIOR O IGUAL AL 15 DEL MES A LIQUIDAR
            listreturn =
                listreturn.Where(// 14/02/2013 - DI CAMPLI LEANDRO
                    c =>
                    (   c.FechaBajaBeneficio == null //que no esté dado de baja
                            ||
                        (
                        c.FechaBajaBeneficio >= dtmConcepto/*fecinipago*/ //que la fecha de baja sea superior o igual al 15
                        //    && string.Concat(c.FechaBajaBeneficio.Value.Month.ToString(), c.FechaBajaBeneficio.Value.Year.ToString()) 
                        //                    == //Que la fecha de baja sea del mes y el año corriente a liquidar
                        //      string.Concat(dtmConcepto.Month.ToString(), dtmConcepto.Year.ToString())
                        )
                    )
                    ).ToList();

            // Retorna el listado de Beneficiarios que tiene cuentas y no estan ya en una liquidacion para el concepto

            return listreturn.Where(c => !(listBenefLiqenConcepto.Contains(c.IdBeneficiario))).ToList();


        }
        
        //para reporte anexoI
        public IList<IBeneficiario> GetBeneficiariosRetenidosForAnexoI(int idPrograma, int idConcepto, DateTime fecinipago)
        {

            // Listado de Beneficiarios con el concepto seleccionado que ya tiene una liquidación

            int[] listBenefLiqenConcepto =
                _mdb.T_BENEFICIARIO_CONCEP_LIQ.Where(
                    c =>
                    c.ID_CONCEPTO == idConcepto &&
                    c.T_LIQUIDACIONES.ID_ESTADO_LIQ != (short)Enums.EstadoLiquidacion.Cancelado &&
                    (c.ID_EST_BEN_CON_LIQ == (short)Enums.EstadoBeneficiarioLiquidacion.EnviadoAlBanco
                     || c.ID_EST_BEN_CON_LIQ == (short)Enums.EstadoBeneficiarioLiquidacion.ImputadoEnCuenta
                    )).Select(
                        c => c.ID_BENEFICIARIO).ToArray();


            // Traigo la lista de Beneficiario con el Programa 
            IList<IBeneficiario> listreturn = QBeneficiariosRetenidos().Where(c =>c.IdPrograma == idPrograma).ToList();

            // Retorna el listado de Beneficiarios que no estan en una liquidacion para el concepto

            return listreturn.Where(c => !(listBenefLiqenConcepto.Contains(c.IdBeneficiario))).ToList();

        }

        public IList<IBeneficiario> GetBeneficiarioForLiquidacionExcluidos(int idPrograma, int idConcepto, DateTime fecinipago)
        {
            IList<IBeneficiario> listreturnaptos = (idPrograma== null ? 0 : idPrograma)<6 ?
                QBeneficiarioConCuentasPrueba("", "", "", "", Convert.ToInt32(idPrograma), "T", "T", "T", "T", (int)Enums.EstadoBeneficiario.Activo, "", 0, "")
                .Where(c => c.IdPrograma == idPrograma).ToList()
                :
                (idPrograma == null ? 0 : idPrograma) < 8 ?
                    QBeneficiarioConCuentasPart3("", "", "", "", Convert.ToInt32(idPrograma), "T", "T", "T", "T", (int)Enums.EstadoBeneficiario.Activo, "", 0, "")
                .Where(//comenzar a controlar desde aqui las validaciones
                    c =>
                    c.IdPrograma == idPrograma &&
                    (
                        ((c.Modalidad == "E" || c.Modalidad == null) //Si es entrenamiento tener la fecha de inicio
                            && c.FechaInicioBeneficio <= fecinipago && c.FechaInicioBeneficio != null) //como beneficiario inferior al día 15 del mes a liquidar.
                            ||
                        (c.Modalidad == "C" && c.AltaTemprana == "S" && c.FechaInicio != null && c.FechaInicio <= fecinipago))). //Si es modalidad CTI tene el alta temprana y la fecha de inicio del alta temprana inferior al día 15 del mes a liquidar.
                    ToList()

                    :
                QBeneficiarioConCuentasConVos("", "", "", "", Convert.ToInt32(idPrograma), "T", "T", "T", "T", (int)Enums.EstadoBeneficiario.Activo, "", 0, "")
                .Where(c => c.IdPrograma == idPrograma).ToList();

            //15/04/2013 - CARGAR LA LISTA DE BENEFICIARIOS QUE YA FUERON LIQUIDADOS
            //int[] listBenefLiqenConcepto =
            //   _mdb.T_BENEFICIARIO_CONCEP_LIQ.Where(
            //       c =>
            //       c.ID_CONCEPTO == idConcepto &&
            //       c.T_LIQUIDACIONES.ID_ESTADO_LIQ != (short)Enums.EstadoLiquidacion.Cancelado &&
            //        (c.ID_EST_BEN_CON_LIQ == (short)Enums.EstadoBeneficiarioLiquidacion.EnviadoAlBanco
            //         || c.ID_EST_BEN_CON_LIQ == (short)Enums.EstadoBeneficiarioLiquidacion.ImputadoEnCuenta
            //        )
            //       ).Select(
            //           c => c.ID_BENEFICIARIO).ToArray();

            //BENEFICIARIOS QUE NO CUMPLEN CON LAS CONDICIONES PARA LIQUIDACION MENSUAL
            /*int[] listbeneficiariofuera =
                QBeneficiarioConCuentas().Where(
                    c =>
                    c.IdPrograma == idPrograma && c.FechaNotificacion == null &&
                    (((c.Modalidad == "E" || c.Modalidad == null)) ||
                     (c.Modalidad == "C" && c.AltaTemprana == "S") && (c.FechaInicio == null))).
                    Select(c => c.IdBeneficiario).ToArray();*/
            
            //15/02/2013 - QUEDARON EXCLUIDOS POR NO TENER FECHA DE BENEFICIARIO Y EN CASO DE CTI LA FECHA DEL ALTA TEMPRANA.
            IList<IBeneficiario> listreturn = (idPrograma== null ? 0 : idPrograma)<6 ?
                QBeneficiarioConCuentasPrueba("", "", "", "", Convert.ToInt32(idPrograma), "T", "T", "T", "T", (int)Enums.EstadoBeneficiario.Activo, "", 0, "")
                .Where(
                    c =>
                    c.IdPrograma == idPrograma  &&
                    (
                        (((c.Modalidad == "E" || c.Modalidad == null) && c.FechaInicioBeneficio == null)) 
                            ||
                        (c.Modalidad == "C" && c.AltaTemprana == "S" && c.FechaInicio == null)
                        )
                    ).ToList()
                    :
                    (idPrograma == null ? 0 : idPrograma) < 8 ?
                    QBeneficiarioConCuentasPart3("", "", "", "", Convert.ToInt32(idPrograma), "T", "T", "T", "T", (int)Enums.EstadoBeneficiario.Activo, "", 0, "")
                .Where(//comenzar a controlar desde aqui las validaciones
                    c =>
                    c.IdPrograma == idPrograma &&
                      (
                        (((c.Modalidad == "E" || c.Modalidad == null) && c.FechaInicioBeneficio == null))
                            ||
                        (c.Modalidad == "C" && c.AltaTemprana == "S" && c.FechaInicio == null)
                        )
                    ).ToList()

                    :
                    QBeneficiarioConCuentasConVos("", "", "", "", Convert.ToInt32(idPrograma), "T", "T", "T", "T", (int)Enums.EstadoBeneficiario.Activo, "", 0, "")
                .Where(
                    c =>
                    c.IdPrograma == idPrograma && c.FechaInicioBeneficio == null && c.EsBenfProgresar == "S" && c.idEscuela == 0
                    ).ToList();

            //15/02/2013 - DI CAMPLI LEANDRO - CONTROLO QUE LOS BENEFICIARIOS NO ESTEN DADOS DE BAJA O QUE
            // LA FECHA DE BAJA SEA SUPERIOR O IGUAL AL 15 DEL MES A LIQUIDAR
            int[] listbeneficiariofuera =  
                listreturn.Where(// 14/02/2013 - DI CAMPLI LEANDRO
                    c =>
                    (c.FechaBajaBeneficio == null //que no esté dado de baja
                            ||
                        (c.FechaBajaBeneficio >= fecinipago //que la fecha de baja sea superior o igual al 15
                            && string.Concat(c.FechaBajaBeneficio.Value.Month.ToString(), c.FechaBajaBeneficio.Value.Year.ToString())
                                            == //Que la fecha de baja sea del mes y el año corriente a liquidar
                               string.Concat(fecinipago.Month.ToString(), fecinipago.Year.ToString())
                        )
                    )
                    ).Select(c => c.IdBeneficiario).ToArray();


            int[] listatotal = listbeneficiariofuera;//listBenefLiqenConcepto.Union(listbeneficiariofuera).ToArray();

            return listreturnaptos.Where(c => (listatotal.Contains(c.IdBeneficiario))).ToList();

        }

        public IList<IBeneficiario> GetBeneficiarioForReportes(int[] idbeneficiarios)
        {

            var beneficiarios = (from c in _mdb.T_BENEFICIARIOS
                                 join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA

                                 from cu in
                                     _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                 from suc in
                                     _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                 from mon in
                                     _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                 from iva in
                                     _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                 from nac in
                                     _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()

                                 from ap in
                                     _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                         ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                 from sucapo in
                                     _mdb.T_TABLAS_BCO_CBA.Where(
                                         sucapo =>
                                         sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == 1).
                                     DefaultIfEmpty()
                                 where idbeneficiarios.Contains(c.ID_BENEFICIARIO)
                                 select
                                     new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? "0",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA ?? 0,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL ?? 0,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             Apoderado =
                                                 new Apoderado
                                                     {
                                                         IdApoderadoNullable = ap.ID_APODERADO,
                                                         Nombre = ap.NOMBRE,
                                                         Apellido = ap.APELLIDO,
                                                         Barrio = ap.BARRIO,
                                                         Calle = ap.CALLE,
                                                         Cbu = ap.CBU,
                                                         CodigoPostal = ap.CODIGO_POSTAL,
                                                         Cuil = ap.CUIL,
                                                         Dpto = ap.DPTO,
                                                         EntreCalles = ap.ENTRECALLES,
                                                         FechaNacimiento = ap.FER_NAC ?? DateTime.Now,
                                                         FechaSolicitudCuenta = ap.FEC_SOL_CTA ?? DateTime.Now,
                                                         IdEstadoApoderado = ap.ID_ESTADO_APODERADO ?? 0,
                                                         IdSistema = ap.ID_SISTEMA ?? 0,
                                                         IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                         Mail = ap.MAIL,
                                                         Numero = ap.NUMERO,
                                                         LocalidadApoderado =
                                                             new Localidad
                                                                 {
                                                                     IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                             {
                                                                                 IdDepartamento =
                                                                                     ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                 NombreDepartamento =
                                                                                     ap.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                                     N_DEPARTAMENTO
                                                                             }
                                                                 },

                                                         Manzana = ap.MANZANA,
                                                         Monoblock = ap.MONOBLOCK,
                                                         NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                         NumeroCuentaBco = ap.NRO_CUENTA_BCO ?? 0,
                                                         NumeroDocumento = ap.NRO_DOCUMENTO,
                                                         Parcela = ap.PARCELA,
                                                         Piso = ap.PISO,
                                                         Sexo = ap.SEXO,
                                                         TelefonoCelular = ap.TEL_CELULAR,
                                                         TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                         TelefonoFijo = ap.TEL_FIJO,
                                                         UsuarioBanco = ap.USUARIO_BANCO,
                                                         SucursalApoderado =
                                                             new Sucursal
                                                                 {
                                                                     CodigoBanco = sucapo.COD_BCO_CBA,
                                                                     IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                                     Detalle = sucapo.DESCRIPCION
                                                                 }

                                                     },
                                             Ficha =
                                                 new Ficha
                                                     {

                                                         Apellido = c.T_FICHAS.APELLIDO,
                                                         Barrio = c.T_FICHAS.BARRIO,
                                                         Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                         IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                         IdFicha = c.T_FICHAS.ID_FICHA,
                                                         Calle = c.T_FICHAS.CALLE,
                                                         CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                         CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                         CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                         Contacto = c.T_FICHAS.CONTACTO,
                                                         Cuil = c.T_FICHAS.CUIL,
                                                         DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                         TieneDeficienciaMental =
                                                             c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                         TieneDeficienciaMotora =
                                                             c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                         TieneDeficienciaPsicologia =
                                                             c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                         TieneDeficienciaSensorial =
                                                             c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                         Dpto = c.T_FICHAS.DPTO ?? "0",
                                                         EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                         EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                         EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                         FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                         Mail = c.T_FICHAS.MAIL,
                                                         Manzana = c.T_FICHAS.MANZANA ?? "0",
                                                         Monoblock = c.T_FICHAS.MONOBLOCK ?? "0",
                                                         Nombre = c.T_FICHAS.NOMBRE,
                                                         Numero = c.T_FICHAS.NUMERO,
                                                         NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                         Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                         Piso = c.T_FICHAS.PISO ?? "0",
                                                         Sexo = c.T_FICHAS.SEXO,
                                                         TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                         TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                         TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                         TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                         TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                         IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                         NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                         FechaSistema = c.FEC_SIST,
                                                         IdUsuarioSistema = c.ID_USR_SIST,
                                                         UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                         NombreTipoFicha = c.T_FICHAS.T_TIPO_FICHA.N_TIPO_FICHA,
                                                         LocalidadFicha =
                                                             new Localidad
                                                                 {
                                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                             {
                                                                                 IdDepartamento =
                                                                                     c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                 NombreDepartamento =
                                                                                     c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                                     N_DEPARTAMENTO
                                                                             }
                                                                 }



                                                     }
                                         });
            return beneficiarios.ToList().Cast<IBeneficiario>().ToList();

        }
        
        public IList<IBeneficiario> GetBeneficiariosHorariosArt(int idPrograma, DateTime fecInicioBenef, DateTime fecBenefHasta)
        {
            IList<IBeneficiario> listabeneficiariototal = QBeneficiarioExportarArt(idPrograma, fecInicioBenef, fecBenefHasta).ToList();

            switch (idPrograma)
            {
                case (int) Enums.Programas.Ppp:
                    return listabeneficiariototal.Where(c =>
                                                        (c.IdEstado == Convert.ToInt32(Enums.EstadoBeneficiario.Activo)) &&
                                                        (c.Ficha.FichaPpp.Modalidad ==
                                                         Convert.ToInt32(Enums.Modalidad.Entrenamiento)) &&
                                                        (c.IdPrograma == Convert.ToInt32(idPrograma))
                        ).OrderBy(c => c.IdFicha).ToList();
                case (int)Enums.Programas.ReconversionProductiva:
                    return listabeneficiariototal.Where(c =>
                                                        (c.IdEstado == Convert.ToInt32(Enums.EstadoBeneficiario.Activo)) &&
                                                        (c.Ficha.FichaReconversion.Modalidad ==
                                                         Convert.ToInt32(Enums.Modalidad.Entrenamiento)) &&
                                                        (c.IdPrograma == Convert.ToInt32(idPrograma))
                        ).OrderBy(c => c.IdFicha).ToList();
                case (int)Enums.Programas.EfectoresSociales:
                    return listabeneficiariototal.Where(c =>
                                                        (c.IdEstado == Convert.ToInt32(Enums.EstadoBeneficiario.Activo)) &&
                                                        (c.Ficha.FichaEfectores.Modalidad ==
                                                         Convert.ToInt32(Enums.Modalidad.Entrenamiento)) &&
                                                        (c.IdPrograma == Convert.ToInt32(idPrograma))
                        ).OrderBy(c => c.IdFicha).ToList();
                case (int)Enums.Programas.Vat:
                    return listabeneficiariototal.Where(c =>
                                                        (c.IdEstado == Convert.ToInt32(Enums.EstadoBeneficiario.Activo)) &&
                                                        (c.Ficha.FichaVat.Modalidad ==
                                                         Convert.ToInt32(Enums.Modalidad.Entrenamiento)) &&
                                                        (c.IdPrograma == Convert.ToInt32(idPrograma))
                        ).OrderBy(c => c.IdFicha).ToList();
                case (int)Enums.Programas.PppProf:
                    return listabeneficiariototal.Where(c =>
                                                        (c.IdEstado == Convert.ToInt32(Enums.EstadoBeneficiario.Activo)) &&
                                                        (c.Ficha.FichaPppp.Modalidad ==
                                                         Convert.ToInt32(Enums.Modalidad.Entrenamiento)) &&
                                                        (c.IdPrograma == Convert.ToInt32(idPrograma))
                        ).OrderBy(c => c.IdFicha).ToList();
                case (int)Enums.Programas.ConfiamosEnVos:
                    return listabeneficiariototal.Where(c =>
                                                        (c.IdEstado == Convert.ToInt32(Enums.EstadoBeneficiario.Activo)) &&
                                                        (c.Ficha.FichaConfVos.Modalidad ==
                                                         Convert.ToInt32(Enums.Modalidad.Entrenamiento)) &&
                                                        (c.IdPrograma == Convert.ToInt32(idPrograma)) && (c.Ficha.FichaConfVos.Id_Escuela != null && c.Ficha.FichaConfVos.Id_Escuela != 0)
                        ).OrderBy(c => c.IdFicha).ToList();
                default:
                    return null;
            }

        }

        public bool UpdateCuentaCbu(int idBeneficiario, string nroCuenta, string cbu, int idsucursal)
        {
            IComunDatos comun = new ComunDatos();

            base.AgregarDatos(comun);

            var cuentasbanco = _mdb.T_CUENTAS_BANCO.Where(c => c.ID_BENEFICIARIO == idBeneficiario).ToList();

            foreach (var cuentaBanco in cuentasbanco)
            {
                cuentaBanco.NRO_CTA = Convert.ToInt32(nroCuenta);
                cuentaBanco.CBU = cbu;
                cuentaBanco.ID_SUCURSAL = Convert.ToInt16(idsucursal);
                cuentaBanco.ID_USR_SIST = comun.IdUsuarioSistema;

            }

            _mdb.SaveChanges();
            return true;
        }

        public IList<IBeneficiario> GetBeneficiarioByFicha(int idFicha)
        {
            return
                QBeneficiarioSimple().Where(
                    c => c.IdFicha == idFicha).ToList();
        }

        public int AddBeneficiario(IBeneficiario beneficiario)
        {
            base.AgregarDatos(beneficiario);

            

            var beneficiarioModel = new T_BENEFICIARIOS()
            {
                ID_BENEFICIARIO = SecuenciaRepositorio.GetId(),
                ID_FICHA = beneficiario.IdFicha,
                ID_PROGRAMA = Convert.ToInt16(beneficiario.IdPrograma),
                ID_ESTADO = Convert.ToInt16(beneficiario.IdEstado), //Estado 2: ACTIVO- Validar si primero es postulante o Activo
                ID_USR_SIST = beneficiario.IdUsuarioSistema,
                RESIDENTE = beneficiario.Residente,
                TIPO_PERSONA = beneficiario.TipoPersona,
                COD_ACT_BANCARIO = beneficiario.CodigoActivacionBancaria,
                CONDICION_IVA = Convert.ToInt32(beneficiario.CondicionIva),
                TIENE_APODERADO = beneficiario.TieneApoderado,
                FEC_NOTIF = beneficiario.FechaNotificacion,
                NOTIFICADO = (beneficiario.Notificado == true ? "S" : "N"),
                FEC_SIST = beneficiario.FechaSistema,
                FEC_INICIO = beneficiario.FechaInicioBeneficio // 21/02/2013 - DI CAMPLI LEANDRO
            };

            _mdb.T_BENEFICIARIOS.AddObject(beneficiarioModel);
            _mdb.SaveChanges();

            return beneficiarioModel.ID_BENEFICIARIO;
        }

        public IList<IArchivo> GetArchivos()
        {

            IList<IArchivo> lista = QArchivos().ToList();

            var group = lista.GroupBy(c => c.Fecha);

            return group.Select(archivo => new Archivo() { CantidadRegistros = archivo.Count(), Fecha = archivo.Key }).Cast<IArchivo>().ToList();
        }

        public bool ClearFechaSolicitudArchivobyFecha(DateTime fecha)
        {
            DbTransaction localtransaccion = null;
            try
            {

                _mdb.Connection.Open();
                localtransaccion = _mdb.Connection.BeginTransaction();


                var cuentas =
                    _mdb.T_CUENTAS_BANCO.Where(
                        c =>
                        c.FEC_SOL_CTA == fecha &&
                        (c.NRO_CTA == null || c.NRO_CTA == 0)).
                        ToList();

                var apoderados =
                    _mdb.T_APODERADOS.Where(
                        c => c.FEC_SOL_CTA == fecha && (c.NRO_CUENTA_BCO == null || c.NRO_CUENTA_BCO == 0)).
                        ToList();


                foreach (var itemcuenta in cuentas)
                {
                    itemcuenta.FEC_SOL_CTA = null;
                }

                foreach (var itemapoderado in apoderados)
                {
                    itemapoderado.FEC_SOL_CTA = null;
                }

                _mdb.SaveChanges();
                localtransaccion.Commit();
                return true;
            }
            catch (Exception)
            {
                if (localtransaccion != null) localtransaccion.Rollback();
                return false;
            }
        }

        public IList<IBeneficiario> GetBeneficiariosCompleto(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;

            IList<IBeneficiario> listabeneficiariototal =
                QBeneficiarioCompleto(idPrograma).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();

            return listabeneficiariototal.Where(
                c =>
                ((c.Ficha.Apellido.ToLower().Contains(apellido.ToLower()) ||
                  (c.Apoderado.Apellido ?? "").ToLower().Contains(apellido.ToLower())) ||
                 String.IsNullOrEmpty(apellido)) &&

                ((c.Ficha.Nombre.ToLower().Contains(nombre.ToLower()) ||
                  (c.Apoderado.Nombre ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                    //((c.ApellidoNombreApoderado ?? "").ToLower().Contains(
                    //    apellidonombreapoderado.ToLower()) || String.IsNullOrEmpty(apellidonombreapoderado)) &&
                ((c.Ficha.NumeroDocumento.ToLower() == numeroDocumento.ToLower() ||
                  c.Apoderado.NumeroDocumento.ToLower() == numeroDocumento.ToLower()) ||
                 String.IsNullOrEmpty(numeroDocumento)) &&
                (c.IdPrograma == idPrograma || idPrograma == 0) &&
                (c.IdEstado == idEstado || idEstado == 0) &&
                (modalidad != "T"
                     ? c.Modalidad == modalidad
                     : (c.Modalidad != null || string.IsNullOrEmpty(c.Modalidad))) &&
                (conApoderados != "T"
                     ? c.TieneApoderado == conApoderados
                     : (c.TieneApoderado != null || string.IsNullOrEmpty(c.TieneApoderado))) &&
                (discapacitado != "T"
                     ? c.Ficha.EsDiscapacitado == (discapacitado == "S" ? true : false)
                     : (true || true)) &&
                (altaTemprana != "T"
                     ? c.AltaTemprana == altaTemprana
                     : (c.AltaTemprana != null || string.IsNullOrEmpty(c.AltaTemprana))) &&
                (c.Ficha.Cuil.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))).
                ToList();
        }

        public IList<IBeneficiario> GetBeneficiariosCompleto(int[] idbeneficiarios, int idprograma)
        {

            IList<IBeneficiario> listabeneficiariototal =
               QBeneficiarioExportar(idprograma/*, idbeneficiarios*/).ToList();

            return listabeneficiariototal.Where(c => idbeneficiarios.Contains(c.IdBeneficiario)).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();
            //return listabeneficiariototal.OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();

        }

        public IList<IBeneficiario> GetBeneficiariosCompleto(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;

            IList<IBeneficiario> listabeneficiariototal;
                switch(conCuenta)
                {
                    case "S":
                        listabeneficiariototal = QBeneficiarioCompletoConCuenta(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();
                        break;
                    case "N":
                        listabeneficiariototal = QBeneficiarioCompletoSinCuenta(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();
                        break;
                    default:
                        listabeneficiariototal = QBenefTodos(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();
                        break;

                }
            return listabeneficiariototal.ToList();
        }


        public IList<IBeneficiario> GetBeneficiariosAnexoActivosRetenidos(int idprograma)
        {

            IList<IBeneficiario> listabeneficiariototal =
               QBeneficiarioExportar(idprograma).ToList();

            return listabeneficiariototal.Where(c => 
                                                c.IdEstado == (int)Enums.EstadoBeneficiario.Activo || 
                                                c.IdEstado == (int)Enums.EstadoBeneficiario.BeneficiarioRetenido).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();

        }
        public IBeneficiario GetBeneficiarioByNroDocumento(string numerodocumento)
        {

            return QBeneficiarioSimple(0).Where(c => c.Ficha.NumeroDocumento == numerodocumento && c.IdEstado == (int)Enums.EstadoBeneficiario.Activo).SingleOrDefault();
        }

        public bool ClearFechaNotificacion(int idficha)
        {
            var bene =
                _mdb.T_BENEFICIARIOS.Where(
                    c => c.ID_FICHA == idficha && c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo).FirstOrDefault();

            if (bene != null)
            {
                bene.FEC_NOTIF = null;
                bene.NOTIFICADO = "N";

                _mdb.SaveChanges();

                return true;
            }
            else
            {
                return false;
            }

        }

        // 23/01/2013 - LEANDRO DI CAMPLI - AÑADIR APODERADOS A LOS BENEFICIARIOS DADOS DE BAJA AL EXPORTAR EXCEL
        private IEnumerable<IBeneficiario> QBeneficiarioExportarBis(int[] beneficiarios, int idPrograma)//(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado)
        {

            
            switch (idPrograma)
            {
                case (int)Enums.Programas.Terciaria:

                    //var ft = (from c in _mdb.T_BENEFICIARIOS
                    //          join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                    //          join fiterc in _mdb.T_FICHA_TERCIARIO.DefaultIfEmpty(new T_FICHA_TERCIARIO { ID_FICHA = 0 }) on c.ID_FICHA equals fiterc.ID_FICHA
                    //          select c
                    //            );

                                

                    var fichaterc = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     from fiterc in
                                         _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     //from fiUniv in
                                     //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma
                                     &&  beneficiarios.Contains(c.ID_BENEFICIARIO)
                                     select

                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {

                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,

                                                     //Fichas Terciarias
                                                     PromedioTerciaria = fiterc.PROMEDIO,
                                                     OtraCarreraTerciaria = fiterc.OTRA_CARRERA,
                                                     OtraInstitucionTerciaria = fiterc.OTRA_INSTITUCION,
                                                     IdCarreraTerciaria = fiterc.ID_CARRERA,
                                                     IdEscuelaTerciaria = fiterc.ID_ESCUELA,
                                                     IdLocalidadEscTerc = fiterc.T_ESCUELAS.ID_LOCALIDAD,
                                                     NombreEscuela = fiterc.T_ESCUELAS.N_ESCUELA,
                                                     OtroSectorTerciaria = fiterc.OTRO_SECTOR,
                                                     EscuelaFicha =
                                                         new Escuela
                                                         {
                                                             Anexo = fiterc.T_ESCUELAS.ANEXO,
                                                             Barrio = fiterc.T_ESCUELAS.BARRIO,
                                                             Cue = fiterc.T_ESCUELAS.CUE,
                                                             Id_Escuela = fiterc.ID_ESCUELA ?? 0,
                                                             Nombre_Escuela = fiterc.T_ESCUELAS.N_ESCUELA,
                                                             LocalidadEscuela =
                                                                 new Localidad
                                                                 {
                                                                     IdLocalidad = fiterc.T_ESCUELAS.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = fiterc.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                         {
                                                                             IdDepartamento = fiterc.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                             NombreDepartamento = fiterc.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                         }
                                                                 }
                                                         },
                                                     CarreraFicha =
                                                         new Carrera
                                                         {
                                                             IdCarrera = fiterc.ID_CARRERA ?? 0,
                                                             NombreCarrera = fiterc.T_CARRERAS.N_CARRERA,
                                                             IdSector = fiterc.T_CARRERAS.ID_SECTOR,
                                                             SectorCarrera =
                                                                 new Sector
                                                                 {
                                                                     IdSector = fiterc.T_CARRERAS.ID_SECTOR ?? 0,
                                                                     NombreSector = fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR
                                                                 },
                                                             IdNivel = fiterc.T_CARRERAS.ID_NIVEL,
                                                             NivelCarrera =
                                                                 new Nivel
                                                                 {
                                                                     IdNivel = fiterc.T_CARRERAS.ID_NIVEL ?? 0,
                                                                     NombreNivel = fiterc.T_CARRERAS.T_NIVEL.N_NIVEL
                                                                 },
                                                             IdInstitucion = fiterc.T_CARRERAS.ID_INSTITUCION,
                                                             InstitucionCarrera =
                                                                 new Institucion
                                                                 {
                                                                     IdInstitucion = fiterc.T_CARRERAS.ID_INSTITUCION ?? 0,
                                                                     NombreInstitucion = fiterc.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return fichaterc;
                case (int)Enums.Programas.Universitaria:
                    var fichauniv = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     //from fiterc in
                                     //    _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from fiUniv in
                                         _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()

                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma
                                           && beneficiarios.Contains(c.ID_BENEFICIARIO)
                                     select
                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {
                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,

                                                     // Fichas Universitarias
                                                     PromedioUniversitaria = fiUniv.PROMEDIO,
                                                     OtraCarreraUniversitaria = fiUniv.OTRA_CARRERA,
                                                     OtraInstitucionUniversitaria = fiUniv.OTRA_INSTITUCION,
                                                     IdCarreraUniversitaria = fiUniv.ID_CARRERA,
                                                     IdEscuelaUniversitaria = fiUniv.ID_ESCUELA,
                                                     OtroSectorUniversitaria = fiUniv.OTRO_SECTOR,
                                                     EscuelaFicha =
                                                         new Escuela
                                                         {
                                                             Anexo = fiUniv.T_ESCUELAS.ANEXO,
                                                             Barrio = fiUniv.T_ESCUELAS.BARRIO,
                                                             Cue = fiUniv.T_ESCUELAS.CUE,
                                                             Id_Escuela = fiUniv.ID_ESCUELA ?? 0,
                                                             Nombre_Escuela = fiUniv.T_ESCUELAS.N_ESCUELA,
                                                             Id_Localidad = fiUniv.T_ESCUELAS.ID_LOCALIDAD,
                                                             LocalidadEscuela =
                                                                 new Localidad
                                                                 {
                                                                     IdLocalidad = fiUniv.T_ESCUELAS.ID_LOCALIDAD ?? 0,
                                                                     NombreLocalidad = fiUniv.T_ESCUELAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                     Departamento =
                                                                         new Departamento
                                                                         {
                                                                             IdDepartamento = fiUniv.T_ESCUELAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                             NombreDepartamento = fiUniv.T_ESCUELAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                         }
                                                                 }
                                                         },
                                                     CarreraFicha =
                                                         new Carrera
                                                         {
                                                             IdCarrera = fiUniv.ID_CARRERA ?? 0,
                                                             NombreCarrera = fiUniv.T_CARRERAS.N_CARRERA,
                                                             IdSector = fiUniv.T_CARRERAS.ID_SECTOR,
                                                             SectorCarrera =
                                                                 new Sector
                                                                 {
                                                                     IdSector = fiUniv.T_CARRERAS.ID_SECTOR ?? 0,
                                                                     NombreSector = fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_SECTOR.N_SECTOR
                                                                 },
                                                             IdNivel = fiUniv.T_CARRERAS.ID_NIVEL,
                                                             NivelCarrera =
                                                                 new Nivel
                                                                 {
                                                                     IdNivel = fiUniv.T_CARRERAS.ID_NIVEL ?? 0,
                                                                     NombreNivel = fiUniv.T_CARRERAS.T_NIVEL.N_NIVEL
                                                                 },
                                                             IdInstitucion = fiUniv.T_CARRERAS.ID_INSTITUCION,
                                                             InstitucionCarrera =
                                                                 new Institucion
                                                                 {
                                                                     IdInstitucion = fiUniv.T_CARRERAS.ID_INSTITUCION ?? 0,
                                                                     NombreInstitucion = fiUniv.T_CARRERAS.T_SECTOR_INSTITUCION.T_INSTITUCIONES.N_INSTITUCION
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return fichauniv;
                case (int)Enums.Programas.Ppp:
                    var ppp = (from c in _mdb.T_BENEFICIARIOS/*bene*/
                               join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                               from fiterc in
                                   _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from fiUniv in
                                   _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from fichappp in
                                   _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                               from ap in
                                   _mdb.T_APODERADOS.Where(
                                   ap =>
                                   ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                               from sucapo in
                                   _mdb.T_TABLAS_BCO_CBA.Where(
                                       sucapo =>
                                       sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                   DefaultIfEmpty()
                               where c.ID_PROGRAMA == idPrograma
                                     && beneficiarios.Contains(c.ID_BENEFICIARIO)
                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA,
                                       Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                       MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       Notificado = c.NOTIFICADO == "S" ? true : false,
                                       Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                       SucursalDescripcion = suc.DESCRIPCION,
                                       FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                       IdSucursal = cu.ID_SUCURSAL,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       Apoderado =
                                           new Apoderado
                                           {
                                               IdApoderadoNullable = ap.ID_APODERADO,
                                               Nombre = ap.NOMBRE,
                                               Apellido = ap.APELLIDO,
                                               Barrio = ap.BARRIO,
                                               Calle = ap.CALLE,
                                               Cbu = ap.CBU,
                                               CodigoPostal = ap.CODIGO_POSTAL,
                                               Cuil = ap.CUIL,
                                               Dpto = ap.DPTO,
                                               EntreCalles = ap.ENTRECALLES,
                                               FechaNacimiento = ap.FER_NAC,
                                               FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                               IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                               IdSistema = ap.ID_SISTEMA ?? 0,
                                               IdSucursal = ap.ID_SUCURSAL_BCO,
                                               Mail = ap.MAIL,
                                               Numero = ap.NUMERO,
                                               IdLocalidad = ap.ID_LOCALIDAD,
                                               LocalidadApoderado =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   },
                                               Manzana = ap.MANZANA,
                                               Monoblock = ap.MONOBLOCK,
                                               NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                               NumeroDocumento = ap.NRO_DOCUMENTO,
                                               Parcela = ap.PARCELA,
                                               Piso = ap.PISO,
                                               Sexo = ap.SEXO,
                                               TelefonoCelular = ap.TEL_CELULAR,
                                               TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                               TelefonoFijo = ap.TEL_FIJO,
                                               UsuarioBanco = ap.USUARIO_BANCO,
                                               SucursalApoderado =
                                                   new Sucursal
                                                   {
                                                       CodigoBanco = sucapo.COD_BCO_CBA,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                       Detalle = sucapo.DESCRIPCION
                                                   }
                                           },
                                       Ficha =
                                           new Ficha
                                           {

                                               Apellido = c.T_FICHAS.APELLIDO,
                                               Barrio = c.T_FICHAS.BARRIO,
                                               Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                               IdFicha = c.T_FICHAS.ID_FICHA,
                                               Calle = c.T_FICHAS.CALLE,
                                               CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                               CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                               CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = c.T_FICHAS.DPTO ?? " ",
                                               EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                               EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                               FechaNacimiento = c.T_FICHAS.FER_NAC,
                                               Mail = c.T_FICHAS.MAIL,
                                               Manzana = c.T_FICHAS.MANZANA ?? " ",
                                               Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                               Nombre = c.T_FICHAS.NOMBRE,
                                               Numero = c.T_FICHAS.NUMERO,
                                               NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                               Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                               Piso = c.T_FICHAS.PISO ?? " ",
                                               Sexo = c.T_FICHAS.SEXO,
                                               TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                               TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                               TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                               TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                               IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                               NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               FichaPpp =
                                                   new FichaPPP
                                                   {
                                                       AltaTemprana = fichappp.ALTA_TEMPRANA == null ? "N" : "S",
                                                       FechaInicioActividad = fichappp.AT_FECHA_INICIO,
                                                       FechaFinActividad = fichappp.AT_FECHA_CESE,
                                                       IdModalidadAfip = fichappp.ID_MOD_CONT_AFIP,
                                                       ModalidadAfip = fichappp.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                       Finalizado = (fichappp.FINALIZADO == "S" ? true : false),
                                                       Cursando = (fichappp.CURSANDO == "S" ? true : false),
                                                       IdEmpresa = fichappp.ID_EMPRESA,
                                                       DeseaTermNivel = (fichappp.DESEA_TERM_NIVEL == "S" ? true : false),
                                                       IdNivelEscolaridad = fichappp.ID_NIVEL_ESCOLARIDAD,
                                                       Modalidad = fichappp.MODALIDAD,
                                                       IdSede = fichappp.ID_SEDE,
                                                       Tareas = fichappp.TAREAS,
                                                       Empresa =
                                                           new Empresa
                                                           {
                                                               Calle = fichappp.T_EMPRESAS.CALLE,
                                                               CantidadEmpleados = fichappp.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                               CodigoActividad = fichappp.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                               CodigoPostal = fichappp.T_EMPRESAS.CODIGO_POSTAL,
                                                               Cuit = fichappp.T_EMPRESAS.CUIT,
                                                               DomicilioLaboralIdem = fichappp.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                               IdEmpresa = fichappp.ID_EMPRESA ?? 0,
                                                               NombreEmpresa = fichappp.T_EMPRESAS.N_EMPRESA,
                                                               Numero = fichappp.T_EMPRESAS.NUMERO,
                                                               Piso = fichappp.T_EMPRESAS.PISO,
                                                               Telefono = fichappp.T_EMPRESAS.PISO,
                                                               IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD,
                                                               LocalidadEmpresa =
                                                                   new Localidad
                                                                   {
                                                                       IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                       NombreLocalidad = fichappp.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                       Departamento =
                                                                           new Departamento
                                                                           {
                                                                               IdDepartamento =
                                                                                   fichappp.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                               NombreDepartamento =
                                                                                   fichappp.T_EMPRESAS.
                                                                                   T_LOCALIDADES.
                                                                                   T_DEPARTAMENTOS.
                                                                                   N_DEPARTAMENTO
                                                                           }
                                                                   },
                                                               Usuario =
                                                                   new UsuarioEmpresa
                                                                   {
                                                                       ApellidoUsuario = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.APELLIDO,
                                                                       Cuil = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.CUIL,
                                                                       IdUsuarioEmpresa = fichappp.T_EMPRESAS.ID_USUARIO,
                                                                       Mail = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.MAIL,
                                                                       NombreUsuario = fichappp.T_EMPRESAS.T_USUARIOS_EMPRESA.NOMBRE
                                                                   }
                                                           }
                                                   },
                                               LocalidadFicha =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento =
                                                                   c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                   N_DEPARTAMENTO
                                                           }
                                                   }
                                           }
                                   });
                    return ppp;
                case (int)Enums.Programas.PppProf:
                    var pppProf = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                                   join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                   //from fiterc in
                                   //    _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                   //from fiUniv in
                                   //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                   from cu in
                                       _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                   from suc in
                                       _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                   from mon in
                                       _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                   from iva in
                                       _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                   from nac in
                                       _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                   from fichapppProf in
                                       _mdb.T_FICHA_PPP_PROF.Where(fichapppProf => fichapppProf.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                                   from ap in
                                       _mdb.T_APODERADOS.Where(
                                       ap =>
                                       ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                                   from sucapo in
                                       _mdb.T_TABLAS_BCO_CBA.Where(
                                           sucapo =>
                                           sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                       DefaultIfEmpty()
                                   where c.ID_PROGRAMA == idPrograma 
                                   && beneficiarios.Contains(c.ID_BENEFICIARIO)
                                   select
                                       new Beneficiario
                                       {
                                           IdBeneficiario = c.ID_BENEFICIARIO,
                                           IdEstado = c.ID_ESTADO ?? 0,
                                           FechaSistema = c.FEC_SIST,
                                           IdFicha = c.ID_FICHA ?? 0,
                                           IdPrograma = c.ID_PROGRAMA ?? 0,
                                           IdUsuarioSistema = c.ID_USR_SIST,
                                           IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                           NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                           CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                           CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                           CondicionIva = iva.COD_BCO_CBA ?? "0",
                                           Nacionalidad = c.NACIONALIDAD ?? 0,
                                           Residente = c.RESIDENTE,
                                           TipoPersona = c.TIPO_PERSONA,
                                           CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                           CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                           NombreEstado = c.T_ESTADOS.N_ESTADO,
                                           Cbu = cu.CBU ?? "",
                                           ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                           NumeroCuenta = cu.NRO_CTA,
                                           Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                           MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                           TieneApoderado = c.TIENE_APODERADO,
                                           FechaNotificacion = c.FEC_NOTIF,
                                           Notificado = c.NOTIFICADO == "S" ? true : false,
                                           Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                           SucursalDescripcion = suc.DESCRIPCION,
                                           FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                           IdSucursal = cu.ID_SUCURSAL,
                                           UsuarioSistema = c.T_USUARIOS.LOGIN,
                                           FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                           FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                           Apoderado =
                                               new Apoderado
                                               {
                                                   IdApoderadoNullable = ap.ID_APODERADO,
                                                   Nombre = ap.NOMBRE,
                                                   Apellido = ap.APELLIDO,
                                                   Barrio = ap.BARRIO,
                                                   Calle = ap.CALLE,
                                                   Cbu = ap.CBU,
                                                   CodigoPostal = ap.CODIGO_POSTAL,
                                                   Cuil = ap.CUIL,
                                                   Dpto = ap.DPTO,
                                                   EntreCalles = ap.ENTRECALLES,
                                                   FechaNacimiento = ap.FER_NAC,
                                                   FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                   IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                   IdSistema = ap.ID_SISTEMA ?? 0,
                                                   IdSucursal = ap.ID_SUCURSAL_BCO,
                                                   Mail = ap.MAIL,
                                                   Numero = ap.NUMERO,
                                                   IdLocalidad = ap.ID_LOCALIDAD,
                                                   LocalidadApoderado =
                                                       new Localidad
                                                       {
                                                           IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                           NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                           Departamento =
                                                               new Departamento
                                                               {
                                                                   IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                   NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                               }
                                                       },
                                                   Manzana = ap.MANZANA,
                                                   Monoblock = ap.MONOBLOCK,
                                                   NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                   NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                   NumeroDocumento = ap.NRO_DOCUMENTO,
                                                   Parcela = ap.PARCELA,
                                                   Piso = ap.PISO,
                                                   Sexo = ap.SEXO,
                                                   TelefonoCelular = ap.TEL_CELULAR,
                                                   TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                   TelefonoFijo = ap.TEL_FIJO,
                                                   UsuarioBanco = ap.USUARIO_BANCO,
                                                   SucursalApoderado =
                                                       new Sucursal
                                                       {
                                                           CodigoBanco = sucapo.COD_BCO_CBA,
                                                           IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                           Detalle = sucapo.DESCRIPCION
                                                       }
                                               },
                                           Ficha =
                                               new Ficha
                                               {
                                                   Apellido = c.T_FICHAS.APELLIDO,
                                                   Barrio = c.T_FICHAS.BARRIO,
                                                   Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                   IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                   IdFicha = c.T_FICHAS.ID_FICHA,
                                                   Calle = c.T_FICHAS.CALLE,
                                                   CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                   CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                   CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                   Contacto = c.T_FICHAS.CONTACTO,
                                                   Cuil = c.T_FICHAS.CUIL,
                                                   DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                   TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                   TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                   TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                   TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                   Dpto = c.T_FICHAS.DPTO ?? " ",
                                                   EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                   EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                   EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                   FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                   Mail = c.T_FICHAS.MAIL,
                                                   Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                   Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                   Nombre = c.T_FICHAS.NOMBRE,
                                                   Numero = c.T_FICHAS.NUMERO,
                                                   NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                   Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                   Piso = c.T_FICHAS.PISO ?? " ",
                                                   Sexo = c.T_FICHAS.SEXO,
                                                   TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                   TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                   TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                   TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                   TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                   IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                                   NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                   FechaSistema = c.FEC_SIST,
                                                   IdUsuarioSistema = c.ID_USR_SIST,
                                                   UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                   FichaPppp =
                                                       new FichaPPPP
                                                       {
                                                           AltaTemprana = fichapppProf.ALTA_TEMPRANA,
                                                           Promedio = fichapppProf.PROMEDIO,
                                                           IdTitulo = fichapppProf.ID_TITULO,
                                                           FechaEgreso = fichapppProf.FECHA_EGRESO,
                                                           IdEmpresa = fichapppProf.ID_EMPRESA,
                                                           Modalidad = fichapppProf.MODALIDAD,
                                                           IdSede = fichapppProf.ID_SEDE,
                                                           Tareas = fichapppProf.TAREAS,
                                                           FechaInicioActividad = fichapppProf.AT_FECHA_INICIO,
                                                           FechaFinActividad = fichapppProf.AT_FECHA_CESE,
                                                           IdModalidadAFIP = fichapppProf.ID_MOD_CONT_AFIP,
                                                           ModalidadAFIP = fichapppProf.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                           Empresa =
                                                               new Empresa
                                                               {
                                                                   Calle = fichapppProf.T_EMPRESAS.CALLE,
                                                                   CantidadEmpleados = fichapppProf.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                   CodigoActividad = fichapppProf.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                   CodigoPostal = fichapppProf.T_EMPRESAS.CODIGO_POSTAL,
                                                                   Cuit = fichapppProf.T_EMPRESAS.CUIT,
                                                                   DomicilioLaboralIdem = fichapppProf.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                   IdEmpresa = fichapppProf.ID_EMPRESA ?? 0,
                                                                   NombreEmpresa = fichapppProf.T_EMPRESAS.N_EMPRESA,
                                                                   Numero = fichapppProf.T_EMPRESAS.NUMERO,
                                                                   Piso = fichapppProf.T_EMPRESAS.PISO,
                                                                   Telefono = fichapppProf.T_EMPRESAS.PISO,
                                                                   IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD,
                                                                   LocalidadEmpresa =
                                                                       new Localidad
                                                                       {
                                                                           IdLocalidad = fichapppProf.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                           NombreLocalidad = fichapppProf.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                           Departamento =
                                                                               new Departamento
                                                                               {
                                                                                   IdDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                   NombreDepartamento = fichapppProf.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                               }
                                                                       },
                                                                   IdUsuario = fichapppProf.T_EMPRESAS.ID_USUARIO,
                                                                   Usuario =
                                                                       new UsuarioEmpresa
                                                                       {
                                                                           ApellidoUsuario =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.APELLIDO,
                                                                           Cuil =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.CUIL,
                                                                           IdUsuarioEmpresa =
                                                                               fichapppProf.T_EMPRESAS.ID_USUARIO ?? 0,
                                                                           Mail =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.MAIL,
                                                                           NombreUsuario =
                                                                               fichapppProf.T_EMPRESAS.
                                                                               T_USUARIOS_EMPRESA.NOMBRE
                                                                       }
                                                               }
                                                       },
                                                   LocalidadFicha =
                                                       new Localidad
                                                       {
                                                           IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                           NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                           Departamento =
                                                               new Departamento
                                                               {
                                                                   IdDepartamento =
                                                                       c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                   NombreDepartamento =
                                                                       c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                       N_DEPARTAMENTO
                                                               }
                                                       }
                                               }
                                       });
                    return pppProf;
                case (int)Enums.Programas.Vat:
                    var vat = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                               join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                               //from fiterc in
                               //    _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               //from fiUniv in
                               //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                               from cu in
                                   _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                               from suc in
                                   _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                               from mon in
                                   _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                               from iva in
                                   _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                               from nac in
                                   _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                               from fichaVat in
                                   _mdb.T_FICHA_VAT.Where(fichaVat => fichaVat.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                               from ap in
                                   _mdb.T_APODERADOS.Where(
                                   ap =>
                                   ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                               from sucapo in
                                   _mdb.T_TABLAS_BCO_CBA.Where(
                                       sucapo =>
                                       sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                   DefaultIfEmpty()
                               where c.ID_PROGRAMA == idPrograma
                                                                    && beneficiarios.Contains(c.ID_BENEFICIARIO)
                               select
                                   new Beneficiario
                                   {
                                       IdBeneficiario = c.ID_BENEFICIARIO,
                                       IdEstado = c.ID_ESTADO ?? 0,
                                       FechaSistema = c.FEC_SIST,
                                       IdFicha = c.ID_FICHA ?? 0,
                                       IdPrograma = c.ID_PROGRAMA ?? 0,
                                       IdUsuarioSistema = c.ID_USR_SIST,
                                       IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                       CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                       CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                       CondicionIva = iva.COD_BCO_CBA ?? "0",
                                       Nacionalidad = c.NACIONALIDAD ?? 0,
                                       Residente = c.RESIDENTE,
                                       TipoPersona = c.TIPO_PERSONA,
                                       CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                       CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                       NombreEstado = c.T_ESTADOS.N_ESTADO,
                                       Cbu = cu.CBU ?? "",
                                       ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       NumeroCuenta = cu.NRO_CTA,
                                       Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                       MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                       TieneApoderado = c.TIENE_APODERADO,
                                       FechaNotificacion = c.FEC_NOTIF,
                                       Notificado = c.NOTIFICADO == "S" ? true : false,
                                       Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                       SucursalDescripcion = suc.DESCRIPCION,
                                       FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                       IdSucursal = cu.ID_SUCURSAL,
                                       UsuarioSistema = c.T_USUARIOS.LOGIN,
                                       FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                       Apoderado =
                                           new Apoderado
                                           {
                                               IdApoderadoNullable = ap.ID_APODERADO,
                                               Nombre = ap.NOMBRE,
                                               Apellido = ap.APELLIDO,
                                               Barrio = ap.BARRIO,
                                               Calle = ap.CALLE,
                                               Cbu = ap.CBU,
                                               CodigoPostal = ap.CODIGO_POSTAL,
                                               Cuil = ap.CUIL,
                                               Dpto = ap.DPTO,
                                               EntreCalles = ap.ENTRECALLES,
                                               FechaNacimiento = ap.FER_NAC,
                                               FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                               IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                               IdSistema = ap.ID_SISTEMA ?? 0,
                                               IdSucursal = ap.ID_SUCURSAL_BCO,
                                               Mail = ap.MAIL,
                                               Numero = ap.NUMERO,
                                               IdLocalidad = ap.ID_LOCALIDAD,
                                               LocalidadApoderado =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento =
                                                                   ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento =
                                                                   ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   },
                                               Manzana = ap.MANZANA,
                                               Monoblock = ap.MONOBLOCK,
                                               NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                               NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                               NumeroDocumento = ap.NRO_DOCUMENTO,
                                               Parcela = ap.PARCELA,
                                               Piso = ap.PISO,
                                               Sexo = ap.SEXO,
                                               TelefonoCelular = ap.TEL_CELULAR,
                                               TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                               TelefonoFijo = ap.TEL_FIJO,
                                               UsuarioBanco = ap.USUARIO_BANCO,
                                               SucursalApoderado =
                                                   new Sucursal
                                                   {
                                                       CodigoBanco = sucapo.COD_BCO_CBA,
                                                       IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                       Detalle = sucapo.DESCRIPCION
                                                   }
                                           },
                                       Ficha =
                                           new Ficha
                                           {
                                               Apellido = c.T_FICHAS.APELLIDO,
                                               Barrio = c.T_FICHAS.BARRIO,
                                               Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                               IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                               IdFicha = c.T_FICHAS.ID_FICHA,
                                               Calle = c.T_FICHAS.CALLE,
                                               CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                               CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                               CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                               Contacto = c.T_FICHAS.CONTACTO,
                                               Cuil = c.T_FICHAS.CUIL,
                                               DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                               TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                               TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                               TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                               TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                               Dpto = c.T_FICHAS.DPTO ?? " ",
                                               EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                               EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                               EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                               FechaNacimiento = c.T_FICHAS.FER_NAC,
                                               Mail = c.T_FICHAS.MAIL,
                                               Manzana = c.T_FICHAS.MANZANA ?? " ",
                                               Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                               Nombre = c.T_FICHAS.NOMBRE,
                                               Numero = c.T_FICHAS.NUMERO,
                                               NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                               Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                               Piso = c.T_FICHAS.PISO ?? " ",
                                               Sexo = c.T_FICHAS.SEXO,
                                               TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                               TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                               TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                               TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                               TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                               IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA,
                                               NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                               FechaSistema = c.FEC_SIST,
                                               IdUsuarioSistema = c.ID_USR_SIST,
                                               UsuarioSistema = c.T_USUARIOS.LOGIN,
                                               FichaVat =
                                                            new FichaVAT
                                                            {
                                                                AltaTemprana = fichaVat.ALTA_TEMPRANA,
                                                                AniosAportes = fichaVat.ANIOS_APORTES,
                                                                Finalizado = (fichaVat.FINALIZADO == "S" ? true : false),
                                                                Cursando = (fichaVat.CURSANDO == "S" ? true : false),
                                                                IdEmpresa = fichaVat.ID_EMPRESA,
                                                                IdNivelEscolaridad = fichaVat.ID_NIVEL_ESCOLARIDAD,
                                                                Modalidad = fichaVat.MODALIDAD,
                                                                IdSede = fichaVat.ID_SEDE,
                                                                Tareas = fichaVat.TAREAS,
                                                                FechaInicioActividad = fichaVat.AT_FECHA_INICIO,
                                                                FechaFinActividad = fichaVat.AT_FECHA_CESE,
                                                                IdModalidadAFIP = fichaVat.ID_MOD_CONT_AFIP,
                                                                ModalidadAFIP = fichaVat.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                                Empresa =
                                                                    new Empresa
                                                                    {
                                                                        Calle = fichaVat.T_EMPRESAS.CALLE,
                                                                        CantidadEmpleados = fichaVat.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                        CodigoActividad = fichaVat.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                        CodigoPostal = fichaVat.T_EMPRESAS.CODIGO_POSTAL,
                                                                        Cuit = fichaVat.T_EMPRESAS.CUIT,
                                                                        DomicilioLaboralIdem = fichaVat.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                        IdEmpresa = fichaVat.ID_EMPRESA ?? 0,
                                                                        NombreEmpresa = fichaVat.T_EMPRESAS.N_EMPRESA,
                                                                        Numero = fichaVat.T_EMPRESAS.NUMERO,
                                                                        Piso = fichaVat.T_EMPRESAS.PISO,
                                                                        Telefono = fichaVat.T_EMPRESAS.PISO,
                                                                        IdLocalidad = fichaVat.T_EMPRESAS.ID_LOCALIDAD,
                                                                        LocalidadEmpresa =
                                                                            new Localidad
                                                                            {
                                                                                IdLocalidad = fichaVat.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                NombreLocalidad = fichaVat.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                Departamento =
                                                                                    new Departamento
                                                                                    {
                                                                                        IdDepartamento =
                                                                                            fichaVat.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ??
                                                                                            0,
                                                                                        NombreDepartamento = fichaVat.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                    }
                                                                            },
                                                                        IdUsuario = fichaVat.T_EMPRESAS.ID_USUARIO,
                                                                        Usuario =
                                                                            new UsuarioEmpresa
                                                                            {
                                                                                ApellidoUsuario = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.APELLIDO,
                                                                                Cuil = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.CUIL,
                                                                                IdUsuarioEmpresa = fichaVat.T_EMPRESAS.ID_USUARIO ?? 0,
                                                                                Mail = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.MAIL,
                                                                                NombreUsuario = fichaVat.T_EMPRESAS.T_USUARIOS_EMPRESA.NOMBRE
                                                                            }
                                                                    }
                                                            },
                                               LocalidadFicha =
                                                   new Localidad
                                                   {
                                                       IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                       NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                       Departamento =
                                                           new Departamento
                                                           {
                                                               IdDepartamento = c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                               NombreDepartamento = c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                           }
                                                   }
                                           }
                                   });
                    return vat;
                case (int)Enums.Programas.ReconversionProductiva:
                    var reconversion = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                                        join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                        //from fiterc in
                                        //    _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                        //from fiUniv in
                                        //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                        from cu in
                                            _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                        from suc in
                                            _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                        from mon in
                                            _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                        from iva in
                                            _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                        from nac in
                                            _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                        from ficharecprod in
                                            _mdb.T_FICHA_REC_PROD.Where(ficharecprod => ficharecprod.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                        from ap in
                                            _mdb.T_APODERADOS.Where(
                                            ap =>
                                            ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                                        from sucapo in
                                            _mdb.T_TABLAS_BCO_CBA.Where(
                                                sucapo =>
                                                sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                            DefaultIfEmpty()
                                        where c.ID_PROGRAMA == idPrograma
                                                                             && beneficiarios.Contains(c.ID_BENEFICIARIO)
                                        select
                                            new Beneficiario
                                            {
                                                IdBeneficiario = c.ID_BENEFICIARIO,
                                                IdEstado = c.ID_ESTADO ?? 0,
                                                FechaSistema = c.FEC_SIST,
                                                IdFicha = c.ID_FICHA ?? 0,
                                                IdPrograma = c.ID_PROGRAMA ?? 0,
                                                IdUsuarioSistema = c.ID_USR_SIST,
                                                IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                                CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                                CondicionIva = iva.COD_BCO_CBA ?? "0",
                                                Nacionalidad = c.NACIONALIDAD ?? 0,
                                                Residente = c.RESIDENTE,
                                                TipoPersona = c.TIPO_PERSONA,
                                                CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                                CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                                NombreEstado = c.T_ESTADOS.N_ESTADO,
                                                Cbu = cu.CBU ?? "",
                                                ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                NumeroCuenta = cu.NRO_CTA,
                                                Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                                MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                TieneApoderado = c.TIENE_APODERADO,
                                                FechaNotificacion = c.FEC_NOTIF,
                                                Notificado = c.NOTIFICADO == "S" ? true : false,
                                                Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                                SucursalDescripcion = suc.DESCRIPCION,
                                                FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                                IdSucursal = cu.ID_SUCURSAL,
                                                UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                                FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                                Apoderado =
                                                    new Apoderado
                                                    {
                                                        IdApoderadoNullable = ap.ID_APODERADO,
                                                        Nombre = ap.NOMBRE,
                                                        Apellido = ap.APELLIDO,
                                                        Barrio = ap.BARRIO,
                                                        Calle = ap.CALLE,
                                                        Cbu = ap.CBU,
                                                        CodigoPostal = ap.CODIGO_POSTAL,
                                                        Cuil = ap.CUIL,
                                                        Dpto = ap.DPTO,
                                                        EntreCalles = ap.ENTRECALLES,
                                                        FechaNacimiento = ap.FER_NAC,
                                                        FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                        IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                        IdSistema = ap.ID_SISTEMA ?? 0,
                                                        IdSucursal = ap.ID_SUCURSAL_BCO,
                                                        Mail = ap.MAIL,
                                                        Numero = ap.NUMERO,
                                                        IdLocalidad = ap.ID_LOCALIDAD,
                                                        LocalidadApoderado =
                                                            new Localidad
                                                            {
                                                                IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                                NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                                Departamento =
                                                                    new Departamento
                                                                    {
                                                                        IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                        NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                    }
                                                            },
                                                        Manzana = ap.MANZANA,
                                                        Monoblock = ap.MONOBLOCK,
                                                        NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                        NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                        NumeroDocumento = ap.NRO_DOCUMENTO,
                                                        Parcela = ap.PARCELA,
                                                        Piso = ap.PISO,
                                                        Sexo = ap.SEXO,
                                                        TelefonoCelular = ap.TEL_CELULAR,
                                                        TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                        TelefonoFijo = ap.TEL_FIJO,
                                                        UsuarioBanco = ap.USUARIO_BANCO,
                                                        SucursalApoderado =
                                                            new Sucursal
                                                            {
                                                                CodigoBanco = sucapo.COD_BCO_CBA,
                                                                IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                                Detalle = sucapo.DESCRIPCION
                                                            }
                                                    },
                                                Ficha =
                                                    new Ficha
                                                    {

                                                        Apellido = c.T_FICHAS.APELLIDO,
                                                        Barrio = c.T_FICHAS.BARRIO,
                                                        Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                        IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                        IdFicha = c.T_FICHAS.ID_FICHA,
                                                        Calle = c.T_FICHAS.CALLE,
                                                        CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                        CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                        CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                        Contacto = c.T_FICHAS.CONTACTO,
                                                        Cuil = c.T_FICHAS.CUIL,
                                                        DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                        TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                        TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                        TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                        TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                        Dpto = c.T_FICHAS.DPTO ?? " ",
                                                        EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                        EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                        EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                        FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                        Mail = c.T_FICHAS.MAIL,
                                                        Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                        Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                        Nombre = c.T_FICHAS.NOMBRE,
                                                        Numero = c.T_FICHAS.NUMERO,
                                                        NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                        Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                        Piso = c.T_FICHAS.PISO ?? " ",
                                                        Sexo = c.T_FICHAS.SEXO,
                                                        TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                        TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                        TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                        TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                        TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                        IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                        NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                        FechaSistema = c.FEC_SIST,
                                                        IdUsuarioSistema = c.ID_USR_SIST,
                                                        UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                        FichaReconversion =
                                                            new FichaReconversion()
                                                            {
                                                                AltaTemprana = ficharecprod.ALTA_TEMPRANA,
                                                                IdEmpresa = ficharecprod.ID_EMPRESA,
                                                                Modalidad = ficharecprod.MODALIDAD,
                                                                IdSede = ficharecprod.ID_SEDE,
                                                                FechaInicioActividad = ficharecprod.AT_FECHA_INICIO,
                                                                FechaFinActividad = ficharecprod.AT_FECHA_CESE,
                                                                IdModalidadAfip = ficharecprod.ID_MOD_CONT_AFIP,
                                                                ModalidadAfip = ficharecprod.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                                IdSubprograma = ficharecprod.ID_SUBPROGRAMA,
                                                                Subprograma = ficharecprod.T_SUBPROGRAMAS.N_SUBPROGRAMA,
                                                                AportesDeLaEmpresa = ficharecprod.APORTES_EMP,
                                                                ApellidoTutor = ficharecprod.APELLIDO_TUTOR,
                                                                NombreTutor = ficharecprod.NOMBRE_TUTOR,
                                                                NroDocumentoTutor = ficharecprod.DNI_TUTOR,
                                                                PuestoTutor = ficharecprod.PUESTO_TUTOR,
                                                                Proyecto =
                                                                new Proyecto
                                                                {
                                                                    IdProyecto = ficharecprod.T_PROYECTOS.ID_PROYECTO,
                                                                    NombreProyecto = ficharecprod.T_PROYECTOS.N_PROYECTO,
                                                                    CantidadAcapacitar = ficharecprod.T_PROYECTOS.CANT_CAPACITAR,
                                                                    FechaInicioProyecto = ficharecprod.T_PROYECTOS.FEC_INICIO,
                                                                    FechaFinProyecto = ficharecprod.T_PROYECTOS.FEC_FIN,
                                                                    MesesDuracionProyecto = ficharecprod.T_PROYECTOS.MESES_DURAC
                                                                },
                                                                Sede =
                                                                new Sede
                                                                {
                                                                    IdSede = ficharecprod.ID_SEDE ?? 0,
                                                                    NombreSede = ficharecprod.T_SEDES.N_SEDE,
                                                                    Calle = ficharecprod.T_SEDES.CALLE,
                                                                    Numero = ficharecprod.T_SEDES.NUMERO,
                                                                    Piso = ficharecprod.T_SEDES.PISO,
                                                                    Dpto = ficharecprod.T_SEDES.DPTO,
                                                                    CodigoPostal = ficharecprod.T_SEDES.CODIGO_POSTAL,
                                                                    NombreLocalidad = ficharecprod.T_SEDES.T_LOCALIDADES.N_LOCALIDAD,
                                                                    ApellidoContacto = ficharecprod.T_SEDES.APE_CONTACTO,
                                                                    NombreContacto = ficharecprod.T_SEDES.NOM_CONTACTO,
                                                                    Telefono = ficharecprod.T_SEDES.TELEFONO,
                                                                    Fax = ficharecprod.T_SEDES.FAX,
                                                                    Email = ficharecprod.T_SEDES.EMAIL
                                                                },
                                                                Empresa =
                                                                    new Empresa
                                                                    {
                                                                        Calle = ficharecprod.T_EMPRESAS.CALLE,
                                                                        CantidadEmpleados =
                                                                            ficharecprod.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                        CodigoActividad =
                                                                            ficharecprod.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                        CodigoPostal = ficharecprod.T_EMPRESAS.CODIGO_POSTAL,
                                                                        Cuit = ficharecprod.T_EMPRESAS.CUIT,
                                                                        DomicilioLaboralIdem =
                                                                            ficharecprod.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                        IdEmpresa = ficharecprod.ID_EMPRESA ?? 0,
                                                                        NombreEmpresa = ficharecprod.T_EMPRESAS.N_EMPRESA,
                                                                        Numero = ficharecprod.T_EMPRESAS.NUMERO,
                                                                        Piso = ficharecprod.T_EMPRESAS.PISO,
                                                                        Telefono = ficharecprod.T_EMPRESAS.PISO,
                                                                        LocalidadEmpresa =
                                                                            new Localidad
                                                                            {
                                                                                IdLocalidad =
                                                                                    ficharecprod.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                NombreLocalidad =
                                                                                    ficharecprod.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                Departamento =
                                                                                    new Departamento
                                                                                    {
                                                                                        IdDepartamento =
                                                                                            ficharecprod.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                        NombreDepartamento =
                                                                                            ficharecprod.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                                            N_DEPARTAMENTO
                                                                                    }
                                                                            },
                                                                        Usuario =
                                                                            new UsuarioEmpresa
                                                                            {
                                                                                ApellidoUsuario =
                                                                                    ficharecprod.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.APELLIDO,
                                                                                Cuil =
                                                                                    ficharecprod.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.CUIL,
                                                                                IdUsuarioEmpresa =
                                                                                    ficharecprod.T_EMPRESAS.ID_USUARIO,
                                                                                Mail =
                                                                                    ficharecprod.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.MAIL,
                                                                                NombreUsuario =
                                                                                    ficharecprod.T_EMPRESAS.
                                                                                    T_USUARIOS_EMPRESA.NOMBRE
                                                                            }
                                                                    }
                                                            },
                                                        LocalidadFicha =
                                                            new Localidad
                                                            {
                                                                IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                                NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                Departamento =
                                                                    new Departamento
                                                                    {
                                                                        IdDepartamento =
                                                                            c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                        NombreDepartamento =
                                                                            c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                            N_DEPARTAMENTO
                                                                    }
                                                            }
                                                    }
                                            });
                    return reconversion;
                case (int)Enums.Programas.EfectoresSociales:
                    var efectores = (from c in _mdb.T_BENEFICIARIOS /*bene*/
                                     join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                     //from fiterc in
                                     //    _mdb.T_FICHA_TERCIARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     //from fiUniv in
                                     //    _mdb.T_FICHA_UNIVERSITARIO.Where(fiter => fiter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from cu in
                                         _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                                     from suc in
                                         _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                                     from mon in
                                         _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                                     from iva in
                                         _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                                     from nac in
                                         _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                                     from fichaefecsoc in
                                         _mdb.T_FICHA_EFEC_SOC.Where(fichaefecsoc => fichaefecsoc.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                                     from ap in
                                         _mdb.T_APODERADOS.Where(
                                         ap =>
                                         ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO /*&& lqapoActivos.Contains((int)ap.ID_APODERADO) &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo*/).DefaultIfEmpty()
                                     from sucapo in
                                         _mdb.T_TABLAS_BCO_CBA.Where(
                                             sucapo =>
                                             sucapo.ID_TABLA_BCO_CBA == ap.ID_SUCURSAL_BCO && sucapo.ID_TIPO_TABLA_BCO_CBA == (int)Enums.TiposTablaBcoCba.Sucursales).
                                         DefaultIfEmpty()
                                     where c.ID_PROGRAMA == idPrograma
                                                                          && beneficiarios.Contains(c.ID_BENEFICIARIO)
                                     select
                                         new Beneficiario
                                         {
                                             IdBeneficiario = c.ID_BENEFICIARIO,
                                             IdEstado = c.ID_ESTADO ?? 0,
                                             FechaSistema = c.FEC_SIST,
                                             IdFicha = c.ID_FICHA ?? 0,
                                             IdPrograma = c.ID_PROGRAMA ?? 0,
                                             IdUsuarioSistema = c.ID_USR_SIST,
                                             IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                             CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                             CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                             CondicionIva = iva.COD_BCO_CBA ?? "0",
                                             Nacionalidad = c.NACIONALIDAD ?? 0,
                                             Residente = c.RESIDENTE,
                                             TipoPersona = c.TIPO_PERSONA,
                                             CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                             CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                             NombreEstado = c.T_ESTADOS.N_ESTADO,
                                             Cbu = cu.CBU ?? "",
                                             ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             NumeroCuenta = cu.NRO_CTA,
                                             Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                             MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                             TieneApoderado = c.TIENE_APODERADO,
                                             FechaNotificacion = c.FEC_NOTIF,
                                             Notificado = c.NOTIFICADO == "S" ? true : false,
                                             Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                             SucursalDescripcion = suc.DESCRIPCION,
                                             FechaSolicitudCuenta = cu.FEC_SOL_CTA,
                                             IdSucursal = cu.ID_SUCURSAL,
                                             UsuarioSistema = c.T_USUARIOS.LOGIN,
                                             FechaInicioBeneficio = c.FEC_INICIO, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             FechaBajaBeneficio = c.FEC_BAJA, // 20/03/2013 - DI CAMPLI LEANDRO - AGREGAR AL REPORTE EXCEL DE BENEFICIARIOS
                                             Apoderado =
                                                 new Apoderado
                                                 {
                                                     IdApoderadoNullable = ap.ID_APODERADO,
                                                     Nombre = ap.NOMBRE,
                                                     Apellido = ap.APELLIDO,
                                                     Barrio = ap.BARRIO,
                                                     Calle = ap.CALLE,
                                                     Cbu = ap.CBU,
                                                     CodigoPostal = ap.CODIGO_POSTAL,
                                                     Cuil = ap.CUIL,
                                                     Dpto = ap.DPTO,
                                                     EntreCalles = ap.ENTRECALLES,
                                                     FechaNacimiento = ap.FER_NAC,
                                                     FechaSolicitudCuenta = ap.FEC_SOL_CTA,
                                                     IdEstadoApoderado = ap.ID_ESTADO_APODERADO,
                                                     IdSistema = ap.ID_SISTEMA ?? 0,
                                                     IdSucursal = ap.ID_SUCURSAL_BCO,
                                                     Mail = ap.MAIL,
                                                     Numero = ap.NUMERO,
                                                     IdLocalidad = ap.ID_LOCALIDAD,
                                                     LocalidadApoderado =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = ap.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = ap.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento = ap.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento = ap.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                 }
                                                         },
                                                     Manzana = ap.MANZANA,
                                                     Monoblock = ap.MONOBLOCK,
                                                     NombreEstadoApoderado = ap.T_ESTADOS_APODERADO.N_ESTADO_APODERADO,
                                                     NumeroCuentaBco = ap.NRO_CUENTA_BCO,
                                                     NumeroDocumento = ap.NRO_DOCUMENTO,
                                                     Parcela = ap.PARCELA,
                                                     Piso = ap.PISO,
                                                     Sexo = ap.SEXO,
                                                     TelefonoCelular = ap.TEL_CELULAR,
                                                     TipoDocumento = ap.TIPO_DOCUMENTO ?? 0,
                                                     TelefonoFijo = ap.TEL_FIJO,
                                                     UsuarioBanco = ap.USUARIO_BANCO,
                                                     SucursalApoderado =
                                                         new Sucursal
                                                         {
                                                             CodigoBanco = sucapo.COD_BCO_CBA,
                                                             IdSucursal = ap.ID_SUCURSAL_BCO ?? 0,
                                                             Detalle = sucapo.DESCRIPCION
                                                         }
                                                 },
                                             Ficha =
                                                 new Ficha
                                                 {

                                                     Apellido = c.T_FICHAS.APELLIDO,
                                                     Barrio = c.T_FICHAS.BARRIO,
                                                     Localidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     IdLocalidad = c.T_FICHAS.ID_LOCALIDAD,
                                                     IdFicha = c.T_FICHAS.ID_FICHA,
                                                     Calle = c.T_FICHAS.CALLE,
                                                     CantidadHijos = c.T_FICHAS.CANTIDAD_HIJOS,
                                                     CodigoPostal = c.T_FICHAS.CODIGO_POSTAL,
                                                     CodigoSeguridad = c.T_FICHAS.CODIGO_SEGURIDAD,
                                                     Contacto = c.T_FICHAS.CONTACTO,
                                                     Cuil = c.T_FICHAS.CUIL,
                                                     DeficienciaOtra = c.T_FICHAS.DEFICIENCIA_OTRA,
                                                     TieneDeficienciaMental = c.T_FICHAS.TIENE_DEF_MENTAL == "S" ? true : false,
                                                     TieneDeficienciaMotora = c.T_FICHAS.TIENE_DEF_MOTORA == "S" ? true : false,
                                                     TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                                     TieneDeficienciaSensorial = c.T_FICHAS.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                                     Dpto = c.T_FICHAS.DPTO ?? " ",
                                                     EntreCalles = c.T_FICHAS.ENTRECALLES ?? " ",
                                                     EsDiscapacitado = c.T_FICHAS.ES_DISCAPACITADO == "S" ? true : false,
                                                     EstadoCivil = c.T_FICHAS.ESTADO_CIVIL,
                                                     FechaNacimiento = c.T_FICHAS.FER_NAC,
                                                     Mail = c.T_FICHAS.MAIL,
                                                     Manzana = c.T_FICHAS.MANZANA ?? " ",
                                                     Monoblock = c.T_FICHAS.MONOBLOCK ?? " ",
                                                     Nombre = c.T_FICHAS.NOMBRE,
                                                     Numero = c.T_FICHAS.NUMERO,
                                                     NumeroDocumento = c.T_FICHAS.NUMERO_DOCUMENTO,
                                                     Parcela = (c.T_FICHAS.PARCELA == "0" ? " " : c.T_FICHAS.PARCELA) ?? " ",
                                                     Piso = c.T_FICHAS.PISO ?? " ",
                                                     Sexo = c.T_FICHAS.SEXO,
                                                     TelefonoCelular = c.T_FICHAS.TEL_CELULAR,
                                                     TelefonoFijo = c.T_FICHAS.TEL_FIJO,
                                                     TieneHijos = c.T_FICHAS.TIENE_HIJOS == "S" ? true : false,
                                                     TipoDocumento = c.T_FICHAS.TIPO_DOCUMENTO,
                                                     TipoFicha = c.T_FICHAS.TIPO_FICHA,
                                                     IdEstadoFicha = c.T_FICHAS.ID_ESTADO_FICHA ?? 0,
                                                     NombreEstadoFicha = c.T_FICHAS.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                     FechaSistema = c.FEC_SIST,
                                                     IdUsuarioSistema = c.ID_USR_SIST,
                                                     UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                     FichaEfectores =
                                                         new FichaEfectoresSociales()
                                                         {
                                                             AltaTemprana = fichaefecsoc.ALTA_TEMPRANA,
                                                             IdEmpresa = fichaefecsoc.ID_EMPRESA,
                                                             Modalidad = fichaefecsoc.MODALIDAD,
                                                             IdSede = fichaefecsoc.ID_SEDE,
                                                             FechaInicioActividad = fichaefecsoc.AT_FECHA_INICIO,
                                                             FechaFinActividad = fichaefecsoc.AT_FECHA_CESE,
                                                             IdModalidadAfip = fichaefecsoc.ID_MOD_CONT_AFIP,
                                                             ModalidadAfip = fichaefecsoc.T_MOD_CONT_AFIP.N_MOD_CONT_AFIP,
                                                             IdSubprograma = fichaefecsoc.ID_SUBPROGRAMA,
                                                             Subprograma = fichaefecsoc.T_SUBPROGRAMAS.N_SUBPROGRAMA,
                                                             AportesDeLaEmpresa = fichaefecsoc.APORTES_EMP,
                                                             ApellidoTutor = fichaefecsoc.APELLIDO_TUTOR,
                                                             NombreTutor = fichaefecsoc.NOMBRE_TUTOR,
                                                             NroDocumentoTutor = fichaefecsoc.DNI_TUTOR,
                                                             PuestoTutor = fichaefecsoc.PUESTO_TUTOR,
                                                             Proyecto =
                                                             new Proyecto
                                                             {
                                                                 IdProyecto = fichaefecsoc.T_PROYECTOS.ID_PROYECTO,
                                                                 NombreProyecto = fichaefecsoc.T_PROYECTOS.N_PROYECTO,
                                                                 CantidadAcapacitar = fichaefecsoc.T_PROYECTOS.CANT_CAPACITAR,
                                                                 FechaInicioProyecto = fichaefecsoc.T_PROYECTOS.FEC_INICIO,
                                                                 FechaFinProyecto = fichaefecsoc.T_PROYECTOS.FEC_FIN,
                                                                 MesesDuracionProyecto = fichaefecsoc.T_PROYECTOS.MESES_DURAC
                                                             },
                                                             Sede =
                                                             new Sede
                                                             {
                                                                 IdSede = fichaefecsoc.ID_SEDE ?? 0,
                                                                 NombreSede = fichaefecsoc.T_SEDES.N_SEDE,
                                                                 Calle = fichaefecsoc.T_SEDES.CALLE,
                                                                 Numero = fichaefecsoc.T_SEDES.NUMERO,
                                                                 Piso = fichaefecsoc.T_SEDES.PISO,
                                                                 Dpto = fichaefecsoc.T_SEDES.DPTO,
                                                                 CodigoPostal = fichaefecsoc.T_SEDES.CODIGO_POSTAL,
                                                                 NombreLocalidad = fichaefecsoc.T_SEDES.T_LOCALIDADES.N_LOCALIDAD,
                                                                 ApellidoContacto = fichaefecsoc.T_SEDES.APE_CONTACTO,
                                                                 NombreContacto = fichaefecsoc.T_SEDES.NOM_CONTACTO,
                                                                 Telefono = fichaefecsoc.T_SEDES.TELEFONO,
                                                                 Fax = fichaefecsoc.T_SEDES.FAX,
                                                                 Email = fichaefecsoc.T_SEDES.EMAIL
                                                             },
                                                             Empresa =
                                                                 new Empresa
                                                                 {
                                                                     Calle = fichaefecsoc.T_EMPRESAS.CALLE,
                                                                     CantidadEmpleados =
                                                                         fichaefecsoc.T_EMPRESAS.CANTIDAD_EMPLEADOS,
                                                                     CodigoActividad =
                                                                         fichaefecsoc.T_EMPRESAS.CODIGO_ACTIVIDAD,
                                                                     CodigoPostal = fichaefecsoc.T_EMPRESAS.CODIGO_POSTAL,
                                                                     Cuit = fichaefecsoc.T_EMPRESAS.CUIT,
                                                                     DomicilioLaboralIdem =
                                                                         fichaefecsoc.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                     IdEmpresa = fichaefecsoc.ID_EMPRESA ?? 0,
                                                                     NombreEmpresa = fichaefecsoc.T_EMPRESAS.N_EMPRESA,
                                                                     Numero = fichaefecsoc.T_EMPRESAS.NUMERO,
                                                                     Piso = fichaefecsoc.T_EMPRESAS.PISO,
                                                                     Telefono = fichaefecsoc.T_EMPRESAS.PISO,
                                                                     LocalidadEmpresa =
                                                                         new Localidad
                                                                         {
                                                                             IdLocalidad =
                                                                                 fichaefecsoc.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                             NombreLocalidad =
                                                                                 fichaefecsoc.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                             Departamento =
                                                                                 new Departamento
                                                                                 {
                                                                                     IdDepartamento =
                                                                                         fichaefecsoc.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                     NombreDepartamento =
                                                                                         fichaefecsoc.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                                         N_DEPARTAMENTO
                                                                                 }
                                                                         },
                                                                     Usuario =
                                                                         new UsuarioEmpresa
                                                                         {
                                                                             ApellidoUsuario =
                                                                                 fichaefecsoc.T_EMPRESAS.
                                                                                 T_USUARIOS_EMPRESA.APELLIDO,
                                                                             Cuil =
                                                                                 fichaefecsoc.T_EMPRESAS.
                                                                                 T_USUARIOS_EMPRESA.CUIL,
                                                                             IdUsuarioEmpresa =
                                                                                 fichaefecsoc.T_EMPRESAS.ID_USUARIO,
                                                                             Mail =
                                                                                 fichaefecsoc.T_EMPRESAS.
                                                                                 T_USUARIOS_EMPRESA.MAIL,
                                                                             NombreUsuario =
                                                                                 fichaefecsoc.T_EMPRESAS.
                                                                                 T_USUARIOS_EMPRESA.NOMBRE
                                                                         }
                                                                 }
                                                         },
                                                     LocalidadFicha =
                                                         new Localidad
                                                         {
                                                             IdLocalidad = c.T_FICHAS.ID_LOCALIDAD ?? 0,
                                                             NombreLocalidad = c.T_FICHAS.T_LOCALIDADES.N_LOCALIDAD,
                                                             Departamento =
                                                                 new Departamento
                                                                 {
                                                                     IdDepartamento =
                                                                         c.T_FICHAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                     NombreDepartamento =
                                                                         c.T_FICHAS.T_LOCALIDADES.T_DEPARTAMENTOS.
                                                                         N_DEPARTAMENTO
                                                                 }
                                                         }
                                                 }
                                         });
                    return efectores;
                default:
                    return null;
            }
        }



        public IList<IBeneficiario> GetBeneficiariosCompletoBis(int [] beneficiarios, int idPrograma)//(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado)
        {

            /*IList<IBeneficiario>*/
            var listabeneficiariototal =
               QBeneficiarioExportarBis(beneficiarios, idPrograma).ToList();//(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado).ToList();

           // return listabeneficiariototal.Where(c => idbeneficiarios.Contains(c.IdBeneficiario)).OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();
            return listabeneficiariototal.OrderBy(c => c.Ficha.Apellido).ThenBy(c => c.Ficha.Nombre).ToList();

        }



        /// <summary>
        /// 05/07/2013 - DI CAMPLI LEANDRO
        /// </summary>
        /// <param name="nombre"></param>
        /// <param name="apellido"></param>
        /// <param name="cuil"></param>
        /// <param name="numeroDocumento"></param>
        /// <param name="idPrograma"></param>
        /// <param name="conApoderados"></param>
        /// <param name="modalidad"></param>
        /// <param name="discapacitado"></param>
        /// <param name="altaTemprana"></param>
        /// <param name="idEstado"></param>
        /// <param name="apellidonombreapoderado"></param>
        /// <param name="idEtapa"></param>
        /// <param name="conCuenta"></param>
        /// <returns></returns>
        private List<Reportes_PPP> QVT_REPORTES_PPP(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta, int tipoPpp, int idSubprograma, string nrotramite)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;
            nrotramite = nrotramite ?? String.Empty;
            //List<VT_REPORTES_PPP> listabeneficiariototal;
            
            switch (conCuenta)
            {
                case "S":
                #region "Con cuenta"
                    //var listabeneficiarioConCuenta = (from ppp in _mdb.VT_REPORTES_PPP
                    //                              where ppp.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                    //                              && ppp.BEN_ID_ESTADO == (int?)Enums.EstadoBeneficiario.Activo
                    //                              && ((ppp.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ppp.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                    //                              && ((ppp.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ppp.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                    //                                    && ((ppp.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ppp.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                    //                                     (ppp.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                    //                                     (modalidad != "T" ? (ppp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                    //                                     (conApoderados != "T" ? ppp.TIENE_APODERADO == conApoderados : (ppp.TIENE_APODERADO != null || string.IsNullOrEmpty(ppp.TIENE_APODERADO))) &&
                    //                                     (discapacitado != "T" ? ppp.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                    //                                     (altaTemprana != "T" ? ppp.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                    //                                     (ppp.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                    //                                     && (ppp.IDETAPA == idEtapa || idEtapa == 0)

                    //                           && ppp.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario && (ppp.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && ppp.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && ppp.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                    //                           && (ppp.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (ppp.MODALIDAD == (int)Enums.Modalidad.Cti && ppp.ALTA_TEMPRANA == "S"))
                    //                           &&
                    //                           (
                    //                               (
                    //                                   (ppp.TIENE_APODERADO == "N" && ppp.BEN_ID_SUCURSAL != null && ppp.BEN_NRO_CTA != null)
                    //                                   ||
                    //                                   (ppp.TIENE_APODERADO == "S" && ppp.APO_ID_SUC != null && ppp.APO_NRO_CTA != null)
                    //                               )
                    //                           )
                    //                           && (ppp.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))
                    //                           && (ppp.TIPO_PPP == tipoPpp || tipoPpp == 0)
                    //                           && (ppp.ID_SUBPROGRAMA == idSubprograma || idSubprograma == 0)


                    //                              select ppp

                    //      ).ToList();

                    //return listabeneficiarioConCuenta.ToList();


                    var queryStringCC = "select ID_FICHA,APELLIDO,NOMBRE,CUIL,NUMERO_DOCUMENTO,FER_NAC,CALLE,NUMERO,PISO,DPTO,MONOBLOCK,PARCELA,MANZANA,ENTRECALLES" +
                                        ",BARRIO,CODIGO_POSTAL,ID_LOCALIDAD,N_LOCALIDAD,ID_DPTO,N_DEPARTAMENTO,TEL_FIJO,TEL_CELULAR,CONTACTO,MAIL,TIENE_HIJOS,CANTIDAD_HIJOS,ES_DISCAPACITADO,TIENE_DEF_MOTORA,TIENE_DEF_MENTAL,TIENE_DEF_SENSORIAL,TIENE_DEF_PSICOLOGICA" +
                                        ",DEFICIENCIA_OTRA,CERTIF_DISCAP,SEXO,TIPO_FICHA,ESTADO_CIVIL,FEC_SIST,ORIGEN_CARGA,NRO_TRAMITE,ID_CAJA,ID_TIPO_RECHAZO,N_TIPO_RECHAZO,ID_EST_FIC,N_ESTADO_FICHA,NIVEL_ESCOLARIDAD,MODALIDAD" +
                                    ",TAREAS,ALTA_TEMPRANA,AT_FECHA_INICIO,AT_FECHA_CESE,ID_MOD_CONT_AFIP,MOD_CONT_AFIP,FEC_MODIF,ID_EMP,RAZON_SOCIAL,EMP_CUIT,COD_ACT,CANT_EMP,EMP_CALLE,EMP_NUMERO,EMP_PISO,EMP_DPTO,EMP_CP,ID_LOC,EMP_N_LOCALIDAD,EMP_N_DEPARTAMENTO,EMP_CELULAR, EMP_MAIL, EMP_ES_COOPERATIVA" +
                                    ",EU_ID_USUARIO,EU_NOMBRE,EMP_APELLIDO,EU_MAIL,EU_TELEFONO,ID_BENEFICIARIO,BEN_ID_ESTADO,BEN_N_ESTADO,BEN_NRO_CTA,BEN_ID_SUCURSAL,BEN_COD_SUC,BEN_SUCURSAL,BEN_FEC_SOL_CTA,NOTIFICADO" +
                                    ",FEC_NOTIF,BEN_FEC_INICIO,BEN_FEC_BAJA,TIENE_APODERADO,ID_APODERADO,APO_APELLIDO,APO_NOMBRE,APO_DNI,APO_CUIL,APO_SEXO,APO_NRO_CTA,APO_ID_SUC,APO_COD_SUC,APO_SUCURSAL,APO_FEC_SOL_CTA" +
                                    ",APO_FEC_NAC,APO_CALLE,APO_NRO,APO_PISO,APO_MONOBLOCK,APO_DPTO,APO_PARCELA,APO_MANZANA,APO_ENTRE_CALLES,APO_BARRIO,APO_CP,APO_ID_LOC,APO_LOCALIDAD,APO_ID_DEPTO,APO_DEPARTAMENTO,APO_TELEFONO" +
                                    ",APO_CELULAR,APO_EMAIL,IDETAPA,AP_ID_ESTADO,AP_N_ESTADO,ID_SUBPROGRAMA,SUBPROGRAMA,TIPO_PPP,SEDE_ROTATIVA,HORARIO_ROTATIVO,N_DESCRIPCION_T,N_CURSADO_INS,EGRESO,COD_USO_INTERNO,CARGA_HORARIA" +
                                    ",CH_CUAL,ID_CARRERA,N_CARRERA,ID_INSTITUCION,N_INSTITUCION,CONSTANCIA_EGRESO,MATRICULA,CONSTANCIA_CURSO" +
                                    "  from gestion_empleos.vt_reportes_ppp ppp where (ppp.ID_EST_FIC = " + (int)Enums.EstadoFicha.Beneficiario + " )";
                    queryStringCC += " and ppp.BEN_ID_ESTADO =" + (int)Enums.EstadoBeneficiario.Activo + " and (ppp.BEN_ID_ESTADO <> " + (int)Enums.EstadoBeneficiario.BeneficiarioRetenido + " and  ppp.BEN_ID_ESTADO <> " + (int)Enums.EstadoBeneficiario.Pendiente + " and  ppp.BEN_ID_ESTADO <> " + (int)Enums.EstadoBeneficiario.Postulante + ")";
                     if (idEtapa > 0)
                    {
                        queryStringCC += " and (ppp.IDETAPA =" + idEtapa + ")";
                    }
                    
                    if (nrotramite != string.Empty)
                    {
                        queryStringCC += " and (ppp.NRO_TRAMITE like '%" + nrotramite + "%')";
                    }

                    if (tipoPpp > 0)
                    {
                        queryStringCC += " and (ppp.TIPO_PPP =" + tipoPpp + ")";
                    }
                    if (idSubprograma > 0)
                    {
                        queryStringCC += " and (ppp.ID_SUBPROGRAMA =" + idSubprograma + ")";
                    }
                    if (apellido != string.Empty)
                    {
                        queryStringCC += " and (LOWER(ppp.APELLIDO) like '%" + apellido + "%'  or (LOWER(ppp.APO_APELLIDO) like '%" + apellido + "%'))";
                    }
                    if (nombre != string.Empty)
                    {
                        queryStringCC += " and (LOWER(ppp.NOMBRE) like '%" + nombre.ToLower() + "%'  or (LOWER(ppp.APO_NOMBRE) like '%" + nombre.ToLower() + "%'))";
                    }

                    if (numeroDocumento != string.Empty)
                    {
                        queryStringCC += " and (ppp.NUMERO_DOCUMENTO ='" + numeroDocumento + "'  or ppp.APO_DNI  ='" + numeroDocumento + "')";
                    }
                    if (idEstado >0)
                    {
                        queryStringCC += " and (ppp.BEN_ID_ESTADO =" + idEstado + ")";
                    }

                    if (modalidad != "T")
                    {
                        queryStringCC += " and (ppp.MODALIDAD =" + (modalidad == "E" ? "1":"2") + ")";
                    }
           
                    if (conApoderados != "T")
                    {
                        queryStringCC += " and (nvl(ppp.TIENE_APODERADO,'N') ='" + conApoderados + "')";
                    }
                    if (discapacitado != "T")
                    {
                        queryStringCC += " and (nvl(ppp.ES_DISCAPACITADO,'N') ='" + discapacitado + "')";
                    }
                    if (altaTemprana != "T")
                    {
                        queryStringCC += " and (ppp.ALTA_TEMPRANA ='" + altaTemprana + "')";
                    }

                    if (cuil != string.Empty)
                    {
                        queryStringCC += " and (ppp.CUIL ='" + cuil + "')";
                    }

                    queryStringCC += " and (ppp.MODALIDAD =" + (int)Enums.Modalidad.Entrenamiento + " or (ppp.MODALIDAD =" +  (int)Enums.Modalidad.Cti + " and  ppp.ALTA_TEMPRANA = 'S'))";

                    queryStringCC += " and (((nvl(ppp.TIENE_APODERADO,'N') = 'N' and ppp.BEN_ID_SUCURSAL is not null and ppp.BEN_NRO_CTA is not null) or (ppp.TIENE_APODERADO = 'S' and ppp.APO_ID_SUC is not null and ppp.APO_NRO_CTA is not null)))";
                    var contactQueryCC = _mdb.ExecuteStoreQuery<Reportes_PPP>(queryStringCC).ToList();
                    return contactQueryCC.ToList();

                #endregion
                    
                case "N":
                #region "Sin cuenta"
                    //var listabeneficiarioSinCuenta = (from ppp in _mdb.VT_REPORTES_PPP
                    //                              where ppp.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                    //                              && ppp.BEN_ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo
                    //                              && (ppp.MODALIDAD == 1 || (ppp.MODALIDAD != 1 && ppp.ALTA_TEMPRANA == "S"))
                    //                              && (ppp.IDETAPA == idEtapa || idEtapa == 0)
                    //                              && (
                    //                                             (ppp.TIENE_APODERADO == "N" && ppp.BEN_ID_SUCURSAL != null && ppp.BEN_FEC_SOL_CTA == null &&
                    //                                              ppp.BEN_NRO_CTA == null)
                    //                                             ||
                    //                                             (ppp.TIENE_APODERADO == "S" && ppp.APO_ID_SUC != null && ppp.APO_FEC_SOL_CTA == null &&
                    //                                              ppp.APO_NRO_CTA == null)
                    //                                 )
                    //                             && (ppp.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))
                    //                             && (ppp.TIPO_PPP == tipoPpp || tipoPpp == 0)
                    //                             && (ppp.ID_SUBPROGRAMA == idSubprograma || idSubprograma == 0)


                    //                              select ppp

                    //      ).ToList();
                
                    //return listabeneficiarioSinCuenta.ToList();

                    var queryStringSC = "select ID_FICHA,APELLIDO,NOMBRE,CUIL,NUMERO_DOCUMENTO,FER_NAC,CALLE,NUMERO,PISO,DPTO,MONOBLOCK,PARCELA,MANZANA,ENTRECALLES" +
                                        ",BARRIO,CODIGO_POSTAL,ID_LOCALIDAD,N_LOCALIDAD,ID_DPTO,N_DEPARTAMENTO,TEL_FIJO,TEL_CELULAR,CONTACTO,MAIL,TIENE_HIJOS,CANTIDAD_HIJOS,ES_DISCAPACITADO,TIENE_DEF_MOTORA,TIENE_DEF_MENTAL,TIENE_DEF_SENSORIAL,TIENE_DEF_PSICOLOGICA" +
                                        ",DEFICIENCIA_OTRA,CERTIF_DISCAP,SEXO,TIPO_FICHA,ESTADO_CIVIL,FEC_SIST,ORIGEN_CARGA,NRO_TRAMITE,ID_CAJA,ID_TIPO_RECHAZO,N_TIPO_RECHAZO,ID_EST_FIC,N_ESTADO_FICHA,NIVEL_ESCOLARIDAD,MODALIDAD" +
                                    ",TAREAS,ALTA_TEMPRANA,AT_FECHA_INICIO,AT_FECHA_CESE,ID_MOD_CONT_AFIP,MOD_CONT_AFIP,FEC_MODIF,ID_EMP,RAZON_SOCIAL,EMP_CUIT,COD_ACT,CANT_EMP,EMP_CALLE,EMP_NUMERO,EMP_PISO,EMP_DPTO,EMP_CP,ID_LOC,EMP_N_LOCALIDAD,EMP_N_DEPARTAMENTO" +
                                    ",EU_ID_USUARIO,EU_NOMBRE,EMP_APELLIDO,EU_MAIL,EU_TELEFONO,ID_BENEFICIARIO,BEN_ID_ESTADO,BEN_N_ESTADO,BEN_NRO_CTA,BEN_ID_SUCURSAL,BEN_COD_SUC,BEN_SUCURSAL,BEN_FEC_SOL_CTA,NOTIFICADO" +
                                    ",FEC_NOTIF,BEN_FEC_INICIO,BEN_FEC_BAJA,TIENE_APODERADO,ID_APODERADO,APO_APELLIDO,APO_NOMBRE,APO_DNI,APO_CUIL,APO_SEXO,APO_NRO_CTA,APO_ID_SUC,APO_COD_SUC,APO_SUCURSAL,APO_FEC_SOL_CTA" +
                                    ",APO_FEC_NAC,APO_CALLE,APO_NRO,APO_PISO,APO_MONOBLOCK,APO_DPTO,APO_PARCELA,APO_MANZANA,APO_ENTRE_CALLES,APO_BARRIO,APO_CP,APO_ID_LOC,APO_LOCALIDAD,APO_ID_DEPTO,APO_DEPARTAMENTO,APO_TELEFONO" +
                                    ",APO_CELULAR,APO_EMAIL,IDETAPA,AP_ID_ESTADO,AP_N_ESTADO,ID_SUBPROGRAMA,SUBPROGRAMA,TIPO_PPP,SEDE_ROTATIVA,HORARIO_ROTATIVO,N_DESCRIPCION_T,N_CURSADO_INS,EGRESO,COD_USO_INTERNO,CARGA_HORARIA" +
                                    ",CH_CUAL,ID_CARRERA,N_CARRERA,ID_INSTITUCION,N_INSTITUCION,CONSTANCIA_EGRESO,MATRICULA,CONSTANCIA_CURSO" +
                                    "  from gestion_empleos.vt_reportes_ppp ppp where (ppp.ID_EST_FIC = " + (int)Enums.EstadoFicha.Beneficiario + " )";
                    queryStringSC += " and ppp.BEN_ID_ESTADO =" + (int)Enums.EstadoBeneficiario.Activo;
                     if (idEtapa > 0)
                    {
                        queryStringSC += " and (ppp.IDETAPA =" + idEtapa + ")";
                    }
                    
                    if (nrotramite != string.Empty)
                    {
                        queryStringSC += " and (ppp.NRO_TRAMITE like '%" + nrotramite + "%')";
                    }

                    if (tipoPpp > 0)
                    {
                        queryStringSC += " and (ppp.TIPO_PPP =" + tipoPpp + ")";
                    }
                    if (idSubprograma > 0)
                    {
                        queryStringSC += " and (ppp.ID_SUBPROGRAMA =" + idSubprograma + ")";
                    }
                    queryStringSC += " and (ppp.MODALIDAD =" + (int)Enums.Modalidad.Entrenamiento + " or (ppp.MODALIDAD <>" + (int)Enums.Modalidad.Entrenamiento + " and  ppp.ALTA_TEMPRANA = 'S'))";
                    queryStringSC += " and (((nvl(ppp.TIENE_APODERADO,'N') = 'N' and ppp.BEN_ID_SUCURSAL is not null and ppp.BEN_FEC_SOL_CTA is null and ppp.BEN_NRO_CTA is null) or (ppp.TIENE_APODERADO = 'S' and ppp.APO_ID_SUC is not null and ppp.APO_FEC_SOL_CTA is null and ppp.APO_NRO_CTA is null)))";
                    var contactQuerySC = _mdb.ExecuteStoreQuery<Reportes_PPP>(queryStringSC).ToList();
                    return contactQuerySC.ToList();
                #endregion    
                default:
                #region "Todos"

                    //var listabeneficiariototal = (from ppp in _mdb.VT_REPORTES_PPP
                    //                              where (ppp.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || ppp.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                    //                              && ((ppp.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ppp.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                    //                              && ((ppp.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ppp.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                    //                                    && ((ppp.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ppp.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                    //                                     (ppp.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                    //                                     (modalidad != "T" ? (ppp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                    //                                     (conApoderados != "T" ? ppp.TIENE_APODERADO == conApoderados : (ppp.TIENE_APODERADO != null || string.IsNullOrEmpty(ppp.TIENE_APODERADO))) &&
                    //                                     (discapacitado != "T" ? ppp.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                    //                                     (altaTemprana != "T" ? ppp.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                    //                                     (ppp.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                    //                                     && (ppp.IDETAPA == idEtapa || idEtapa == 0)
                    //                             && (ppp.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))
                    //                             && (ppp.TIPO_PPP == tipoPpp || tipoPpp == 0)
                    //                             && (ppp.ID_SUBPROGRAMA == idSubprograma || idSubprograma == 0)

                    //                              select ppp

                    //      ).ToList();

                    var queryString = "select ID_FICHA,APELLIDO,NOMBRE,CUIL,NUMERO_DOCUMENTO,FER_NAC,CALLE,NUMERO,PISO,DPTO,MONOBLOCK,PARCELA,MANZANA,ENTRECALLES" +
                                        ",BARRIO,CODIGO_POSTAL,ID_LOCALIDAD,N_LOCALIDAD,ID_DPTO,N_DEPARTAMENTO,TEL_FIJO,TEL_CELULAR,CONTACTO,MAIL,TIENE_HIJOS,CANTIDAD_HIJOS,ES_DISCAPACITADO,TIENE_DEF_MOTORA,TIENE_DEF_MENTAL,TIENE_DEF_SENSORIAL,TIENE_DEF_PSICOLOGICA" +
                                        ",DEFICIENCIA_OTRA,CERTIF_DISCAP,SEXO,TIPO_FICHA,ESTADO_CIVIL,FEC_SIST,ORIGEN_CARGA,NRO_TRAMITE,ID_CAJA,ID_TIPO_RECHAZO,N_TIPO_RECHAZO,ID_EST_FIC,N_ESTADO_FICHA,NIVEL_ESCOLARIDAD,MODALIDAD" +
                                    ",TAREAS,ALTA_TEMPRANA,AT_FECHA_INICIO,AT_FECHA_CESE,ID_MOD_CONT_AFIP,MOD_CONT_AFIP,FEC_MODIF,ID_EMP,RAZON_SOCIAL,EMP_CUIT,COD_ACT,CANT_EMP,EMP_CALLE,EMP_NUMERO,EMP_PISO,EMP_DPTO,EMP_CP,ID_LOC,EMP_N_LOCALIDAD,EMP_N_DEPARTAMENTO,EMP_CELULAR, EMP_MAIL, EMP_ES_COOPERATIVA" +
                                    ",EU_ID_USUARIO,EU_NOMBRE,EMP_APELLIDO,EU_MAIL,EU_TELEFONO,ID_BENEFICIARIO,BEN_ID_ESTADO,BEN_N_ESTADO,BEN_NRO_CTA,BEN_ID_SUCURSAL,BEN_COD_SUC,BEN_SUCURSAL,BEN_FEC_SOL_CTA,NOTIFICADO" +
                                    ",FEC_NOTIF,BEN_FEC_INICIO,BEN_FEC_BAJA,TIENE_APODERADO,ID_APODERADO,APO_APELLIDO,APO_NOMBRE,APO_DNI,APO_CUIL,APO_SEXO,APO_NRO_CTA,APO_ID_SUC,APO_COD_SUC,APO_SUCURSAL,APO_FEC_SOL_CTA" +
                                    ",APO_FEC_NAC,APO_CALLE,APO_NRO,APO_PISO,APO_MONOBLOCK,APO_DPTO,APO_PARCELA,APO_MANZANA,APO_ENTRE_CALLES,APO_BARRIO,APO_CP,APO_ID_LOC,APO_LOCALIDAD,APO_ID_DEPTO,APO_DEPARTAMENTO,APO_TELEFONO" +
                                    ",APO_CELULAR,APO_EMAIL,IDETAPA,AP_ID_ESTADO,AP_N_ESTADO,ID_SUBPROGRAMA,SUBPROGRAMA,TIPO_PPP,SEDE_ROTATIVA,HORARIO_ROTATIVO,N_DESCRIPCION_T,N_CURSADO_INS,EGRESO,COD_USO_INTERNO,CARGA_HORARIA" +
                                    ",CH_CUAL,ID_CARRERA,N_CARRERA,ID_INSTITUCION,N_INSTITUCION,CONSTANCIA_EGRESO,MATRICULA,CONSTANCIA_CURSO" +
                                    " from gestion_empleos.VT_REPORTES_PPP ppp where (ppp.ID_EST_FIC = " + (int)Enums.EstadoFicha.Beneficiario + " or ppp.ID_EST_FIC = " + (int)Enums.EstadoFicha.EtapaFinalizada + " )";
                    if (idEtapa > 0)
                    {
                        queryString += " and (ppp.IDETAPA =" + idEtapa + ")";
                    }
                    
                    if (nrotramite != string.Empty)
                    {
                        queryString += " and (ppp.NRO_TRAMITE like '%" + nrotramite + "%')";
                    }

                    if (tipoPpp > 0)
                    {
                        queryString += " and (ppp.TIPO_PPP =" + tipoPpp + ")";
                    }
                    if (idSubprograma > 0)
                    {
                        queryString += " and (ppp.ID_SUBPROGRAMA =" + idSubprograma + ")";
                    }
                    if (apellido != string.Empty)
                    {
                        queryString += " and (LOWER(ppp.APELLIDO) like '%" + apellido + "%'  or (LOWER(ppp.APO_APELLIDO) like '%" + apellido + "%'))";
                    }
                    if (nombre != string.Empty)
                    {
                        queryString += " and (LOWER(ppp.NOMBRE) like '%" + nombre.ToLower() + "%'  or (LOWER(ppp.APO_NOMBRE) like '%" + nombre.ToLower() + "%'))";
                    }

                    if (numeroDocumento != string.Empty)
                    {
                        queryString += " and (ppp.NUMERO_DOCUMENTO ='" + numeroDocumento + "'  or ppp.APO_DNI  ='" + numeroDocumento + "')";
                    }
                    if (idEstado >0)
                    {
                        queryString += " and (ppp.BEN_ID_ESTADO =" + idEstado + ")";
                    }

                    if (modalidad != "T")
                    {
                        queryString += " and (ppp.MODALIDAD =" + (modalidad == "E" ? "1":"2") + ")";
                    }
           
                    if (conApoderados != "T")
                    {
                        queryString += " and (nvl(ppp.TIENE_APODERADO,'N') ='" + conApoderados + "')";
                    }
                    if (discapacitado != "T")
                    {
                        queryString += " and (nvl(ppp.ES_DISCAPACITADO,'N') ='" + discapacitado + "')";
                    }
                    if (altaTemprana != "T")
                    {
                        queryString += " and (ppp.ALTA_TEMPRANA ='" + altaTemprana + "')";
                    }

                    if (cuil != string.Empty)
                    {
                        queryString += " and (ppp.CUIL ='" + cuil + "')";
                    }

                    var contactQuery = _mdb.ExecuteStoreQuery<Reportes_PPP>(queryString).ToList();
                    
                #endregion

                    //return listabeneficiariototal.ToList();
                    return contactQuery.ToList();

            }




            
        }

        public List<Reportes_PPP> getBenefPPP(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta, int tipoPpp, int idSubprograma, string nrotramite)
        {
            switch(conCuenta)
            {
                case "S":
                    return QVT_REPORTES_PPP(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta, tipoPpp, idSubprograma, nrotramite).ToList();
                case "N":
                    return QVT_REPORTES_PPP(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta, tipoPpp, idSubprograma, nrotramite).ToList();
                default:
                    return QVT_REPORTES_PPP(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta, tipoPpp, idSubprograma, nrotramite).ToList();
        
            }
        }

        private List<VT_REPORTES_TER> QVT_REPORTES_TER(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta, int idSubprograma)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;

            //List<VT_REPORTES_PPP> listabeneficiariototal;

            switch (conCuenta)
            {
                case "S":
                    #region "Con cuenta"
                    var listabeneficiarioConCuenta = (from ter in _mdb.VT_REPORTES_TER
                                                      where ter.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && ter.ID_ESTADO == (int?)Enums.EstadoBeneficiario.Activo
                                                      && ((ter.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ter.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                      && ((ter.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ter.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                            && ((ter.DNI.ToLower() == numeroDocumento.ToLower() || ter.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                             (ter.ID_ESTADO == idEstado || idEstado == 0) &&
                                                             (conApoderados != "T" ? ter.APODERADO == conApoderados : (ter.APODERADO != null || string.IsNullOrEmpty(ter.APODERADO))) &&
                                                             (discapacitado != "T" ? ter.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                             (ter.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                             && (ter.IDETAPA == idEtapa || idEtapa == 0)

                                                   && ter.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario && (ter.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && ter.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && ter.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)
                                                   && (
                                                           (ter.APODERADO == "N" && ter.ID_SUCURSAL != null && ter.NRO_CTA != null)
                                                           ||
                                                           (ter.APODERADO == "S" && ter.APO_ID_SUC != null && ter.APO_NRO_CTA != null)
                                                       )
                                                   && (ter.ID_SUBPROGRAMA == idSubprograma || idSubprograma == 0)

                                                      select ter

                          ).ToList();

                    return listabeneficiarioConCuenta.ToList();

                    #endregion

                case "N":
                    #region "Sin cuenta"
                    var listabeneficiarioSinCuenta = (from ter in _mdb.VT_REPORTES_TER
                                                      where ter.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && ter.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo
                                                      && (ter.IDETAPA == idEtapa || idEtapa == 0)
                                                      && (
                                                                     (ter.APODERADO == "N" && ter.ID_SUCURSAL != null && ter.FEC_SOL_CTA == null &&
                                                                      ter.NRO_CTA == null)
                                                                     ||
                                                                     (ter.APODERADO == "S" && ter.APO_ID_SUC != null && ter.APO_FEC_SOL_CTA == null &&
                                                                      ter.APO_NRO_CTA == null)
                                                         )
                                                      && (ter.ID_SUBPROGRAMA == idSubprograma || idSubprograma == 0)



                                                      select ter

                          ).ToList();
                    #endregion
                    return listabeneficiarioSinCuenta.ToList();

                default:
                    #region "Todos"

                    var listabeneficiariototal = (from ter in _mdb.VT_REPORTES_TER
                                                  where (ter.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || ter.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                                  && ((ter.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ter.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                  && ((ter.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ter.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                        && ((ter.DNI.ToLower() == numeroDocumento.ToLower() || ter.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                         (ter.ID_ESTADO == idEstado || idEstado == 0) &&
                                                         (conApoderados != "T" ? ter.APODERADO == conApoderados : (ter.APODERADO != null || string.IsNullOrEmpty(ter.APODERADO))) &&
                                                         (discapacitado != "T" ? ter.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                         (ter.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                         && (ter.IDETAPA == idEtapa || idEtapa == 0)
                                                   && (ter.ID_SUBPROGRAMA == idSubprograma || idSubprograma == 0)


                                                  select ter

                          ).ToList();

                    #endregion

                    return listabeneficiariototal.ToList();

            }

        }

        public List<VT_REPORTES_TER> getBenefTer(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta, int idSubprograma)
        {
            switch (conCuenta)
            {
                case "S":
                    return QVT_REPORTES_TER(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta, idSubprograma).ToList();
                case "N":
                    return QVT_REPORTES_TER(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta, idSubprograma).ToList();
                default:
                    return QVT_REPORTES_TER(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta, idSubprograma).ToList();

            }
        }


        private List<VT_REPORTES_UNI> QVT_REPORTES_UNI(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta, int idSubprograma)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;


            switch (conCuenta)
            {
                case "S":
                    #region "Con cuenta"
                    var listabeneficiarioConCuenta = (from uni in _mdb.VT_REPORTES_UNI
                                                      where uni.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && uni.ID_ESTADO == (int?)Enums.EstadoBeneficiario.Activo
                                                      && ((uni.APELLIDO.ToLower().Contains(apellido.ToLower()) || (uni.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                      && ((uni.NOMBRE.ToLower().Contains(nombre.ToLower()) || (uni.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                            && ((uni.DNI.ToLower() == numeroDocumento.ToLower() || uni.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                             (uni.ID_ESTADO == idEstado || idEstado == 0) &&
                                                             (conApoderados != "T" ? uni.APODERADO == conApoderados : (uni.APODERADO != null || string.IsNullOrEmpty(uni.APODERADO))) &&
                                                             (discapacitado != "T" ? uni.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                             (uni.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                             && (uni.IDETAPA == idEtapa || idEtapa == 0)

                                                   && uni.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario && (uni.ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && uni.ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && uni.ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)
                                                   && (
                                                           (uni.APODERADO == "N" && uni.ID_SUCURSAL != null && uni.NRO_CTA != null)
                                                           ||
                                                           (uni.APODERADO == "S" && uni.APO_ID_SUC != null && uni.APO_NRO_CTA != null)
                                                       )
                                                   && (uni.ID_SUBPROGRAMA == idSubprograma || idSubprograma == 0)



                                                      select uni

                          ).ToList();

                    return listabeneficiarioConCuenta.ToList();

                    #endregion

                case "N":
                    #region "Sin cuenta"
                    var listabeneficiarioSinCuenta = (from uni in _mdb.VT_REPORTES_UNI
                                                      where uni.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && uni.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo
                                                      && (uni.IDETAPA == idEtapa || idEtapa == 0)
                                                      && (
                                                                     (uni.APODERADO == "N" && uni.ID_SUCURSAL != null && uni.FEC_SOL_CTA == null &&
                                                                      uni.NRO_CTA == null)
                                                                     ||
                                                                     (uni.APODERADO == "S" && uni.APO_ID_SUC != null && uni.APO_FEC_SOL_CTA == null &&
                                                                      uni.APO_NRO_CTA == null)
                                                         )
                                                   && (uni.ID_SUBPROGRAMA == idSubprograma || idSubprograma == 0)



                                                      select uni

                          ).ToList();
                    #endregion
                    return listabeneficiarioSinCuenta.ToList();

                default:
                    #region "Todos"

                    var listabeneficiariototal = (from uni in _mdb.VT_REPORTES_UNI
                                                  where (uni.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || uni.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                                  && ((uni.APELLIDO.ToLower().Contains(apellido.ToLower()) || (uni.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                  && ((uni.NOMBRE.ToLower().Contains(nombre.ToLower()) || (uni.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                        && ((uni.DNI.ToLower() == numeroDocumento.ToLower() || uni.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                         (uni.ID_ESTADO == idEstado || idEstado == 0) &&
                                                         (conApoderados != "T" ? uni.APODERADO == conApoderados : (uni.APODERADO != null || string.IsNullOrEmpty(uni.APODERADO))) &&
                                                         (discapacitado != "T" ? uni.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                         (uni.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                         && (uni.IDETAPA == idEtapa || idEtapa == 0)
                                                   && (uni.ID_SUBPROGRAMA == idSubprograma || idSubprograma == 0)


                                                  select uni

                          ).ToList();

                    #endregion

                    return listabeneficiariototal.ToList();

            }
        }


        public List<VT_REPORTES_UNI> getBenefUni(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta, int idSubprograma)
        {
            switch (conCuenta)
            {
                case "S":
                    return QVT_REPORTES_UNI(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta, idSubprograma).ToList();
                case "N":
                    return QVT_REPORTES_UNI(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta, idSubprograma).ToList();
                default:
                    return QVT_REPORTES_UNI(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta, idSubprograma).ToList();

            }
        }



        private List<VT_REPORTES_PPPPROF> QVT_REPORTES_PPPprof(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;

            //List<VT_REPORTES_PPP> listabeneficiariototal;

            switch (conCuenta)
            {
                case "S":
                    #region "Con cuenta"
                    var listabeneficiarioConCuenta = (from PPPprof in _mdb.VT_REPORTES_PPPPROF
                                                      where PPPprof.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && PPPprof.BEN_ID_ESTADO == (int?)Enums.EstadoBeneficiario.Activo
                                                      && ((PPPprof.APELLIDO.ToLower().Contains(apellido.ToLower()) || (PPPprof.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                      && ((PPPprof.NOMBRE.ToLower().Contains(nombre.ToLower()) || (PPPprof.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                            && ((PPPprof.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || PPPprof.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                             (PPPprof.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                                             (modalidad != "T" ? (PPPprof.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                                             (conApoderados != "T" ? PPPprof.TIENE_APODERADO == conApoderados : (PPPprof.TIENE_APODERADO != null || string.IsNullOrEmpty(PPPprof.TIENE_APODERADO))) &&
                                                             (discapacitado != "T" ? PPPprof.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                             (altaTemprana != "T" ? PPPprof.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                                             (PPPprof.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                             && (PPPprof.IDETAPA == idEtapa || idEtapa == 0)

                                                   && PPPprof.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario && (PPPprof.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && PPPprof.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && PPPprof.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                                   && (PPPprof.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (PPPprof.MODALIDAD == (int)Enums.Modalidad.Cti && PPPprof.ALTA_TEMPRANA == "S"))
                                                   &&
                                                   (
                                                       (
                                                           (PPPprof.TIENE_APODERADO == "N" && PPPprof.BEN_ID_SUCURSAL != null && PPPprof.BEN_NRO_CTA != null)
                                                           ||
                                                           (PPPprof.TIENE_APODERADO == "S" && PPPprof.APO_ID_SUC != null && PPPprof.APO_NRO_CTA != null)
                                                       )
                                                   )


                                                      select PPPprof

                          ).ToList();

                    return listabeneficiarioConCuenta.ToList();

                    #endregion

                case "N":
                    #region "Sin cuenta"
                    var listabeneficiarioSinCuenta = (from PPPprof in _mdb.VT_REPORTES_PPPPROF
                                                      where PPPprof.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && PPPprof.BEN_ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo
                                                      && (PPPprof.MODALIDAD == 1 || (PPPprof.MODALIDAD != 1 && PPPprof.ALTA_TEMPRANA == "S"))
                                                      && (PPPprof.IDETAPA == idEtapa || idEtapa == 0)
                                                      && (
                                                                     (PPPprof.TIENE_APODERADO == "N" && PPPprof.BEN_ID_SUCURSAL != null && PPPprof.BEN_FEC_SOL_CTA == null &&
                                                                      PPPprof.BEN_NRO_CTA == null)
                                                                     ||
                                                                     (PPPprof.TIENE_APODERADO == "S" && PPPprof.APO_ID_SUC != null && PPPprof.APO_FEC_SOL_CTA == null &&
                                                                      PPPprof.APO_NRO_CTA == null)
                                                         )



                                                      select PPPprof

                          ).ToList();
                    #endregion
                    return listabeneficiarioSinCuenta.ToList();

                default:
                    #region "Todos"

                    var listabeneficiariototal = (from PPPprof in _mdb.VT_REPORTES_PPPPROF
                                                  where (PPPprof.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || PPPprof.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                                  && ((PPPprof.APELLIDO.ToLower().Contains(apellido.ToLower()) || (PPPprof.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                  && ((PPPprof.NOMBRE.ToLower().Contains(nombre.ToLower()) || (PPPprof.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                        && ((PPPprof.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || PPPprof.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                         (PPPprof.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                                         (modalidad != "T" ? (PPPprof.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                                         (conApoderados != "T" ? PPPprof.TIENE_APODERADO == conApoderados : (PPPprof.TIENE_APODERADO != null || string.IsNullOrEmpty(PPPprof.TIENE_APODERADO))) &&
                                                         (discapacitado != "T" ? PPPprof.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                         (altaTemprana != "T" ? PPPprof.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                                         (PPPprof.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                         && (PPPprof.IDETAPA == idEtapa || idEtapa == 0)


                                                  select PPPprof

                          ).ToList();

                    #endregion

                    return listabeneficiariototal.ToList();

            }

        }

        public List<VT_REPORTES_PPPPROF> getBenefPPPprof(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta)
        {
            switch (conCuenta)
            {
                case "S":
                    return QVT_REPORTES_PPPprof(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();
                case "N":
                    return QVT_REPORTES_PPPprof(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();
                default:
                    return QVT_REPORTES_PPPprof(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();

            }
        }

        private List<VT_REPORTES_VAT> QVT_REPORTES_VAT(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;

            //List<VT_REPORTES_PPP> listabeneficiariototal;

            switch (conCuenta)
            {
                case "S":
                    #region "Con cuenta"
                    var listabeneficiarioConCuenta = (from VAT in _mdb.VT_REPORTES_VAT
                                                      where VAT.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && VAT.BEN_ID_ESTADO == (int?)Enums.EstadoBeneficiario.Activo
                                                      && ((VAT.APELLIDO.ToLower().Contains(apellido.ToLower()) || (VAT.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                      && ((VAT.NOMBRE.ToLower().Contains(nombre.ToLower()) || (VAT.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                            && ((VAT.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || VAT.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                             (VAT.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                                             (modalidad != "T" ? (VAT.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                                             (conApoderados != "T" ? VAT.TIENE_APODERADO == conApoderados : (VAT.TIENE_APODERADO != null || string.IsNullOrEmpty(VAT.TIENE_APODERADO))) &&
                                                             (altaTemprana != "T" ? VAT.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                                             (VAT.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                             && (VAT.IDETAPA == idEtapa || idEtapa == 0)

                                                   && VAT.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario && (VAT.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && VAT.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && VAT.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                                   && (VAT.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (VAT.MODALIDAD == (int)Enums.Modalidad.Cti && VAT.ALTA_TEMPRANA == "S"))
                                                   &&
                                                   (
                                                       (
                                                           (VAT.TIENE_APODERADO == "N" && VAT.BEN_ID_SUCURSAL != null && VAT.BEN_NRO_CTA != null)
                                                           ||
                                                           (VAT.TIENE_APODERADO == "S" && VAT.APO_ID_SUC != null && VAT.APO_NRO_CTA != null)
                                                       )
                                                   )


                                                      select VAT

                          ).ToList();

                    return listabeneficiarioConCuenta.ToList();

                    #endregion

                case "N":
                    #region "Sin cuenta"
                    var listabeneficiarioSinCuenta = (from VAT in _mdb.VT_REPORTES_VAT
                                                      where VAT.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && VAT.BEN_ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo
                                                      && (VAT.MODALIDAD == 1 || (VAT.MODALIDAD != 1 && VAT.ALTA_TEMPRANA == "S"))
                                                      && (VAT.IDETAPA == idEtapa || idEtapa == 0)
                                                      && (
                                                                     (VAT.TIENE_APODERADO == "N" && VAT.BEN_ID_SUCURSAL != null && VAT.BEN_FEC_SOL_CTA == null &&
                                                                      VAT.BEN_NRO_CTA == null)
                                                                     ||
                                                                     (VAT.TIENE_APODERADO == "S" && VAT.APO_ID_SUC != null && VAT.APO_FEC_SOL_CTA == null &&
                                                                      VAT.APO_NRO_CTA == null)
                                                         )



                                                      select VAT

                          ).ToList();
                    #endregion
                    return listabeneficiarioSinCuenta.ToList();

                default:
                    #region "Todos"

                    var listabeneficiariototal = (from VAT in _mdb.VT_REPORTES_VAT
                                                  where (VAT.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || VAT.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                                  && ((VAT.APELLIDO.ToLower().Contains(apellido.ToLower()) || (VAT.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                  && ((VAT.NOMBRE.ToLower().Contains(nombre.ToLower()) || (VAT.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                        && ((VAT.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || VAT.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                         (VAT.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                                         (modalidad != "T" ? (VAT.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                                         (conApoderados != "T" ? VAT.TIENE_APODERADO == conApoderados : (VAT.TIENE_APODERADO != null || string.IsNullOrEmpty(VAT.TIENE_APODERADO))) &&
                                                         (altaTemprana != "T" ? VAT.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                                         (VAT.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                         && (VAT.IDETAPA == idEtapa || idEtapa == 0)


                                                  select VAT

                          ).ToList();

                    #endregion

                    return listabeneficiariototal.ToList();

            }

        }

        public List<VT_REPORTES_VAT> getBenefVat(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta)
        {
            switch (conCuenta)
            {
                case "S":
                    return QVT_REPORTES_VAT(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();
                case "N":
                    return QVT_REPORTES_VAT(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();
                default:
                    return QVT_REPORTES_VAT(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();

            }
        }


        private List<VT_REPORTES_REC_PROD> QVT_REPORTES_REC_PROD(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;

            //List<VT_REPORTES_PPP> listabeneficiariototal;

            switch (conCuenta)
            {
                case "S":
                    #region "Con cuenta"
                    var listabeneficiarioConCuenta = (from REC in _mdb.VT_REPORTES_REC_PROD
                                                      where REC.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && REC.BEN_ID_ESTADO == (int?)Enums.EstadoBeneficiario.Activo
                                                      && ((REC.APELLIDO.ToLower().Contains(apellido.ToLower()) || (REC.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                      && ((REC.NOMBRE.ToLower().Contains(nombre.ToLower()) || (REC.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                            && ((REC.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || REC.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                             (REC.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                                             (modalidad != "T" ? (REC.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                                             (conApoderados != "T" ? REC.TIENE_APODERADO == conApoderados : (REC.TIENE_APODERADO != null || string.IsNullOrEmpty(REC.TIENE_APODERADO))) &&
                                                             (discapacitado != "T" ? REC.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                             (altaTemprana != "T" ? REC.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                                             (REC.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                             && (REC.IDETAPA == idEtapa || idEtapa == 0)

                                                   && REC.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario && (REC.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && REC.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && REC.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                                   && (REC.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (REC.MODALIDAD == (int)Enums.Modalidad.Cti && REC.ALTA_TEMPRANA == "S"))
                                                   &&
                                                   (
                                                       (
                                                           (REC.TIENE_APODERADO == "N" && REC.BEN_ID_SUCURSAL != null && REC.BEN_NRO_CTA != null)
                                                           ||
                                                           (REC.TIENE_APODERADO == "S" && REC.APO_ID_SUC != null && REC.APO_NRO_CTA != null)
                                                       )
                                                   )


                                                      select REC

                          ).ToList();

                    return listabeneficiarioConCuenta.ToList();

                    #endregion

                case "N":
                    #region "Sin cuenta"
                    var listabeneficiarioSinCuenta = (from REC in _mdb.VT_REPORTES_REC_PROD
                                                      where REC.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && REC.BEN_ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo
                                                      && (REC.MODALIDAD == 1 || (REC.MODALIDAD != 1 && REC.ALTA_TEMPRANA == "S"))
                                                      && (REC.IDETAPA == idEtapa || idEtapa == 0)
                                                      && (
                                                                     (REC.TIENE_APODERADO == "N" && REC.BEN_ID_SUCURSAL != null && REC.BEN_FEC_SOL_CTA == null &&
                                                                      REC.BEN_NRO_CTA == null)
                                                                     ||
                                                                     (REC.TIENE_APODERADO == "S" && REC.APO_ID_SUC != null && REC.APO_FEC_SOL_CTA == null &&
                                                                      REC.APO_NRO_CTA == null)
                                                         )



                                                      select REC

                          ).ToList();
                    #endregion
                    return listabeneficiarioSinCuenta.ToList();

                default:
                    #region "Todos"

                    var listabeneficiariototal = (from REC in _mdb.VT_REPORTES_REC_PROD
                                                  where (REC.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || REC.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                                  && ((REC.APELLIDO.ToLower().Contains(apellido.ToLower()) || (REC.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                  && ((REC.NOMBRE.ToLower().Contains(nombre.ToLower()) || (REC.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                        && ((REC.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || REC.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                         (REC.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                                         (modalidad != "T" ? (REC.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                                         (conApoderados != "T" ? REC.TIENE_APODERADO == conApoderados : (REC.TIENE_APODERADO != null || string.IsNullOrEmpty(REC.TIENE_APODERADO))) &&
                                                         (discapacitado != "T" ? REC.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                         (altaTemprana != "T" ? REC.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                                         (REC.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                         && (REC.IDETAPA == idEtapa || idEtapa == 0)


                                                  select REC

                          ).ToList();

                    #endregion

                    return listabeneficiariototal.ToList();

            }

        }


        public List<VT_REPORTES_REC_PROD> getBenefRec_Prod(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta)
        {
            switch (conCuenta)
            {
                case "S":
                    return QVT_REPORTES_REC_PROD(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();
                case "N":
                    return QVT_REPORTES_REC_PROD(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();
                default:
                    return QVT_REPORTES_REC_PROD(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();

            }
        }



        private List<VT_REPORTES_EFEC_SOC> QVT_REPORTES_EFEC_SOC(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;

            //List<VT_REPORTES_PPP> listabeneficiariototal;

            switch (conCuenta)
            {
                case "S":
                    #region "Con cuenta"
                    var listabeneficiarioConCuenta = (from EFE in _mdb.VT_REPORTES_EFEC_SOC
                                                      where EFE.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && EFE.BEN_ID_ESTADO == (int?)Enums.EstadoBeneficiario.Activo
                                                      && ((EFE.APELLIDO.ToLower().Contains(apellido.ToLower()) || (EFE.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                      && ((EFE.NOMBRE.ToLower().Contains(nombre.ToLower()) || (EFE.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                            && ((EFE.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || EFE.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                             (EFE.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                                             (modalidad != "T" ? (EFE.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                                             (conApoderados != "T" ? EFE.TIENE_APODERADO == conApoderados : (EFE.TIENE_APODERADO != null || string.IsNullOrEmpty(EFE.TIENE_APODERADO))) &&
                                                             (altaTemprana != "T" ? EFE.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                                             (EFE.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                             && (EFE.IDETAPA == idEtapa || idEtapa == 0)

                                                   && EFE.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario && (EFE.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && EFE.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && EFE.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                                   && (EFE.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (EFE.MODALIDAD == (int)Enums.Modalidad.Cti && EFE.ALTA_TEMPRANA == "S"))
                                                   &&
                                                   (
                                                       (
                                                           (EFE.TIENE_APODERADO == "N" && EFE.BEN_ID_SUCURSAL != null && EFE.BEN_NRO_CTA != null)
                                                           ||
                                                           (EFE.TIENE_APODERADO == "S" && EFE.APO_ID_SUC != null && EFE.APO_NRO_CTA != null)
                                                       )
                                                   )


                                                      select EFE

                          ).ToList();

                    return listabeneficiarioConCuenta.ToList();

                    #endregion

                case "N":
                    #region "Sin cuenta"
                    var listabeneficiarioSinCuenta = (from EFE in _mdb.VT_REPORTES_EFEC_SOC
                                                      where EFE.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && EFE.BEN_ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo
                                                      && (EFE.MODALIDAD == 1 || (EFE.MODALIDAD != 1 && EFE.ALTA_TEMPRANA == "S"))
                                                      && (EFE.IDETAPA == idEtapa || idEtapa == 0)
                                                      && (
                                                                     (EFE.TIENE_APODERADO == "N" && EFE.BEN_ID_SUCURSAL != null && EFE.BEN_FEC_SOL_CTA == null &&
                                                                      EFE.BEN_NRO_CTA == null)
                                                                     ||
                                                                     (EFE.TIENE_APODERADO == "S" && EFE.APO_ID_SUC != null && EFE.APO_FEC_SOL_CTA == null &&
                                                                      EFE.APO_NRO_CTA == null)
                                                         )



                                                      select EFE

                          ).ToList();
                    #endregion
                    return listabeneficiarioSinCuenta.ToList();

                default:
                    #region "Todos"

                    var listabeneficiariototal = (from EFE in _mdb.VT_REPORTES_EFEC_SOC
                                                  where (EFE.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || EFE.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                                  && ((EFE.APELLIDO.ToLower().Contains(apellido.ToLower()) || (EFE.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                  && ((EFE.NOMBRE.ToLower().Contains(nombre.ToLower()) || (EFE.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                        && ((EFE.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || EFE.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                         (EFE.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                                         (modalidad != "T" ? (EFE.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                                         (conApoderados != "T" ? EFE.TIENE_APODERADO == conApoderados : (EFE.TIENE_APODERADO != null || string.IsNullOrEmpty(EFE.TIENE_APODERADO))) &&
                                                         (altaTemprana != "T" ? EFE.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                                         (EFE.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                         && (EFE.IDETAPA == idEtapa || idEtapa == 0)


                                                  select EFE

                          ).ToList();

                    #endregion

                    return listabeneficiariototal.ToList();

            }

        }


        public List<VT_REPORTES_EFEC_SOC> getBenefEfec_Soc(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta)
        {
            switch (conCuenta)
            {
                case "S":
                    return QVT_REPORTES_EFEC_SOC(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();
                case "N":
                    return QVT_REPORTES_EFEC_SOC(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();
                default:
                    return QVT_REPORTES_EFEC_SOC(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();

            }
        }


        private List<VT_REPORTES_CONF_VOS> QVT_REPORTES_CONF_VOS(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta)
        {
            nombre = nombre ?? String.Empty;
            apellido = apellido ?? String.Empty;
            cuil = cuil ?? String.Empty;
            numeroDocumento = numeroDocumento ?? String.Empty;
            modalidad = modalidad ?? "T";
            conApoderados = conApoderados ?? "T";
            discapacitado = discapacitado ?? "T";
            altaTemprana = altaTemprana ?? "T";
            apellidonombreapoderado = apellidonombreapoderado ?? String.Empty;

            //List<VT_REPORTES_PPP> listabeneficiariototal;

            switch (conCuenta)
            {
                case "S":
                    #region "Con cuenta"
                    var listabeneficiarioConCuenta = (from CON in _mdb.VT_REPORTES_CONF_VOS
                                                      where CON.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && CON.BEN_ID_ESTADO == (int?)Enums.EstadoBeneficiario.Activo
                                                      && ((CON.APELLIDO.ToLower().Contains(apellido.ToLower()) || (CON.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                      && ((CON.NOMBRE.ToLower().Contains(nombre.ToLower()) || (CON.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                            && ((CON.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || CON.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                             (CON.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                                             (modalidad != "T" ? (CON.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                                             (conApoderados != "T" ? CON.TIENE_APODERADO == conApoderados : (CON.TIENE_APODERADO != null || string.IsNullOrEmpty(CON.TIENE_APODERADO))) &&
                                                             (discapacitado != "T" ? CON.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                             (altaTemprana != "T" ? CON.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                                             (CON.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                             && (CON.IDETAPA == idEtapa || idEtapa == 0)

                                                   && CON.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario && (CON.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.BeneficiarioRetenido && CON.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.Pendiente && CON.BEN_ID_ESTADO != (int)Enums.EstadoBeneficiario.Postulante)  /*&& c.ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo*/
                                                   && (CON.MODALIDAD == (int)Enums.Modalidad.Entrenamiento || (CON.MODALIDAD == (int)Enums.Modalidad.Cti && CON.ALTA_TEMPRANA == "S"))
                                                   &&
                                                   (
                                                       (
                                                           (CON.TIENE_APODERADO == "N" && CON.BEN_ID_SUCURSAL != null && CON.BEN_NRO_CTA != null)
                                                           ||
                                                           (CON.TIENE_APODERADO == "S" && CON.APO_ID_SUC != null && CON.APO_NRO_CTA != null)
                                                       )
                                                   )


                                                      select CON

                          ).ToList();

                    return listabeneficiarioConCuenta.ToList();

                    #endregion

                case "N":
                    #region "Sin cuenta"
                    var listabeneficiarioSinCuenta = (from CON in _mdb.VT_REPORTES_CONF_VOS
                                                      where CON.ID_EST_FIC == (int?)Enums.EstadoFicha.Beneficiario
                                                      && CON.BEN_ID_ESTADO == (int)Enums.EstadoBeneficiario.Activo
                                                      && (CON.MODALIDAD == 1 || (CON.MODALIDAD != 1 && CON.ALTA_TEMPRANA == "S"))
                                                      && (CON.IDETAPA == idEtapa || idEtapa == 0)
                                                      && (
                                                                     (CON.TIENE_APODERADO == "N" && CON.BEN_ID_SUCURSAL != null && CON.BEN_FEC_SOL_CTA == null &&
                                                                      CON.BEN_NRO_CTA == null)
                                                                     ||
                                                                     (CON.TIENE_APODERADO == "S" && CON.APO_ID_SUC != null && CON.APO_FEC_SOL_CTA == null &&
                                                                      CON.APO_NRO_CTA == null)
                                                         )



                                                      select CON

                          ).ToList();
                    #endregion
                    return listabeneficiarioSinCuenta.ToList();

                default:
                    #region "Todos"

                    var listabeneficiariototal = (from CON in _mdb.VT_REPORTES_CONF_VOS
                                                  where (CON.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || CON.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                                  && ((CON.APELLIDO.ToLower().Contains(apellido.ToLower()) || (CON.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                  && ((CON.NOMBRE.ToLower().Contains(nombre.ToLower()) || (CON.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                        && ((CON.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || CON.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                         (CON.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                                         (modalidad != "T" ? (CON.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&
                                                         (conApoderados != "T" ? CON.TIENE_APODERADO == conApoderados : (CON.TIENE_APODERADO != null || string.IsNullOrEmpty(CON.TIENE_APODERADO))) &&
                                                         (discapacitado != "T" ? CON.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                         (altaTemprana != "T" ? CON.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&
                                                         (CON.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                         && (CON.IDETAPA == idEtapa || idEtapa == 0)


                                                  select CON

                          ).ToList();

                    #endregion

                    return listabeneficiariototal.ToList();

            }

        }


        public List<VT_REPORTES_CONF_VOS> getBenefConfVos(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string conCuenta)
        {
            switch (conCuenta)
            {
                case "S":
                    return QVT_REPORTES_CONF_VOS(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();
                case "N":
                    return QVT_REPORTES_CONF_VOS(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();
                default:
                    return QVT_REPORTES_CONF_VOS(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado, idEtapa, conCuenta).ToList();

            }
        }



        public IList<IBeneficiario> GetBeneficiarioFichaAll(int idFicha)
        {
            return
                QBeneficiarioSimpleAllStates().Where(
                    c => c.IdFicha == idFicha).ToList();
        }

        private IQueryable<IBeneficiario> QBeneficiarioSimpleAllStates()
        {

            return
                _mdb.T_BENEFICIARIOS.Select(
                    c => new Beneficiario
                    {
                        IdBeneficiario = c.ID_BENEFICIARIO,
                        IdFicha = c.ID_FICHA ?? 0,
                        IdEstado = c.ID_ESTADO ?? 0,
                        Programa = c.T_PROGRAMAS.N_PROGRAMA,
                        IdPrograma = c.ID_PROGRAMA ?? 0,
                        NombreEstado = c.T_ESTADOS.N_ESTADO,
                        TieneApoderado = c.TIENE_APODERADO,
                        //Modalidad = (c.T_FICHAS.T_FICHA_PPP.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                        //AltaTemprana = c.T_FICHAS.T_FICHA_PPP.ALTA_TEMPRANA == null ? "N" : "S",
                        UsuarioSistema = c.T_USUARIOS.LOGIN,
                        IdUsuarioSistema = c.ID_USR_SIST,

                    });
        }




        private IEnumerable<IBeneficiario> QBeneficiarioSinCuentas(int idPrograma)
        {
            switch(idPrograma)
            {

                case (int)Enums.TipoFicha.EfectoresSociales:

                    return
                            from c in _mdb.T_BENEFICIARIOS.Where(c => c.ID_PROGRAMA == (int)Enums.TipoFicha.EfectoresSociales)
                            join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                            from cu in
                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                            from suc in
                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                            from mon in
                                _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                            from iva in
                                _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                            from nac in
                                _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                            from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                            from prog in _mdb.T_PROGRAMAS.Where(prog => prog.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                            from efe in _mdb.T_FICHA_EFEC_SOC.Where(efe => efe.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                            from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == efe.ID_SUBPROGRAMA).DefaultIfEmpty()

                            where
                                 (
                                     (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                                      cu.NRO_CTA == null)
                                     ||
                                     (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                                      ap.NRO_CUENTA_BCO == null)
                                 )
                            select
                                new Beneficiario
                                {
                                    IdBeneficiario = c.ID_BENEFICIARIO,
                                    IdEstado = c.ID_ESTADO ?? 0,
                                    FechaSistema = c.FEC_SIST,
                                    IdFicha = c.ID_FICHA ?? 0,
                                    IdPrograma = prog.ID_PROGRAMA,
                                    IdUsuarioSistema = c.ID_USR_SIST,
                                    IdConvenio = prog.CONVENIO_BCO_CBA,
                                    NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                    CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                    CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                    CondicionIva = "01",
                                    Nacionalidad = c.NACIONALIDAD ?? 0,
                                    Residente = c.RESIDENTE,
                                    TipoPersona = c.TIPO_PERSONA,
                                    CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                    CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                    NombreEstado = c.T_ESTADOS.N_ESTADO,
                                    Cbu = cu.CBU ?? "",
                                    ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                    NumeroCuenta = cu.NRO_CTA ?? 0,
                                    Programa = prog.N_PROGRAMA,
                                    MontoPrograma = prog.MONTO_PROG ?? 0,
                                    TieneApoderado = c.TIENE_APODERADO,
                                    Modalidad = (efe.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                    AltaTemprana = efe.ALTA_TEMPRANA == null ? "N" : "S",

                                    ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                    UsuarioSistema = c.T_USUARIOS.LOGIN,
                                    FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                    FechaBajaBeneficio = c.FEC_BAJA,
                                    idSubprograma = efe.ID_SUBPROGRAMA,
                                    Apoderado = new Apoderado
                                    {
                                        Apellido = ap.APELLIDO ?? " ",
                                        Nombre = ap.NOMBRE ?? " ",
                                        NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                    },
                                    Ficha = new Ficha
                                    {
                                        Apellido = f.APELLIDO,
                                        Barrio = f.BARRIO,
                                        Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                        IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                        IdFicha = f.ID_FICHA,
                                        Calle = (f.CALLE ?? "").Trim(),
                                        CantidadHijos = f.CANTIDAD_HIJOS,
                                        CodigoPostal = f.CODIGO_POSTAL,
                                        CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                        Contacto = f.CONTACTO,
                                        Cuil = f.CUIL,
                                        DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                        TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                        TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                        TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                        TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                        Dpto = f.DPTO ?? " ",
                                        EntreCalles = f.ENTRECALLES ?? " ",
                                        EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                        EstadoCivil = f.ESTADO_CIVIL,
                                        FechaNacimiento = f.FER_NAC,
                                        Mail = f.MAIL,
                                        Manzana = f.MANZANA ?? " ",
                                        Monoblock = f.MONOBLOCK ?? " ",
                                        Nombre = f.NOMBRE,
                                        Numero = f.NUMERO ?? " ",
                                        NumeroDocumento = f.NUMERO_DOCUMENTO,
                                        Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                        Piso = f.PISO ?? " ",
                                        Sexo = f.SEXO,
                                        TelefonoCelular = f.TEL_CELULAR,
                                        TelefonoFijo = f.TEL_FIJO,
                                        TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                        TipoDocumento = f.TIPO_DOCUMENTO,
                                        TipoFicha = f.TIPO_FICHA,
                                        IdEstadoFicha = f.ID_ESTADO_FICHA ?? 0,
                                        FechaSistema = c.FEC_SIST,
                                        IdUsuarioSistema = c.ID_USR_SIST,
                                        UsuarioSistema = c.T_USUARIOS.LOGIN,
                                        NroTramite = f.NRO_TRAMITE ?? " ",
                                        idEtapa = f.ID_ETAPA ?? 0
                                    }
                                };

                case (int)Enums.TipoFicha.ReconversionProductiva:

                    return
                            from c in _mdb.T_BENEFICIARIOS.Where(c => c.ID_PROGRAMA == (int)Enums.TipoFicha.ReconversionProductiva)
                            join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                            from cu in
                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                            from suc in
                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                            from mon in
                                _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                            from iva in
                                _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                            from nac in
                                _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                            from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                            from prog in _mdb.T_PROGRAMAS.Where(prog => prog.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                            from reco in _mdb.T_FICHA_REC_PROD.Where(reco => reco.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                            from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == reco.ID_SUBPROGRAMA).DefaultIfEmpty()

                            where
                                 (
                                     (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                                      cu.NRO_CTA == null)
                                     ||
                                     (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                                      ap.NRO_CUENTA_BCO == null)
                                 )
                             select
                                 new Beneficiario
                                 {
                                     IdBeneficiario = c.ID_BENEFICIARIO,
                                     IdEstado = c.ID_ESTADO ?? 0,
                                     FechaSistema = c.FEC_SIST,
                                     IdFicha = c.ID_FICHA ?? 0,
                                     IdPrograma = prog.ID_PROGRAMA,
                                     IdUsuarioSistema = c.ID_USR_SIST,
                                     IdConvenio = prog.CONVENIO_BCO_CBA,
                                     NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                     CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                     CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                     CondicionIva = "01",
                                     Nacionalidad = c.NACIONALIDAD ?? 0,
                                     Residente = c.RESIDENTE,
                                     TipoPersona = c.TIPO_PERSONA,
                                     CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                     CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                     NombreEstado = c.T_ESTADOS.N_ESTADO,
                                     Cbu = cu.CBU ?? "",
                                     ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                     NumeroCuenta = cu.NRO_CTA ?? 0,
                                     Programa = prog.N_PROGRAMA,
                                     MontoPrograma = prog.MONTO_PROG ?? 0,
                                     TieneApoderado = c.TIENE_APODERADO,
                                     Modalidad = (reco.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                     AltaTemprana = reco.ALTA_TEMPRANA == null ? "N" : "S",

                                     ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                     UsuarioSistema = c.T_USUARIOS.LOGIN,
                                     FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                     FechaBajaBeneficio = c.FEC_BAJA,
                                     idSubprograma = reco.ID_SUBPROGRAMA,
                                     Apoderado = new Apoderado
                                     {
                                         Apellido = ap.APELLIDO ?? " ",
                                         Nombre = ap.NOMBRE ?? " ",
                                         NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                     },
                                     Ficha = new Ficha
                                     {
                                         Apellido = f.APELLIDO,
                                         Barrio = f.BARRIO,
                                         Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                         IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                         IdFicha = f.ID_FICHA,
                                         Calle = (f.CALLE ?? "").Trim(),
                                         CantidadHijos = f.CANTIDAD_HIJOS,
                                         CodigoPostal = f.CODIGO_POSTAL,
                                         CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                         Contacto = f.CONTACTO,
                                         Cuil = f.CUIL,
                                         DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                         TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                         TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                         TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                         TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                         Dpto = f.DPTO ?? " ",
                                         EntreCalles = f.ENTRECALLES ?? " ",
                                         EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                         EstadoCivil = f.ESTADO_CIVIL,
                                         FechaNacimiento = f.FER_NAC,
                                         Mail = f.MAIL,
                                         Manzana = f.MANZANA ?? " ",
                                         Monoblock = f.MONOBLOCK ?? " ",
                                         Nombre = f.NOMBRE,
                                         Numero = f.NUMERO ?? " ",
                                         NumeroDocumento = f.NUMERO_DOCUMENTO,
                                         Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                         Piso = f.PISO ?? " ",
                                         Sexo = f.SEXO,
                                         TelefonoCelular = f.TEL_CELULAR,
                                         TelefonoFijo = f.TEL_FIJO,
                                         TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                         TipoDocumento = f.TIPO_DOCUMENTO,
                                         TipoFicha = f.TIPO_FICHA,
                                         IdEstadoFicha = f.ID_ESTADO_FICHA ?? 0,
                                         FechaSistema = c.FEC_SIST,
                                         IdUsuarioSistema = c.ID_USR_SIST,
                                         UsuarioSistema = c.T_USUARIOS.LOGIN,
                                         NroTramite = f.NRO_TRAMITE ?? " ",
                                         idEtapa = f.ID_ETAPA ?? 0
                                     }
                                 };
                case (int)Enums.TipoFicha.ConfiamosEnVos:

                    return
                            from c in _mdb.T_BENEFICIARIOS.Where(c => c.ID_PROGRAMA == (int)Enums.TipoFicha.ConfiamosEnVos)
                            join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                            from cu in
                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                            from suc in
                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                            from mon in
                                _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                            from iva in
                                _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                            from nac in
                                _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                            from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                            from prog in _mdb.T_PROGRAMAS.Where(prog => prog.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                            from conf in _mdb.T_FICHAS_CONF_VOS.Where(conf => conf.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                            from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == conf.ID_SUBPROGRAMA).DefaultIfEmpty()

                            where
                                 (
                                     (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                                      cu.NRO_CTA == null)
                                     ||
                                     (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                                      ap.NRO_CUENTA_BCO == null)
                                 )
                            select
                                new Beneficiario
                                {
                                    IdBeneficiario = c.ID_BENEFICIARIO,
                                    IdEstado = c.ID_ESTADO ?? 0,
                                    FechaSistema = c.FEC_SIST,
                                    IdFicha = c.ID_FICHA ?? 0,
                                    IdPrograma = prog.ID_PROGRAMA,
                                    IdUsuarioSistema = c.ID_USR_SIST,
                                    IdConvenio = prog.CONVENIO_BCO_CBA,
                                    NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                    CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                    CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                    CondicionIva = "01",
                                    Nacionalidad = c.NACIONALIDAD ?? 0,
                                    Residente = c.RESIDENTE,
                                    TipoPersona = c.TIPO_PERSONA,
                                    CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                    CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                    NombreEstado = c.T_ESTADOS.N_ESTADO,
                                    Cbu = cu.CBU ?? "",
                                    ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                    NumeroCuenta = cu.NRO_CTA ?? 0,
                                    Programa = prog.N_PROGRAMA,
                                    MontoPrograma = prog.MONTO_PROG ?? 0,
                                    TieneApoderado = c.TIENE_APODERADO,
                                    Modalidad = (conf.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                    AltaTemprana = conf.ALTA_TEMPRANA == null ? "N" : "S",

                                    ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                    UsuarioSistema = c.T_USUARIOS.LOGIN,
                                    FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                    FechaBajaBeneficio = c.FEC_BAJA,
                                    idSubprograma = conf.ID_SUBPROGRAMA,
                                    Apoderado = new Apoderado
                                    {
                                        Apellido = ap.APELLIDO ?? " ",
                                        Nombre = ap.NOMBRE ?? " ",
                                        NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                    },
                                    Ficha = new Ficha
                                    {
                                        Apellido = f.APELLIDO,
                                        Barrio = f.BARRIO,
                                        Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                        IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                        IdFicha = f.ID_FICHA,
                                        Calle = (f.CALLE ?? "").Trim(),
                                        CantidadHijos = f.CANTIDAD_HIJOS,
                                        CodigoPostal = f.CODIGO_POSTAL,
                                        CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                        Contacto = f.CONTACTO,
                                        Cuil = f.CUIL,
                                        DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                        TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                        TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                        TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                        TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                        Dpto = f.DPTO ?? " ",
                                        EntreCalles = f.ENTRECALLES ?? " ",
                                        EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                        EstadoCivil = f.ESTADO_CIVIL,
                                        FechaNacimiento = f.FER_NAC,
                                        Mail = f.MAIL,
                                        Manzana = f.MANZANA ?? " ",
                                        Monoblock = f.MONOBLOCK ?? " ",
                                        Nombre = f.NOMBRE,
                                        Numero = f.NUMERO ?? " ",
                                        NumeroDocumento = f.NUMERO_DOCUMENTO,
                                        Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                        Piso = f.PISO ?? " ",
                                        Sexo = f.SEXO,
                                        TelefonoCelular = f.TEL_CELULAR,
                                        TelefonoFijo = f.TEL_FIJO,
                                        TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                        TipoDocumento = f.TIPO_DOCUMENTO,
                                        TipoFicha = f.TIPO_FICHA,
                                        IdEstadoFicha = f.ID_ESTADO_FICHA ?? 0,
                                        FechaSistema = c.FEC_SIST,
                                        IdUsuarioSistema = c.ID_USR_SIST,
                                        UsuarioSistema = c.T_USUARIOS.LOGIN,
                                        NroTramite = f.NRO_TRAMITE ?? " ",
                                        idEtapa = f.ID_ETAPA ?? 0
                                    }
                                };

                case (int)Enums.TipoFicha.Ppp:

                    return
                            from c in _mdb.T_BENEFICIARIOS.Where(c => c.ID_PROGRAMA == (int)Enums.TipoFicha.Ppp)
                            join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                            from cu in
                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                            from suc in
                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                            from mon in
                                _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                            from iva in
                                _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                            from nac in
                                _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                            from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                            from prog in _mdb.T_PROGRAMAS.Where(prog => prog.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                            from ppp in _mdb.T_FICHA_PPP.Where(ppp => ppp.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                            from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == ppp.ID_SUBPROGRAMA).DefaultIfEmpty()
                            from cf in _mdb.T_FICHAS_CAJA.Where(cf => cf.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                            where
                                 (
                                     (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                                      cu.NRO_CTA == null)
                                     ||
                                     (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                                      ap.NRO_CUENTA_BCO == null)
                                 )
                            select
                                new Beneficiario
                                {
                                    IdBeneficiario = c.ID_BENEFICIARIO,
                                    IdEstado = c.ID_ESTADO ?? 0,
                                    FechaSistema = c.FEC_SIST,
                                    IdFicha = c.ID_FICHA ?? 0,
                                    IdPrograma = prog.ID_PROGRAMA,
                                    IdUsuarioSistema = c.ID_USR_SIST,
                                    IdConvenio = prog.CONVENIO_BCO_CBA,
                                    NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                    CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                    CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                    CondicionIva = "01",
                                    Nacionalidad = c.NACIONALIDAD ?? 0,
                                    Residente = c.RESIDENTE,
                                    TipoPersona = c.TIPO_PERSONA,
                                    CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                    CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                    NombreEstado = c.T_ESTADOS.N_ESTADO,
                                    Cbu = cu.CBU ?? "",
                                    ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                    NumeroCuenta = cu.NRO_CTA ?? 0,
                                    Programa = prog.N_PROGRAMA,
                                    MontoPrograma = prog.MONTO_PROG ?? 0,
                                    TieneApoderado = c.TIENE_APODERADO,
                                    Modalidad = (ppp.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                    AltaTemprana = ppp.ALTA_TEMPRANA == null ? "N" : "S",

                                    ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                    UsuarioSistema = c.T_USUARIOS.LOGIN,
                                    FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                    FechaBajaBeneficio = c.FEC_BAJA,
                                    idSubprograma = ppp.ID_SUBPROGRAMA,
                                    TipoPrograma = ppp.TIPO_PPP ?? 0,
                                    Apoderado = new Apoderado
                                    {
                                        Apellido = ap.APELLIDO ?? " ",
                                        Nombre = ap.NOMBRE ?? " ",
                                        NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                    },
                                    Ficha = new Ficha
                                    {
                                        Apellido = f.APELLIDO,
                                        Barrio = f.BARRIO,
                                        Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                        IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                        IdFicha = f.ID_FICHA,
                                        Calle = (f.CALLE ?? "").Trim(),
                                        CantidadHijos = f.CANTIDAD_HIJOS,
                                        CodigoPostal = f.CODIGO_POSTAL,
                                        CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                        Contacto = f.CONTACTO,
                                        Cuil = f.CUIL,
                                        DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                        TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                        TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                        TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                        TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                        Dpto = f.DPTO ?? " ",
                                        EntreCalles = f.ENTRECALLES ?? " ",
                                        EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                        EstadoCivil = f.ESTADO_CIVIL,
                                        FechaNacimiento = f.FER_NAC,
                                        Mail = f.MAIL,
                                        Manzana = f.MANZANA ?? " ",
                                        Monoblock = f.MONOBLOCK ?? " ",
                                        Nombre = f.NOMBRE,
                                        Numero = f.NUMERO ?? " ",
                                        NumeroDocumento = f.NUMERO_DOCUMENTO,
                                        Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                        Piso = f.PISO ?? " ",
                                        Sexo = f.SEXO,
                                        TelefonoCelular = f.TEL_CELULAR,
                                        TelefonoFijo = f.TEL_FIJO,
                                        TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                        TipoDocumento = f.TIPO_DOCUMENTO,
                                        TipoFicha = f.TIPO_FICHA,
                                        IdEstadoFicha = f.ID_ESTADO_FICHA ?? 0,
                                        FechaSistema = c.FEC_SIST,
                                        IdUsuarioSistema = c.ID_USR_SIST,
                                        UsuarioSistema = c.T_USUARIOS.LOGIN,
                                        NroTramite = f.NRO_TRAMITE ?? " ",
                                        idCaja = cf.ID_CAJA == null ? 0 : cf.ID_CAJA,
                                        idEtapa = f.ID_ETAPA ?? 0

                                    }
                                };
                default:
                    var a = (from c in _mdb.T_BENEFICIARIOS
                             join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                             from cu in
                                 _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                             from suc in
                                 _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                             from mon in
                                 _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                             from iva in
                                 _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                             from nac in
                                 _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                             from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                             from prog in _mdb.T_PROGRAMAS.Where(prog => prog.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                             from fpp in _mdb.T_FICHA_PPP.Where(fpp => fpp.ID_FICHA == f.ID_FICHA).DefaultIfEmpty()
                             from cf in _mdb.T_FICHAS_CAJA.Where(cf => cf.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                             where
                                 (
                                     (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                                      cu.NRO_CTA == null)
                                     ||
                                     (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                                      ap.NRO_CUENTA_BCO == null)
                                 )
                             select
                                 new Beneficiario
                                 {
                                     IdBeneficiario = c.ID_BENEFICIARIO,
                                     IdEstado = c.ID_ESTADO ?? 0,
                                     FechaSistema = c.FEC_SIST,
                                     IdFicha = c.ID_FICHA ?? 0,
                                     IdPrograma = prog.ID_PROGRAMA,
                                     IdUsuarioSistema = c.ID_USR_SIST,
                                     IdConvenio = prog.CONVENIO_BCO_CBA,
                                     NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                     CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                     CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                     CondicionIva = "01",
                                     Nacionalidad = c.NACIONALIDAD ?? 0,
                                     Residente = c.RESIDENTE,
                                     TipoPersona = c.TIPO_PERSONA,
                                     CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                     CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                     NombreEstado = c.T_ESTADOS.N_ESTADO,
                                     Cbu = cu.CBU ?? "",
                                     ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                     NumeroCuenta = cu.NRO_CTA ?? 0,
                                     Programa = prog.N_PROGRAMA,
                                     MontoPrograma = prog.MONTO_PROG ?? 0,
                                     TieneApoderado = c.TIENE_APODERADO,
                                     Modalidad = (fpp.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                     AltaTemprana = fpp.ALTA_TEMPRANA == null ? "N" : "S",

                                     ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                     UsuarioSistema = c.T_USUARIOS.LOGIN,
                                     FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                     FechaBajaBeneficio = c.FEC_BAJA,

                                     Apoderado = new Apoderado
                                     {
                                         Apellido = ap.APELLIDO ?? " ",
                                         Nombre = ap.NOMBRE ?? " ",
                                         NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                     },
                                     TipoPrograma = fpp.TIPO_PPP ?? 0, // 13/08/2018
                                     Ficha = new Ficha
                                     {
                                         Apellido = f.APELLIDO,
                                         Barrio = f.BARRIO,
                                         Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                         IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                         IdFicha = f.ID_FICHA,
                                         Calle = (f.CALLE ?? "").Trim(),
                                         CantidadHijos = f.CANTIDAD_HIJOS,
                                         CodigoPostal = f.CODIGO_POSTAL,
                                         CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                         Contacto = f.CONTACTO,
                                         Cuil = f.CUIL,
                                         DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                         TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                         TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                         TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                         TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                         Dpto = f.DPTO ?? " ",
                                         EntreCalles = f.ENTRECALLES ?? " ",
                                         EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                         EstadoCivil = f.ESTADO_CIVIL,
                                         FechaNacimiento = f.FER_NAC,
                                         Mail = f.MAIL,
                                         Manzana = f.MANZANA ?? " ",
                                         Monoblock = f.MONOBLOCK ?? " ",
                                         Nombre = f.NOMBRE,
                                         Numero = f.NUMERO ?? " ",
                                         NumeroDocumento = f.NUMERO_DOCUMENTO,
                                         Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                         Piso = f.PISO ?? " ",
                                         Sexo = f.SEXO,
                                         TelefonoCelular = f.TEL_CELULAR,
                                         TelefonoFijo = f.TEL_FIJO,
                                         TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                         TipoDocumento = f.TIPO_DOCUMENTO,
                                         TipoFicha = f.TIPO_FICHA,
                                         IdEstadoFicha = f.ID_ESTADO_FICHA ?? 0,
                                         FechaSistema = c.FEC_SIST,
                                         IdUsuarioSistema = c.ID_USR_SIST,
                                         UsuarioSistema = c.T_USUARIOS.LOGIN,
                                         NroTramite = f.NRO_TRAMITE ?? " ",
                                         idEtapa = f.ID_ETAPA ?? 0,
                                         idCaja = cf.ID_CAJA == null ? 0 : cf.ID_CAJA // 13/08/2018
                                     }
                                 });
                    return a;

                }
        }

        private IEnumerable<IBeneficiario> QBeneficiarioSinCuentasPart2(int idPrograma)
        {
            switch (idPrograma)
            {

                  case (int)Enums.TipoFicha.Terciaria:

                    return
                            from c in _mdb.T_BENEFICIARIOS.Where(c => c.ID_PROGRAMA == (int)Enums.TipoFicha.Terciaria)
                            join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                            from cu in
                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                            from suc in
                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                            from mon in
                                _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                            from iva in
                                _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                            from nac in
                                _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                            from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                            from prog in _mdb.T_PROGRAMAS.Where(prog => prog.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                            from ter in _mdb.T_FICHA_TERCIARIO.Where(ter => ter.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                            from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == ter.ID_SUBPROGRAMA).DefaultIfEmpty()

                            where
                                 (
                                     (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                                      cu.NRO_CTA == null)
                                     ||
                                     (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                                      ap.NRO_CUENTA_BCO == null)
                                 )
                            select
                                new Beneficiario
                                {
                                    IdBeneficiario = c.ID_BENEFICIARIO,
                                    IdEstado = c.ID_ESTADO ?? 0,
                                    FechaSistema = c.FEC_SIST,
                                    IdFicha = c.ID_FICHA ?? 0,
                                    IdPrograma = prog.ID_PROGRAMA,
                                    IdUsuarioSistema = c.ID_USR_SIST,
                                    IdConvenio = prog.CONVENIO_BCO_CBA,
                                    NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                    CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                    CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                    CondicionIva = "01",
                                    Nacionalidad = c.NACIONALIDAD ?? 0,
                                    Residente = c.RESIDENTE,
                                    TipoPersona = c.TIPO_PERSONA,
                                    CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                    CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                    NombreEstado = c.T_ESTADOS.N_ESTADO,
                                    Cbu = cu.CBU ?? "",
                                    ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                    NumeroCuenta = cu.NRO_CTA ?? 0,
                                    Programa = prog.N_PROGRAMA,
                                    MontoPrograma = prog.MONTO_PROG ?? 0,
                                    TieneApoderado = c.TIENE_APODERADO,
                                    Modalidad = "C",//(ter.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                    AltaTemprana = "N",//ter.ALTA_TEMPRANA == null ? "N" : "S",

                                    ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                    UsuarioSistema = c.T_USUARIOS.LOGIN,
                                    FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                    FechaBajaBeneficio = c.FEC_BAJA,
                                    idSubprograma = ter.ID_SUBPROGRAMA,
                                    Apoderado = new Apoderado
                                    {
                                        Apellido = ap.APELLIDO ?? " ",
                                        Nombre = ap.NOMBRE ?? " ",
                                        NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                    },
                                    Ficha = new Ficha
                                    {
                                        Apellido = f.APELLIDO,
                                        Barrio = f.BARRIO,
                                        Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                        IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                        IdFicha = f.ID_FICHA,
                                        Calle = (f.CALLE ?? "").Trim(),
                                        CantidadHijos = f.CANTIDAD_HIJOS,
                                        CodigoPostal = f.CODIGO_POSTAL,
                                        CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                        Contacto = f.CONTACTO,
                                        Cuil = f.CUIL,
                                        DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                        TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                        TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                        TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                        TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                        Dpto = f.DPTO ?? " ",
                                        EntreCalles = f.ENTRECALLES ?? " ",
                                        EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                        EstadoCivil = f.ESTADO_CIVIL,
                                        FechaNacimiento = f.FER_NAC,
                                        Mail = f.MAIL,
                                        Manzana = f.MANZANA ?? " ",
                                        Monoblock = f.MONOBLOCK ?? " ",
                                        Nombre = f.NOMBRE,
                                        Numero = f.NUMERO ?? " ",
                                        NumeroDocumento = f.NUMERO_DOCUMENTO,
                                        Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                        Piso = f.PISO ?? " ",
                                        Sexo = f.SEXO,
                                        TelefonoCelular = f.TEL_CELULAR,
                                        TelefonoFijo = f.TEL_FIJO,
                                        TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                        TipoDocumento = f.TIPO_DOCUMENTO,
                                        TipoFicha = f.TIPO_FICHA,
                                        IdEstadoFicha = f.ID_ESTADO_FICHA ?? 0,
                                        FechaSistema = c.FEC_SIST,
                                        IdUsuarioSistema = c.ID_USR_SIST,
                                        UsuarioSistema = c.T_USUARIOS.LOGIN,
                                        NroTramite = f.NRO_TRAMITE ?? " ",
                                        idEtapa = f.ID_ETAPA ?? 0
                                    }
                                };

                  case (int)Enums.TipoFicha.Universitaria:

                    return
                            from c in _mdb.T_BENEFICIARIOS.Where(c => c.ID_PROGRAMA == (int)Enums.TipoFicha.Universitaria)
                            join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                            from cu in
                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                            from suc in
                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                            from mon in
                                _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                            from iva in
                                _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                            from nac in
                                _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                            from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                            from prog in _mdb.T_PROGRAMAS.Where(prog => prog.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                            from uni in _mdb.T_FICHA_UNIVERSITARIO.Where(uni => uni.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                            from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == uni.ID_SUBPROGRAMA).DefaultIfEmpty()

                            where
                                 (
                                     (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                                      cu.NRO_CTA == null)
                                     ||
                                     (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                                      ap.NRO_CUENTA_BCO == null)
                                 )
                            select
                                new Beneficiario
                                {
                                    IdBeneficiario = c.ID_BENEFICIARIO,
                                    IdEstado = c.ID_ESTADO ?? 0,
                                    FechaSistema = c.FEC_SIST,
                                    IdFicha = c.ID_FICHA ?? 0,
                                    IdPrograma = prog.ID_PROGRAMA,
                                    IdUsuarioSistema = c.ID_USR_SIST,
                                    IdConvenio = prog.CONVENIO_BCO_CBA,
                                    NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                    CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                    CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                    CondicionIva = "01",
                                    Nacionalidad = c.NACIONALIDAD ?? 0,
                                    Residente = c.RESIDENTE,
                                    TipoPersona = c.TIPO_PERSONA,
                                    CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                    CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                    NombreEstado = c.T_ESTADOS.N_ESTADO,
                                    Cbu = cu.CBU ?? "",
                                    ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                    NumeroCuenta = cu.NRO_CTA ?? 0,
                                    Programa = prog.N_PROGRAMA,
                                    MontoPrograma = prog.MONTO_PROG ?? 0,
                                    TieneApoderado = c.TIENE_APODERADO,
                                    Modalidad = "C",//(ter.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                    AltaTemprana = "N",//ter.ALTA_TEMPRANA == null ? "N" : "S",

                                    ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                    UsuarioSistema = c.T_USUARIOS.LOGIN,
                                    FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                    FechaBajaBeneficio = c.FEC_BAJA,
                                    idSubprograma = uni.ID_SUBPROGRAMA,
                                    Apoderado = new Apoderado
                                    {
                                        Apellido = ap.APELLIDO ?? " ",
                                        Nombre = ap.NOMBRE ?? " ",
                                        NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                    },
                                    Ficha = new Ficha
                                    {
                                        Apellido = f.APELLIDO,
                                        Barrio = f.BARRIO,
                                        Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                        IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                        IdFicha = f.ID_FICHA,
                                        Calle = (f.CALLE ?? "").Trim(),
                                        CantidadHijos = f.CANTIDAD_HIJOS,
                                        CodigoPostal = f.CODIGO_POSTAL,
                                        CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                        Contacto = f.CONTACTO,
                                        Cuil = f.CUIL,
                                        DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                        TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                        TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                        TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                        TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                        Dpto = f.DPTO ?? " ",
                                        EntreCalles = f.ENTRECALLES ?? " ",
                                        EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                        EstadoCivil = f.ESTADO_CIVIL,
                                        FechaNacimiento = f.FER_NAC,
                                        Mail = f.MAIL,
                                        Manzana = f.MANZANA ?? " ",
                                        Monoblock = f.MONOBLOCK ?? " ",
                                        Nombre = f.NOMBRE,
                                        Numero = f.NUMERO ?? " ",
                                        NumeroDocumento = f.NUMERO_DOCUMENTO,
                                        Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                        Piso = f.PISO ?? " ",
                                        Sexo = f.SEXO,
                                        TelefonoCelular = f.TEL_CELULAR,
                                        TelefonoFijo = f.TEL_FIJO,
                                        TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                        TipoDocumento = f.TIPO_DOCUMENTO,
                                        TipoFicha = f.TIPO_FICHA,
                                        IdEstadoFicha = f.ID_ESTADO_FICHA ?? 0,
                                        FechaSistema = c.FEC_SIST,
                                        IdUsuarioSistema = c.ID_USR_SIST,
                                        UsuarioSistema = c.T_USUARIOS.LOGIN,
                                        NroTramite = f.NRO_TRAMITE ?? " ",
                                        idEtapa = f.ID_ETAPA ?? 0
                                    }
                                };

                default:
                    var a = (from c in _mdb.T_BENEFICIARIOS
                             join f in _mdb.T_FICHAS on c.ID_FICHA equals f.ID_FICHA
                             from cu in
                                 _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == c.ID_BENEFICIARIO).DefaultIfEmpty()
                             from suc in
                                 _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                             from mon in
                                 _mdb.T_TABLAS_BCO_CBA.Where(mon => mon.ID_TABLA_BCO_CBA == cu.ID_MONEDA).DefaultIfEmpty()
                             from iva in
                                 _mdb.T_TABLAS_BCO_CBA.Where(iva => iva.ID_TABLA_BCO_CBA == c.CONDICION_IVA).DefaultIfEmpty()
                             from nac in
                                 _mdb.T_TABLAS_BCO_CBA.Where(nac => nac.ID_TABLA_BCO_CBA == c.NACIONALIDAD).DefaultIfEmpty()
                             from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO &&
                                 ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                             from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == c.ID_PROGRAMA).DefaultIfEmpty()
                             from fpp in _mdb.T_FICHA_PPP.Where(cons => cons.ID_FICHA == f.ID_FICHA).DefaultIfEmpty()
                             from cf in _mdb.T_FICHAS_CAJA.Where(cf => cf.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                             where
                                 (
                                     (c.TIENE_APODERADO == "N" && cu.ID_SUCURSAL != null && cu.FEC_SOL_CTA == null &&
                                      cu.NRO_CTA == null)
                                     ||
                                     (c.TIENE_APODERADO == "S" && ap.ID_SUCURSAL_BCO != null && ap.FEC_SOL_CTA == null &&
                                      ap.NRO_CUENTA_BCO == null)
                                 )
                             select
                                 new Beneficiario
                                 {
                                     IdBeneficiario = c.ID_BENEFICIARIO,
                                     IdEstado = c.ID_ESTADO ?? 0,
                                     FechaSistema = c.FEC_SIST,
                                     IdFicha = c.ID_FICHA ?? 0,
                                     IdPrograma = prog.ID_PROGRAMA,
                                     IdUsuarioSistema = c.ID_USR_SIST,
                                     IdConvenio = prog.CONVENIO_BCO_CBA,
                                     NumeroConvenio = prog.CONVENIO_BCO_CBA,
                                     CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                     CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                     CondicionIva = "01",
                                     Nacionalidad = c.NACIONALIDAD ?? 0,
                                     Residente = c.RESIDENTE,
                                     TipoPersona = c.TIPO_PERSONA,
                                     CodigoMoneda = mon.COD_BCO_CBA ?? "0",
                                     CodigoSucursal = suc.COD_BCO_CBA ?? " ",
                                     NombreEstado = c.T_ESTADOS.N_ESTADO,
                                     Cbu = cu.CBU ?? "",
                                     ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                     NumeroCuenta = cu.NRO_CTA ?? 0,
                                     Programa = prog.N_PROGRAMA,
                                     MontoPrograma = prog.MONTO_PROG ?? 0,
                                     TieneApoderado = c.TIENE_APODERADO,
                                     Modalidad = (fpp.MODALIDAD ?? 0) == (int)Enums.Modalidad.Entrenamiento ? "E" : "C",
                                     AltaTemprana = fpp.ALTA_TEMPRANA == null ? "N" : "S",

                                     ApellidoNombreApoderado = ap.APELLIDO + "," + ap.NOMBRE,
                                     UsuarioSistema = c.T_USUARIOS.LOGIN,
                                     FechaInicioBeneficio = c.FEC_INICIO, //04/02/2013 -- se añade para verificar su el inicio y la baja del benef.
                                     FechaBajaBeneficio = c.FEC_BAJA,

                                     Apoderado = new Apoderado
                                     {
                                         Apellido = ap.APELLIDO ?? " ",
                                         Nombre = ap.NOMBRE ?? " ",
                                         NumeroDocumento = ap.NRO_DOCUMENTO ?? " "
                                     },
                                     TipoPrograma = fpp.TIPO_PPP ?? 0, // 13/08/2018
                                     Ficha = new Ficha
                                     {
                                         Apellido = f.APELLIDO,
                                         Barrio = f.BARRIO,
                                         Localidad = f.T_LOCALIDADES.N_LOCALIDAD,
                                         IdLocalidad = f.ID_LOCALIDAD ?? 0,
                                         IdFicha = f.ID_FICHA,
                                         Calle = (f.CALLE ?? "").Trim(),
                                         CantidadHijos = f.CANTIDAD_HIJOS,
                                         CodigoPostal = f.CODIGO_POSTAL,
                                         CodigoSeguridad = f.CODIGO_SEGURIDAD,
                                         Contacto = f.CONTACTO,
                                         Cuil = f.CUIL,
                                         DeficienciaOtra = f.DEFICIENCIA_OTRA,
                                         TieneDeficienciaMental = f.TIENE_DEF_MENTAL == "S" ? true : false,
                                         TieneDeficienciaMotora = f.TIENE_DEF_MOTORA == "S" ? true : false,
                                         TieneDeficienciaPsicologia = c.T_FICHAS.TIENE_DEF_PSICOLOGICA == "S" ? true : false,
                                         TieneDeficienciaSensorial = f.TIENE_DEF_SENSORIAL == "S" ? true : false,
                                         Dpto = f.DPTO ?? " ",
                                         EntreCalles = f.ENTRECALLES ?? " ",
                                         EsDiscapacitado = f.ES_DISCAPACITADO == "S" ? true : false,
                                         EstadoCivil = f.ESTADO_CIVIL,
                                         FechaNacimiento = f.FER_NAC,
                                         Mail = f.MAIL,
                                         Manzana = f.MANZANA ?? " ",
                                         Monoblock = f.MONOBLOCK ?? " ",
                                         Nombre = f.NOMBRE,
                                         Numero = f.NUMERO ?? " ",
                                         NumeroDocumento = f.NUMERO_DOCUMENTO,
                                         Parcela = (f.PARCELA == "0" ? "" : f.PARCELA) ?? " ",
                                         Piso = f.PISO ?? " ",
                                         Sexo = f.SEXO,
                                         TelefonoCelular = f.TEL_CELULAR,
                                         TelefonoFijo = f.TEL_FIJO,
                                         TieneHijos = f.TIENE_HIJOS == "S" ? true : false,
                                         TipoDocumento = f.TIPO_DOCUMENTO,
                                         TipoFicha = f.TIPO_FICHA,
                                         IdEstadoFicha = f.ID_ESTADO_FICHA ?? 0,
                                         FechaSistema = c.FEC_SIST,
                                         IdUsuarioSistema = c.ID_USR_SIST,
                                         UsuarioSistema = c.T_USUARIOS.LOGIN,
                                         NroTramite = f.NRO_TRAMITE ?? " ",
                                         idEtapa = f.ID_ETAPA ?? 0,
                                         idCaja = cf.ID_CAJA == null ? 0 : cf.ID_CAJA // 13/08/2018
                                     }
                                 });
                    return a;

            }
        }

        private IQueryable<IBeneficiario> QBeneficiarioSimpleB(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string nrotramite, int tipoprograma = 0, int subprograma = 0)
        {


            switch (idPrograma)
            {

                case (int)Enums.TipoFicha.EfectoresSociales:

                    return
                            from be in _mdb.T_BENEFICIARIOS.Where(be => be.ID_PROGRAMA == (int)Enums.TipoFicha.EfectoresSociales)
                            join fic in _mdb.T_FICHAS on be.ID_FICHA equals fic.ID_FICHA
                            from estado in _mdb.T_ESTADOS.Where(est => est.ID_ESTADO == be.ID_ESTADO).DefaultIfEmpty()
                            from cu in
                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == be.ID_BENEFICIARIO).DefaultIfEmpty()
                            from suc in
                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                            from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == be.ID_BENEFICIARIO &&
                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                            from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == be.ID_PROGRAMA).DefaultIfEmpty()
                            from efe in _mdb.T_FICHA_EFEC_SOC.Where(efe => efe.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                            from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == efe.ID_SUBPROGRAMA).DefaultIfEmpty()

                           where (fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario || fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.EtapaFinalizada)

                                    && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                    ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                    ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                    (be.ID_PROGRAMA == idPrograma || idPrograma == 0) && (be.ID_ESTADO == idEstado || idEstado == 0) &&
                                    (modalidad != "T" ? (efe.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                    (conApoderados != "T" ? be.TIENE_APODERADO == conApoderados : (be.TIENE_APODERADO != null || string.IsNullOrEmpty(be.TIENE_APODERADO))) &&
                                    (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                    (altaTemprana != "T" ? efe.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                    (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                    && (fic.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))
                                    && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                             select new Beneficiario
                             {
                                 IdBeneficiario = be.ID_BENEFICIARIO,
                                 IdFicha = be.ID_FICHA ?? 0,
                                 IdEstado = estado.ID_ESTADO,
                                 Programa = prog.N_PROGRAMA,
                                 IdPrograma = be.ID_PROGRAMA ?? 0,
                                 NombreEstado = estado.N_ESTADO,
                                 TieneApoderado = be.TIENE_APODERADO,
                                 Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                 Apoderado = new Apoderado
                                 {
                                     Apellido = ap.APELLIDO,
                                     Nombre = ap.NOMBRE,
                                     NumeroDocumento = ap.NRO_DOCUMENTO ?? "."
                                 },
                                 UsuarioSistema = be.T_USUARIOS.LOGIN,
                                 IdUsuarioSistema = be.T_USUARIOS.ID_USR_SIST,
                                 idSubprograma = sub.ID_SUBPROGRAMA,
                                 Ficha = new Ficha
                                 {
                                     IdEstadoFicha = fic.ID_ESTADO_FICHA,
                                     Apellido = fic.APELLIDO,
                                     Barrio = fic.BARRIO,
                                     IdFicha = fic.ID_FICHA,
                                     Cuil = fic.CUIL,
                                     EsDiscapacitado = fic.ES_DISCAPACITADO == "S" ? true : false,
                                     FechaNacimiento = fic.FER_NAC,
                                     Nombre = fic.NOMBRE,
                                     NumeroDocumento = fic.NUMERO_DOCUMENTO,
                                     Sexo = fic.SEXO,
                                     TipoFicha = fic.TIPO_FICHA,
                                     idEtapa = fic.ID_ETAPA, 
                                     NombreEtapa = fic.T_ETAPAS.N_ETAPA,
                                     NroTramite = fic.NRO_TRAMITE,
                                     //FichaEfectores =
                                     //    new FichaEfectoresSociales
                                     //    {
                                     //        Modalidad = efe.MODALIDAD ?? 0,
                                     //        AltaTemprana = efe.ALTA_TEMPRANA == null ? "N" : "S",
                                     //        Empresa =
                                     //            new Empresa
                                     //            {
                                     //                NombreEmpresa = efe.T_EMPRESAS.N_EMPRESA,
                                     //                Calle = efe.T_EMPRESAS.CALLE,
                                     //                Numero = efe.T_EMPRESAS.NUMERO,
                                     //                NombreLocalidad = efe.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                     //                Cuit = efe.T_EMPRESAS.CUIT
                                     //            }
                                     //    }
                                 }
                             }
                            ;

                case (int)Enums.TipoFicha.ReconversionProductiva:

                    return
                            from be in _mdb.T_BENEFICIARIOS.Where(be => be.ID_PROGRAMA == (int)Enums.TipoFicha.ReconversionProductiva)
                            join fic in _mdb.T_FICHAS on be.ID_FICHA equals fic.ID_FICHA
                            from estado in _mdb.T_ESTADOS.Where(est => est.ID_ESTADO == be.ID_ESTADO).DefaultIfEmpty()
                            from cu in
                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == be.ID_BENEFICIARIO).DefaultIfEmpty()
                            from suc in
                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                            from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == be.ID_BENEFICIARIO &&
                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                            from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == be.ID_PROGRAMA).DefaultIfEmpty()
                            from reco in _mdb.T_FICHA_REC_PROD.Where(reco => reco.ID_FICHA == be.ID_FICHA).DefaultIfEmpty()
                            from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == reco.ID_SUBPROGRAMA).DefaultIfEmpty()

                            where (fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario || fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.EtapaFinalizada)

                                    && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                    ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                    ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                    (be.ID_PROGRAMA == idPrograma || idPrograma == 0) && (be.ID_ESTADO == idEstado || idEstado == 0) &&
                                    (modalidad != "T" ? (reco.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                    (conApoderados != "T" ? be.TIENE_APODERADO == conApoderados : (be.TIENE_APODERADO != null || string.IsNullOrEmpty(be.TIENE_APODERADO))) &&
                                    (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                    (altaTemprana != "T" ? reco.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                    (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                    && (fic.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))
                                    && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                             select new Beneficiario
                             {
                                 IdBeneficiario = be.ID_BENEFICIARIO,
                                 IdFicha = be.ID_FICHA ?? 0,
                                 IdEstado = estado.ID_ESTADO,
                                 Programa = prog.N_PROGRAMA,
                                 IdPrograma = be.ID_PROGRAMA ?? 0,
                                 NombreEstado = estado.N_ESTADO,
                                 TieneApoderado = be.TIENE_APODERADO,
                                 Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                 Apoderado = new Apoderado
                                 {
                                     Apellido = ap.APELLIDO,
                                     Nombre = ap.NOMBRE,
                                     NumeroDocumento = ap.NRO_DOCUMENTO ?? "."
                                 },
                                 UsuarioSistema = be.T_USUARIOS.LOGIN,
                                 IdUsuarioSistema = be.T_USUARIOS.ID_USR_SIST,
                                 idSubprograma = sub.ID_SUBPROGRAMA,
                                 Ficha = new Ficha
                                 {
                                     IdEstadoFicha = fic.ID_ESTADO_FICHA,
                                     Apellido = fic.APELLIDO,
                                     Barrio = fic.BARRIO,
                                     IdFicha = fic.ID_FICHA,
                                     Cuil = fic.CUIL,
                                     EsDiscapacitado = fic.ES_DISCAPACITADO == "S" ? true : false,
                                     FechaNacimiento = fic.FER_NAC,
                                     Nombre = fic.NOMBRE,
                                     NumeroDocumento = fic.NUMERO_DOCUMENTO,
                                     Sexo = fic.SEXO,
                                     TipoFicha = fic.TIPO_FICHA,
                                     idEtapa = fic.ID_ETAPA, 
                                     NombreEtapa = fic.T_ETAPAS.N_ETAPA,
                                     NroTramite = fic.NRO_TRAMITE,
                                     //FichaEfectores =
                                     //    new FichaEfectoresSociales
                                     //    {
                                     //        Modalidad = efe.MODALIDAD ?? 0,
                                     //        AltaTemprana = efe.ALTA_TEMPRANA == null ? "N" : "S",
                                     //        Empresa =
                                     //            new Empresa
                                     //            {
                                     //                NombreEmpresa = efe.T_EMPRESAS.N_EMPRESA,
                                     //                Calle = efe.T_EMPRESAS.CALLE,
                                     //                Numero = efe.T_EMPRESAS.NUMERO,
                                     //                NombreLocalidad = efe.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                     //                Cuit = efe.T_EMPRESAS.CUIT
                                     //            }
                                     //    }
                                 }
                             }
                            ;
                case (int)Enums.TipoFicha.ConfiamosEnVos:

                    return
                            from be in _mdb.T_BENEFICIARIOS.Where(be => be.ID_PROGRAMA == (int)Enums.TipoFicha.ConfiamosEnVos)
                            join fic in _mdb.T_FICHAS on be.ID_FICHA equals fic.ID_FICHA
                            from estado in _mdb.T_ESTADOS.Where(est => est.ID_ESTADO == be.ID_ESTADO).DefaultIfEmpty()
                            from cu in
                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == be.ID_BENEFICIARIO).DefaultIfEmpty()
                            from suc in
                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                            from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == be.ID_BENEFICIARIO &&
                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                            from prog in _mdb.T_PROGRAMAS.Where(cons => cons.ID_PROGRAMA == be.ID_PROGRAMA).DefaultIfEmpty()
                            from conf in _mdb.T_FICHAS_CONF_VOS.Where(conf => conf.ID_FICHA == be.ID_FICHA).DefaultIfEmpty()
                            from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == conf.ID_SUBPROGRAMA).DefaultIfEmpty()

                            where  (fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario || fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.EtapaFinalizada)

                                    && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                    ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                    ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                    (be.ID_PROGRAMA == idPrograma || idPrograma == 0) && (be.ID_ESTADO == idEstado || idEstado == 0) &&
                                    (modalidad != "T" ? (conf.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                    (conApoderados != "T" ? be.TIENE_APODERADO == conApoderados : (be.TIENE_APODERADO != null || string.IsNullOrEmpty(be.TIENE_APODERADO))) &&
                                    (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                    (altaTemprana != "T" ? conf.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                    (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                    && (fic.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))
                                    && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                            select new Beneficiario
                            {
                                IdBeneficiario = be.ID_BENEFICIARIO,
                                IdFicha = be.ID_FICHA ?? 0,
                                IdEstado = estado.ID_ESTADO,
                                Programa = prog.N_PROGRAMA,
                                IdPrograma = be.ID_PROGRAMA ?? 0,
                                NombreEstado = estado.N_ESTADO,
                                TieneApoderado = be.TIENE_APODERADO,
                                Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                Apoderado = new Apoderado
                                {
                                    Apellido = ap.APELLIDO,
                                    Nombre = ap.NOMBRE,
                                    NumeroDocumento = ap.NRO_DOCUMENTO ?? "."
                                },
                                UsuarioSistema = be.T_USUARIOS.LOGIN,
                                IdUsuarioSistema = be.T_USUARIOS.ID_USR_SIST,
                                idSubprograma = sub.ID_SUBPROGRAMA,
                                Ficha = new Ficha
                                {
                                    IdEstadoFicha = fic.ID_ESTADO_FICHA,
                                    Apellido = fic.APELLIDO,
                                    Barrio = fic.BARRIO,
                                    IdFicha = fic.ID_FICHA,
                                    Cuil = fic.CUIL,
                                    EsDiscapacitado = fic.ES_DISCAPACITADO == "S" ? true : false,
                                    FechaNacimiento = fic.FER_NAC,
                                    Nombre = fic.NOMBRE,
                                    NumeroDocumento = fic.NUMERO_DOCUMENTO,
                                    Sexo = fic.SEXO,
                                    TipoFicha = fic.TIPO_FICHA,
                                    idEtapa = fic.ID_ETAPA,
                                    NombreEtapa = fic.T_ETAPAS.N_ETAPA,
                                    NroTramite = fic.NRO_TRAMITE,
                                    //FichaEfectores =
                                    //    new FichaEfectoresSociales
                                    //    {
                                    //        Modalidad = efe.MODALIDAD ?? 0,
                                    //        AltaTemprana = efe.ALTA_TEMPRANA == null ? "N" : "S",
                                    //        Empresa =
                                    //            new Empresa
                                    //            {
                                    //                NombreEmpresa = efe.T_EMPRESAS.N_EMPRESA,
                                    //                Calle = efe.T_EMPRESAS.CALLE,
                                    //                Numero = efe.T_EMPRESAS.NUMERO,
                                    //                NombreLocalidad = efe.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                    //                Cuit = efe.T_EMPRESAS.CUIT
                                    //            }
                                    //    }
                                }
                            }
                            ;

                case (int)Enums.TipoFicha.Ppp:

                
                
                var fp = (from be in _mdb.T_BENEFICIARIOS
                             join fic in _mdb.T_FICHAS on be.ID_FICHA equals fic.ID_FICHA
                             from ap in
                                 _mdb.T_APODERADOS.Where(
                                     ap =>
                                     ap.ID_BENEFICIARIO == be.ID_BENEFICIARIO &&
                                     ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                             from fichappp in
                                 _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                             from prog in _mdb.T_PROGRAMAS.Where(pro => pro.ID_PROGRAMA == be.ID_PROGRAMA).DefaultIfEmpty()
                             from estado in _mdb.T_ESTADOS.Where(est => est.ID_ESTADO == be.ID_ESTADO).DefaultIfEmpty()
                             from cu in _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == be.ID_BENEFICIARIO).DefaultIfEmpty()
                             from suc in _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                             from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == fichappp.ID_SUBPROGRAMA).DefaultIfEmpty()
                             from cf in _mdb.T_FICHAS_CAJA.Where(cf => cf.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                          where (idPrograma == 0 ? be.ID_PROGRAMA > 0 : be.ID_PROGRAMA == idPrograma) && (fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario || fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.EtapaFinalizada)

                                    && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                    ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                    ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                    (be.ID_PROGRAMA == idPrograma || idPrograma == 0) && (be.ID_ESTADO == idEstado || idEstado == 0) &&
                                    (modalidad != "T" ? (fichappp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                    (conApoderados != "T" ? be.TIENE_APODERADO == conApoderados : (be.TIENE_APODERADO != null || string.IsNullOrEmpty(be.TIENE_APODERADO))) &&
                                    (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                    (altaTemprana != "T" ? fichappp.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                    (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                    && (fic.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))
                                    && (fic.ID_ETAPA == idEtapa || idEtapa == 0)
                                    && (fichappp.TIPO_PPP == tipoprograma || tipoprograma == 0)
                                    && (fichappp.ID_SUBPROGRAMA == subprograma || subprograma == 0)

                             select new Beneficiario
                             {
                                 IdBeneficiario = be.ID_BENEFICIARIO,
                                 IdFicha = be.ID_FICHA ?? 0,
                                 IdEstado = estado.ID_ESTADO,
                                 Programa = prog.N_PROGRAMA,
                                 IdPrograma = be.ID_PROGRAMA ?? 0,
                                 NombreEstado = estado.N_ESTADO,
                                 TieneApoderado = be.TIENE_APODERADO,
                                 Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                 idSubprograma = fichappp.ID_SUBPROGRAMA ?? 0,
                                 TipoPrograma = fichappp.TIPO_PPP ?? 0,
                                 Apoderado = new Apoderado
                                 {
                                     Apellido = ap.APELLIDO,
                                     Nombre = ap.NOMBRE,
                                     NumeroDocumento = ap.NRO_DOCUMENTO ?? "."
                                 },
                                 UsuarioSistema = be.T_USUARIOS.LOGIN,
                                 IdUsuarioSistema = be.T_USUARIOS.ID_USR_SIST,
                                 Ficha = new Ficha
                                 {
                                     IdEstadoFicha = fic.ID_ESTADO_FICHA,
                                     Apellido = fic.APELLIDO,
                                     Barrio = fic.BARRIO,
                                     IdFicha = fic.ID_FICHA,
                                     Cuil = fic.CUIL,
                                     EsDiscapacitado = fic.ES_DISCAPACITADO == "S" ? true : false,
                                     FechaNacimiento = fic.FER_NAC,
                                     Nombre = fic.NOMBRE,
                                     NumeroDocumento = fic.NUMERO_DOCUMENTO,
                                     Sexo = fic.SEXO,
                                     TipoFicha = fic.TIPO_FICHA,
                                     idEtapa = fic.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                     NombreEtapa = fic.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                     NroTramite = fic.NRO_TRAMITE,
                                     idCaja = cf.ID_CAJA == null ? 0 : cf.ID_CAJA,
                                     FichaPpp =
                                         new FichaPPP
                                         {
                                             Modalidad = fichappp.MODALIDAD ?? 0,
                                             AltaTemprana = fichappp.ALTA_TEMPRANA == null ? "N" : "S",
                                             Empresa =
                                                 new Empresa
                                                 {
                                                     NombreEmpresa = fichappp.T_EMPRESAS.N_EMPRESA,
                                                     Calle = fichappp.T_EMPRESAS.CALLE,
                                                     Numero = fichappp.T_EMPRESAS.NUMERO,
                                                     NombreLocalidad = fichappp.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     Cuit = fichappp.T_EMPRESAS.CUIT
                                                 }
                                         }
                                 }
                             }
                            );

                    return fp;
                default:
                    var a = (from be in _mdb.T_BENEFICIARIOS
                             join fic in _mdb.T_FICHAS on be.ID_FICHA equals fic.ID_FICHA
                             from ap in
                                 _mdb.T_APODERADOS.Where(
                                     ap =>
                                     ap.ID_BENEFICIARIO == be.ID_BENEFICIARIO &&
                                     ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                             from fichappp in
                                 _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == be.ID_FICHA).DefaultIfEmpty()
                             from prog in _mdb.T_PROGRAMAS.Where(pro => pro.ID_PROGRAMA == be.ID_PROGRAMA).DefaultIfEmpty()
                             from estado in _mdb.T_ESTADOS.Where(est => est.ID_ESTADO == be.ID_ESTADO).DefaultIfEmpty()
                             from cu in _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == be.ID_BENEFICIARIO).DefaultIfEmpty()
                             from suc in _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                             where (idPrograma == 0 ? be.ID_PROGRAMA > 0 : be.ID_PROGRAMA == idPrograma) && (fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario || fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.EtapaFinalizada)

                                    && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                    ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                    ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                    (be.ID_PROGRAMA == idPrograma || idPrograma == 0) && (be.ID_ESTADO == idEstado || idEstado == 0) &&
                                    (modalidad != "T" ? (fichappp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                    (conApoderados != "T" ? be.TIENE_APODERADO == conApoderados : (be.TIENE_APODERADO != null || string.IsNullOrEmpty(be.TIENE_APODERADO))) &&
                                    (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                    (altaTemprana != "T" ? fichappp.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                    (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                    && (fic.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))
                                    && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                             select new Beneficiario
                             {
                                 IdBeneficiario = be.ID_BENEFICIARIO,
                                 IdFicha = be.ID_FICHA ?? 0,
                                 IdEstado = estado.ID_ESTADO,
                                 Programa = prog.N_PROGRAMA,
                                 IdPrograma = be.ID_PROGRAMA ?? 0,
                                 NombreEstado = estado.N_ESTADO,
                                 TieneApoderado = be.TIENE_APODERADO,
                                 Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                 Apoderado = new Apoderado
                                 {
                                     Apellido = ap.APELLIDO,
                                     Nombre = ap.NOMBRE,
                                     NumeroDocumento = ap.NRO_DOCUMENTO ?? "."
                                 },
                                 UsuarioSistema = be.T_USUARIOS.LOGIN,
                                 IdUsuarioSistema = be.T_USUARIOS.ID_USR_SIST,
                                 Ficha = new Ficha
                                 {
                                     IdEstadoFicha = fic.ID_ESTADO_FICHA,
                                     Apellido = fic.APELLIDO,
                                     Barrio = fic.BARRIO,
                                     IdFicha = fic.ID_FICHA,
                                     Cuil = fic.CUIL,
                                     EsDiscapacitado = fic.ES_DISCAPACITADO == "S" ? true : false,
                                     FechaNacimiento = fic.FER_NAC,
                                     Nombre = fic.NOMBRE,
                                     NumeroDocumento = fic.NUMERO_DOCUMENTO,
                                     Sexo = fic.SEXO,
                                     TipoFicha = fic.TIPO_FICHA,
                                     idEtapa = fic.ID_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                     NombreEtapa = fic.T_ETAPAS.N_ETAPA, // 24/05/2013 - DI CAMPLI LEANDRO - SE AÑADE LA ETAPA A LA CONSULTA PARA PODER FILTRAR
                                     NroTramite = fic.NRO_TRAMITE,
                                     FichaPpp =
                                         new FichaPPP
                                         {
                                             Modalidad = fichappp.MODALIDAD ?? 0,
                                             AltaTemprana = fichappp.ALTA_TEMPRANA == null ? "N" : "S",
                                             Empresa =
                                                 new Empresa
                                                 {
                                                     NombreEmpresa = fichappp.T_EMPRESAS.N_EMPRESA,
                                                     Calle = fichappp.T_EMPRESAS.CALLE,
                                                     Numero = fichappp.T_EMPRESAS.NUMERO,
                                                     NombreLocalidad = fichappp.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                     Cuit = fichappp.T_EMPRESAS.CUIT
                                                 }
                                         }
                                 }
                             }
                            );

                    return a;
            }
        }

        private IQueryable<IBeneficiario> QBeneficiarioSimpleC(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string nrotramite)
        {


            switch (idPrograma)
            {

                case (int)Enums.TipoFicha.Terciaria:

                    return
                            from be in _mdb.T_BENEFICIARIOS.Where(be => be.ID_PROGRAMA == (int)Enums.TipoFicha.Terciaria)
                            join fic in _mdb.T_FICHAS on be.ID_FICHA equals fic.ID_FICHA
                            from estado in _mdb.T_ESTADOS.Where(est => est.ID_ESTADO == be.ID_ESTADO).DefaultIfEmpty()
                            from cu in
                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == be.ID_BENEFICIARIO).DefaultIfEmpty()
                            from suc in
                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                            from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == be.ID_BENEFICIARIO &&
                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                            from prog in _mdb.T_PROGRAMAS.Where(prog => prog.ID_PROGRAMA == be.ID_PROGRAMA).DefaultIfEmpty()
                            from ter in _mdb.T_FICHA_TERCIARIO.Where(ter => ter.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                            from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == ter.ID_SUBPROGRAMA).DefaultIfEmpty()

                            where (fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario || fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.EtapaFinalizada)

                                     && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                     ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                     ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                     (be.ID_PROGRAMA == idPrograma || idPrograma == 0) && (be.ID_ESTADO == idEstado || idEstado == 0) &&
                                     //(modalidad != "T" ? (ter.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                     (conApoderados != "T" ? be.TIENE_APODERADO == conApoderados : (be.TIENE_APODERADO != null || string.IsNullOrEmpty(be.TIENE_APODERADO))) &&
                                     (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                     //(altaTemprana != "T" ? ter.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                     (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil)) &&
                                     (fic.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim())) 
                                     && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                            select new Beneficiario
                            {
                                IdBeneficiario = be.ID_BENEFICIARIO,
                                IdFicha = be.ID_FICHA ?? 0,
                                IdEstado = estado.ID_ESTADO,
                                Programa = prog.N_PROGRAMA,
                                IdPrograma = be.ID_PROGRAMA ?? 0,
                                NombreEstado = estado.N_ESTADO,
                                TieneApoderado = be.TIENE_APODERADO,
                                Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                Apoderado = new Apoderado
                                {
                                    Apellido = ap.APELLIDO,
                                    Nombre = ap.NOMBRE,
                                    NumeroDocumento = ap.NRO_DOCUMENTO ?? "."
                                },
                                UsuarioSistema = be.T_USUARIOS.LOGIN,
                                IdUsuarioSistema = be.T_USUARIOS.ID_USR_SIST,
                                idSubprograma = sub.ID_SUBPROGRAMA,
                                Ficha = new Ficha
                                {
                                    IdEstadoFicha = fic.ID_ESTADO_FICHA,
                                    Apellido = fic.APELLIDO,
                                    Barrio = fic.BARRIO,
                                    IdFicha = fic.ID_FICHA,
                                    Cuil = fic.CUIL,
                                    EsDiscapacitado = fic.ES_DISCAPACITADO == "S" ? true : false,
                                    FechaNacimiento = fic.FER_NAC,
                                    Nombre = fic.NOMBRE,
                                    NumeroDocumento = fic.NUMERO_DOCUMENTO,
                                    Sexo = fic.SEXO,
                                    TipoFicha = fic.TIPO_FICHA,
                                    idEtapa = fic.ID_ETAPA,
                                    NombreEtapa = fic.T_ETAPAS.N_ETAPA,
                                    NroTramite = fic.NRO_TRAMITE
                                }
                            }
                            ;


                case (int)Enums.TipoFicha.Universitaria:

                    return
                            from be in _mdb.T_BENEFICIARIOS.Where(be => be.ID_PROGRAMA == (int)Enums.TipoFicha.Universitaria)
                            join fic in _mdb.T_FICHAS on be.ID_FICHA equals fic.ID_FICHA
                            from estado in _mdb.T_ESTADOS.Where(est => est.ID_ESTADO == be.ID_ESTADO).DefaultIfEmpty()
                            from cu in
                                _mdb.T_CUENTAS_BANCO.Where(cu => cu.ID_BENEFICIARIO == be.ID_BENEFICIARIO).DefaultIfEmpty()
                            from suc in
                                _mdb.T_TABLAS_BCO_CBA.Where(suc => suc.ID_TABLA_BCO_CBA == cu.ID_SUCURSAL).DefaultIfEmpty()
                            from ap in _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == be.ID_BENEFICIARIO &&
                                ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                            from prog in _mdb.T_PROGRAMAS.Where(prog => prog.ID_PROGRAMA == be.ID_PROGRAMA).DefaultIfEmpty()
                            from uni in _mdb.T_FICHA_UNIVERSITARIO.Where(uni => uni.ID_FICHA == fic.ID_FICHA).DefaultIfEmpty()
                            from sub in _mdb.T_SUBPROGRAMAS.Where(sub => sub.ID_SUBPROGRAMA == uni.ID_SUBPROGRAMA).DefaultIfEmpty()

                            where (fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.Beneficiario || fic.ID_ESTADO_FICHA == (int)Enums.EstadoFicha.EtapaFinalizada)

                                     && ((fic.APELLIDO.ToLower().Contains(apellido.ToLower()) || (ap.APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido)) &&
                                     ((fic.NOMBRE.ToLower().Contains(nombre.ToLower()) || (ap.NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre)) &&
                                     ((fic.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || ap.NRO_DOCUMENTO.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                     (be.ID_PROGRAMA == idPrograma || idPrograma == 0) && (be.ID_ESTADO == idEstado || idEstado == 0) &&
                                //(modalidad != "T" ? (ter.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichappp.MODALIDAD != null || string.IsNullOrEmpty(fichappp.MODALIDAD.HasValue))) &&
                                     (conApoderados != "T" ? be.TIENE_APODERADO == conApoderados : (be.TIENE_APODERADO != null || string.IsNullOrEmpty(be.TIENE_APODERADO))) &&
                                     (discapacitado != "T" ? fic.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                //(altaTemprana != "T" ? ter.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichappp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichappp.ALTA_TEMPRANA))) &&
                                     (fic.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                     && (fic.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))  
                                     && (fic.ID_ETAPA == idEtapa || idEtapa == 0)

                            select new Beneficiario
                            {
                                IdBeneficiario = be.ID_BENEFICIARIO,
                                IdFicha = be.ID_FICHA ?? 0,
                                IdEstado = estado.ID_ESTADO,
                                Programa = prog.N_PROGRAMA,
                                IdPrograma = be.ID_PROGRAMA ?? 0,
                                NombreEstado = estado.N_ESTADO,
                                TieneApoderado = be.TIENE_APODERADO,
                                Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                Apoderado = new Apoderado
                                {
                                    Apellido = ap.APELLIDO,
                                    Nombre = ap.NOMBRE,
                                    NumeroDocumento = ap.NRO_DOCUMENTO ?? "."
                                },
                                UsuarioSistema = be.T_USUARIOS.LOGIN,
                                IdUsuarioSistema = be.T_USUARIOS.ID_USR_SIST,
                                idSubprograma = sub.ID_SUBPROGRAMA,
                                Ficha = new Ficha
                                {
                                    IdEstadoFicha = fic.ID_ESTADO_FICHA,
                                    Apellido = fic.APELLIDO,
                                    Barrio = fic.BARRIO,
                                    IdFicha = fic.ID_FICHA,
                                    Cuil = fic.CUIL,
                                    EsDiscapacitado = fic.ES_DISCAPACITADO == "S" ? true : false,
                                    FechaNacimiento = fic.FER_NAC,
                                    Nombre = fic.NOMBRE,
                                    NumeroDocumento = fic.NUMERO_DOCUMENTO,
                                    Sexo = fic.SEXO,
                                    TipoFicha = fic.TIPO_FICHA,
                                    idEtapa = fic.ID_ETAPA,
                                    NombreEtapa = fic.T_ETAPAS.N_ETAPA,
                                    NroTramite = fic.NRO_TRAMITE
                                }
                            }
                            ;
                default:

                    var fichasppp = (from qfp in  //QVT_REPORTES_PPP(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado,idEtapa, "", 0, 0 , nrotramite)
                              
                                      _mdb.VT_REPORTES_PPP
                                                  where (qfp.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || qfp.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                                  && ((qfp.APELLIDO.ToLower().Contains(apellido.ToLower()) || (qfp.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                                  && ((qfp.NOMBRE.ToLower().Contains(nombre.ToLower()) || (qfp.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                                        && ((qfp.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || qfp.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                                         (qfp.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                                         (modalidad != "T" ? (qfp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichaqfp.MODALIDAD != null || string.IsNullOrEmpty(fichaqfp.MODALIDAD.HasValue))) &&
                                                         (conApoderados != "T" ? qfp.TIENE_APODERADO == conApoderados : (qfp.TIENE_APODERADO != null || string.IsNullOrEmpty(qfp.TIENE_APODERADO))) &&
                                                         (discapacitado != "T" ? qfp.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                                         (altaTemprana != "T" ? qfp.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichaqfp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichaqfp.ALTA_TEMPRANA))) &&
                                                         (qfp.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                                         && (qfp.IDETAPA == idEtapa || idEtapa == 0)
                                                 && (qfp.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))

                                     
                                     select new Beneficiario
                             {
                                 IdBeneficiario = (int)qfp.ID_BENEFICIARIO,
                                 IdFicha = qfp.ID_FICHA,
                                 IdEstado = (int)qfp.BEN_ID_ESTADO,
                                 Programa = "PPP",
                                 IdPrograma = 3,
                                 NombreEstado = qfp.BEN_N_ESTADO,
                                 TieneApoderado = qfp.TIENE_APODERADO,
                                 //Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                 Apoderado = new Apoderado
                                 {
                                     Apellido = qfp.APO_APELLIDO,
                                     Nombre = qfp.APO_NOMBRE,
                                     NumeroDocumento = qfp.APO_DNI ?? "."
                                 },
                                 TipoPrograma = qfp.TIPO_PPP ?? 0, 
                                 Ficha = new Ficha
                                 {
                                     IdEstadoFicha = qfp.ID_EST_FIC,
                                     Apellido = qfp.APELLIDO,
                                     Barrio = qfp.BARRIO,
                                     IdFicha = qfp.ID_FICHA,
                                     Cuil = qfp.CUIL,
                                     EsDiscapacitado = qfp.ES_DISCAPACITADO == "S" ? true : false,
                                     FechaNacimiento = qfp.FER_NAC,
                                     Nombre = qfp.NOMBRE,
                                     NumeroDocumento = qfp.NUMERO_DOCUMENTO,
                                     Sexo = qfp.SEXO,
                                     TipoFicha = qfp.TIPO_FICHA,
                                     idEtapa = qfp.IDETAPA,
                                     NombreEtapa = "",//qfp.N_ETAPA, 
                                     NroTramite = qfp.NRO_TRAMITE,
                                     idCaja = qfp.ID_CAJA == null ? 0 : (int)qfp.ID_CAJA,
                                     FichaPpp =
                                         new FichaPPP
                                         {
                                             Modalidad = qfp.MODALIDAD ?? 0,
                                             AltaTemprana = qfp.ALTA_TEMPRANA == null ? "N" : "S",
                                             //Empresa =
                                             //    new Empresa
                                             //    {
                                             //        NombreEmpresa = emp.N_EMPRESA,
                                             //        Calle = emp.CALLE,
                                             //        Numero = emp.NUMERO,
                                             //        NombreLocalidad = emp.T_LOCALIDADES.N_LOCALIDAD,
                                             //        Cuit = emp.CUIT
                                             //    }
                                         }
                                 }
                             });


                    var objectQuery = fichasppp as ObjectQuery;
                    string consultaSql = objectQuery.ToTraceString();
                    return fichasppp;
            }
        }

        // 03/05/2018
        private IQueryable<IBeneficiario> QBeneficiarioSimpleTodos(string nombre, string apellido, string cuil, string numeroDocumento, int idPrograma, string conApoderados, string modalidad, string discapacitado, string altaTemprana, int idEstado, string apellidonombreapoderado, int idEtapa, string nrotramite)
        {


           
                    var fichasppp = (from qfp in  //QVT_REPORTES_PPP(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado,idEtapa, "", 0, 0 , nrotramite)

                                         _mdb.VT_REPORTES_PPP
                                     where (qfp.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || qfp.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                     && ((qfp.APELLIDO.ToLower().Contains(apellido.ToLower()) || (qfp.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                     && ((qfp.NOMBRE.ToLower().Contains(nombre.ToLower()) || (qfp.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                           && ((qfp.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || qfp.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                            (qfp.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                            (modalidad != "T" ? (qfp.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichaqfp.MODALIDAD != null || string.IsNullOrEmpty(fichaqfp.MODALIDAD.HasValue))) &&
                                            (conApoderados != "T" ? qfp.TIENE_APODERADO == conApoderados : (qfp.TIENE_APODERADO != null || string.IsNullOrEmpty(qfp.TIENE_APODERADO))) &&
                                            (discapacitado != "T" ? qfp.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                            (altaTemprana != "T" ? qfp.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichaqfp.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichaqfp.ALTA_TEMPRANA))) &&
                                            (qfp.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                            && (qfp.IDETAPA == idEtapa || idEtapa == 0)
                                    && (qfp.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))


                                     select new Beneficiario
                                     {
                                         IdBeneficiario = (int)qfp.ID_BENEFICIARIO,
                                         IdFicha = qfp.ID_FICHA,
                                         IdEstado = (int)qfp.BEN_ID_ESTADO,
                                         Programa = "PPP",
                                         IdPrograma = 3,
                                         NombreEstado = qfp.BEN_N_ESTADO,
                                         TieneApoderado = qfp.TIENE_APODERADO,
                                         //Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                         Apoderado = new Apoderado
                                         {
                                             Apellido = qfp.APO_APELLIDO,
                                             Nombre = qfp.APO_NOMBRE,
                                             NumeroDocumento = qfp.APO_DNI ?? "."
                                         },
                                         TipoPrograma = qfp.TIPO_PPP ?? 0,
                                         Ficha = new Ficha
                                         {
                                             IdEstadoFicha = qfp.ID_EST_FIC,
                                             Apellido = qfp.APELLIDO,
                                             Barrio = qfp.BARRIO,
                                             IdFicha = qfp.ID_FICHA,
                                             Cuil = qfp.CUIL,
                                             EsDiscapacitado = qfp.ES_DISCAPACITADO == "S" ? true : false,
                                             FechaNacimiento = qfp.FER_NAC,
                                             Nombre = qfp.NOMBRE,
                                             NumeroDocumento = qfp.NUMERO_DOCUMENTO,
                                             Sexo = qfp.SEXO,
                                             TipoFicha = qfp.TIPO_FICHA,
                                             idEtapa = qfp.IDETAPA,
                                             NombreEtapa = "",//qfp.N_ETAPA, 
                                             NroTramite = qfp.NRO_TRAMITE,
                                             idCaja = qfp.ID_CAJA == null ? 0 : (int)qfp.ID_CAJA,
                                             FichaPpp =
                                                 new FichaPPP
                                                 {
                                                     Modalidad = qfp.MODALIDAD ?? 0,
                                                     AltaTemprana = qfp.ALTA_TEMPRANA == null ? "N" : "S",
                                                     //Empresa =
                                                     //    new Empresa
                                                     //    {
                                                     //        NombreEmpresa = emp.N_EMPRESA,
                                                     //        Calle = emp.CALLE,
                                                     //        Numero = emp.NUMERO,
                                                     //        NombreLocalidad = emp.T_LOCALIDADES.N_LOCALIDAD,
                                                     //        Cuit = emp.CUIT
                                                     //    }
                                                 }
                                         }
                                     });

                    var fichasPprof = (from qfprof in  //QVT_REPORTES_PPP(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado,idEtapa, "", 0, 0 , nrotramite)

                                         _mdb.VT_REPORTES_PPPPROF
                                     where (qfprof.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || qfprof.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                     && ((qfprof.APELLIDO.ToLower().Contains(apellido.ToLower()) || (qfprof.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                     && ((qfprof.NOMBRE.ToLower().Contains(nombre.ToLower()) || (qfprof.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                           && ((qfprof.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || qfprof.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                            (qfprof.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                            (modalidad != "T" ? (qfprof.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichaqfprof.MODALIDAD != null || string.IsNullOrEmpty(fichaqfprof.MODALIDAD.HasValue))) &&
                                            (conApoderados != "T" ? qfprof.TIENE_APODERADO == conApoderados : (qfprof.TIENE_APODERADO != null || string.IsNullOrEmpty(qfprof.TIENE_APODERADO))) &&
                                            (discapacitado != "T" ? qfprof.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                            (altaTemprana != "T" ? qfprof.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichaqfprof.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichaqfprof.ALTA_TEMPRANA))) &&
                                            (qfprof.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                            && (qfprof.IDETAPA == idEtapa || idEtapa == 0)
                                    && (qfprof.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))


                                     select new Beneficiario
                                     {
                                         IdBeneficiario = (int)qfprof.ID_BENEFICIARIO,
                                         IdFicha = qfprof.ID_FICHA,
                                         IdEstado = (int)qfprof.BEN_ID_ESTADO,
                                         Programa = "PPP PROFESIONAL",
                                         IdPrograma = 4,
                                         NombreEstado = qfprof.BEN_N_ESTADO,
                                         TieneApoderado = qfprof.TIENE_APODERADO,
                                         //Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                         Apoderado = new Apoderado
                                         {
                                             Apellido = qfprof.APO_APELLIDO,
                                             Nombre = qfprof.APO_NOMBRE,
                                             NumeroDocumento = qfprof.APO_DNI ?? "."
                                         },
                                         TipoPrograma =  0,
                                         Ficha = new Ficha
                                         {
                                             IdEstadoFicha = qfprof.ID_EST_FIC,
                                             Apellido = qfprof.APELLIDO,
                                             Barrio = qfprof.BARRIO,
                                             IdFicha = qfprof.ID_FICHA,
                                             Cuil = qfprof.CUIL,
                                             EsDiscapacitado = qfprof.ES_DISCAPACITADO == "S" ? true : false,
                                             FechaNacimiento = qfprof.FER_NAC,
                                             Nombre = qfprof.NOMBRE,
                                             NumeroDocumento = qfprof.NUMERO_DOCUMENTO,
                                             Sexo = qfprof.SEXO,
                                             TipoFicha = qfprof.TIPO_FICHA,
                                             idEtapa = qfprof.IDETAPA,
                                             NombreEtapa = "",//qfprof.N_ETAPA, 
                                             NroTramite = qfprof.NRO_TRAMITE,
                                             idCaja = qfprof.ID_CAJA == null ? 0 : (int)qfprof.ID_CAJA,
                                             FichaPpp =
                                                 new FichaPPP
                                                 {
                                                     Modalidad = qfprof.MODALIDAD ?? 0,
                                                     AltaTemprana = qfprof.ALTA_TEMPRANA == null ? "N" : "S",
                                                     //Empresa =
                                                     //    new Empresa
                                                     //    {
                                                     //        NombreEmpresa = emp.N_EMPRESA,
                                                     //        Calle = emp.CALLE,
                                                     //        Numero = emp.NUMERO,
                                                     //        NombreLocalidad = emp.T_LOCALIDADES.N_LOCALIDAD,
                                                     //        Cuit = emp.CUIT
                                                     //    }
                                                 }
                                         }
                                     });
                    var fichasTer = (from qft in

                                         _mdb.VT_REPORTES_TER

                                     where (qft.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || qft.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                     && ((qft.APELLIDO.ToLower().Contains(apellido.ToLower()) || (qft.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                     && ((qft.NOMBRE.ToLower().Contains(nombre.ToLower()) || (qft.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                           && ((qft.DNI.ToLower() == numeroDocumento.ToLower() || qft.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                            (qft.ID_ESTADO == idEstado || idEstado == 0) &&
                                            (conApoderados != "T" ? qft.APODERADO == conApoderados : (qft.APODERADO != null || string.IsNullOrEmpty(qft.APODERADO))) &&
                                            (discapacitado != "T" ? qft.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                            (qft.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                            && (qft.IDETAPA == idEtapa || idEtapa == 0)
                                      
                                     select new Beneficiario
                                     {
                                         IdBeneficiario = (int)qft.ID_BENEFICIARIO,
                                         IdFicha = qft.ID_FICHA,
                                         IdEstado = (int)qft.ID_ESTADO,
                                         Programa = "BECA TERCIARIA",
                                         IdPrograma = 1,
                                         NombreEstado = qft.BEN_N_ESTADO,
                                         TieneApoderado = qft.APODERADO,
                                         //Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                         Apoderado = new Apoderado
                                         {
                                             Apellido = qft.APO_APELLIDO,
                                             Nombre = qft.APO_NOMBRE,
                                             NumeroDocumento = qft.APO_DNI ?? "."
                                         },
                                         TipoPrograma =  0,
                                         Ficha = new Ficha
                                         {
                                             IdEstadoFicha = qft.ID_EST_FIC,
                                             Apellido = qft.APELLIDO,
                                             Barrio = qft.BARRIO,
                                             IdFicha = qft.ID_FICHA,
                                             Cuil = qft.CUIL,
                                             EsDiscapacitado = qft.ES_DISCAPACITADO == "S" ? true : false,
                                             FechaNacimiento = qft.FEC_NAC,
                                             Nombre = qft.NOMBRE,
                                             NumeroDocumento = qft.DNI,
                                             Sexo = qft.SEXO,
                                             TipoFicha = 1,
                                             idEtapa = qft.IDETAPA,
                                             NombreEtapa = "",//qft.N_ETAPA, 
                                             NroTramite = "", //qft.NRO_TRAMITE,
                                             idCaja = 0,
                                             FichaPpp =
                                                 new FichaPPP
                                                 {
                                                     Modalidad = null,
                                                     AltaTemprana = null,
                                                     //Empresa =
                                                     //    new Empresa
                                                     //    {
                                                     //        NombreEmpresa = emp.N_EMPRESA,
                                                     //        Calle = emp.CALLE,
                                                     //        Numero = emp.NUMERO,
                                                     //        NombreLocalidad = emp.T_LOCALIDADES.N_LOCALIDAD,
                                                     //        Cuit = emp.CUIT
                                                     //    }
                                                 }
                                         }
                                     });

                    var fichasUni = (from qfu in

                                         _mdb.VT_REPORTES_UNI

                                     where (qfu.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || qfu.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                     && ((qfu.APELLIDO.ToLower().Contains(apellido.ToLower()) || (qfu.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                     && ((qfu.NOMBRE.ToLower().Contains(nombre.ToLower()) || (qfu.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                           && ((qfu.DNI.ToLower() == numeroDocumento.ToLower() || qfu.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                            (qfu.ID_ESTADO == idEstado || idEstado == 0) &&
                                            (conApoderados != "T" ? qfu.APODERADO == conApoderados : (qfu.APODERADO != null || string.IsNullOrEmpty(qfu.APODERADO))) &&
                                            (discapacitado != "T" ? qfu.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                            (qfu.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                            && (qfu.IDETAPA == idEtapa || idEtapa == 0)

                                     select new Beneficiario
                                     {
                                         IdBeneficiario = (int)qfu.ID_BENEFICIARIO,
                                         IdFicha = qfu.ID_FICHA,
                                         IdEstado = (int)qfu.ID_ESTADO,
                                         Programa = "BECA UNIVERSITARIA",
                                         IdPrograma = 2,
                                         NombreEstado = qfu.BEN_N_ESTADO,
                                         TieneApoderado = qfu.APODERADO,
                                         //Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                         Apoderado = new Apoderado
                                         {
                                             Apellido = qfu.APO_APELLIDO,
                                             Nombre = qfu.APO_NOMBRE,
                                             NumeroDocumento = qfu.APO_DNI ?? "."
                                         },
                                         TipoPrograma = 0,
                                         Ficha = new Ficha
                                         {
                                             IdEstadoFicha = qfu.ID_EST_FIC,
                                             Apellido = qfu.APELLIDO,
                                             Barrio = qfu.BARRIO,
                                             IdFicha = qfu.ID_FICHA,
                                             Cuil = qfu.CUIL,
                                             EsDiscapacitado = qfu.ES_DISCAPACITADO == "S" ? true : false,
                                             FechaNacimiento = qfu.FEC_NAC,
                                             Nombre = qfu.NOMBRE,
                                             NumeroDocumento = qfu.DNI,
                                             Sexo = qfu.SEXO,
                                             TipoFicha = 2,
                                             idEtapa = qfu.IDETAPA,
                                             NombreEtapa = "",//qfu.N_ETAPA, 
                                             NroTramite = "", //qfu.NRO_TRAMITE,
                                             idCaja = 0,
                                             FichaPpp =
                                                 new FichaPPP
                                                 {
                                                     Modalidad = null,
                                                     AltaTemprana = null,
                                                     //Empresa =
                                                     //    new Empresa
                                                     //    {
                                                     //        NombreEmpresa = emp.N_EMPRESA,
                                                     //        Calle = emp.CALLE,
                                                     //        Numero = emp.NUMERO,
                                                     //        NombreLocalidad = emp.T_LOCALIDADES.N_LOCALIDAD,
                                                     //        Cuit = emp.CUIT
                                                     //    }
                                                 }
                                         }
                                     });
                    var fichasEfect = (from qfEfec in  //QVT_REPORTES_PPP(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado,idEtapa, "", 0, 0 , nrotramite)

                                           _mdb.VT_REPORTES_EFEC_SOC
                                       where (qfEfec.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || qfEfec.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                       && ((qfEfec.APELLIDO.ToLower().Contains(apellido.ToLower()) || (qfEfec.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                       && ((qfEfec.NOMBRE.ToLower().Contains(nombre.ToLower()) || (qfEfec.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                             && ((qfEfec.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || qfEfec.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                              (qfEfec.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                              (modalidad != "T" ? (qfEfec.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichaqfEfec.MODALIDAD != null || string.IsNullOrEmpty(fichaqfEfec.MODALIDAD.HasValue))) &&
                                              (conApoderados != "T" ? qfEfec.TIENE_APODERADO == conApoderados : (qfEfec.TIENE_APODERADO != null || string.IsNullOrEmpty(qfEfec.TIENE_APODERADO))) &&
                                              (discapacitado != "T" ? qfEfec.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                              (altaTemprana != "T" ? qfEfec.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichaqfEfec.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichaqfEfec.ALTA_TEMPRANA))) &&
                                              (qfEfec.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                              && (qfEfec.IDETAPA == idEtapa || idEtapa == 0)
                                      //&& (qfEfec.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))


                                       select new Beneficiario
                                       {
                                           IdBeneficiario = (int)qfEfec.ID_BENEFICIARIO,
                                           IdFicha = qfEfec.ID_FICHA,
                                           IdEstado = (int)qfEfec.BEN_ID_ESTADO,
                                           Programa = "EFECTORES SOCIALES",
                                           IdPrograma = 7,
                                           NombreEstado = qfEfec.BEN_N_ESTADO,
                                           TieneApoderado = qfEfec.TIENE_APODERADO,
                                           //Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                           Apoderado = new Apoderado
                                           {
                                               Apellido = qfEfec.APO_APELLIDO,
                                               Nombre = qfEfec.APO_NOMBRE,
                                               NumeroDocumento = qfEfec.APO_DNI ?? "."
                                           },
                                           TipoPrograma = 0,
                                           Ficha = new Ficha
                                           {
                                               IdEstadoFicha = qfEfec.ID_EST_FIC,
                                               Apellido = qfEfec.APELLIDO,
                                               Barrio = qfEfec.BARRIO,
                                               IdFicha = qfEfec.ID_FICHA,
                                               Cuil = qfEfec.CUIL,
                                               EsDiscapacitado = qfEfec.ES_DISCAPACITADO == "S" ? true : false,
                                               FechaNacimiento = qfEfec.FER_NAC,
                                               Nombre = qfEfec.NOMBRE,
                                               NumeroDocumento = qfEfec.NUMERO_DOCUMENTO,
                                               Sexo = qfEfec.SEXO,
                                               TipoFicha = 7,
                                               idEtapa = qfEfec.IDETAPA,
                                               NombreEtapa = "",//qfEfec.N_ETAPA, 
                                               NroTramite = "",//qfEfec.NRO_TRAMITE,
                                               idCaja = 0,
                                               FichaPpp =
                                                   new FichaPPP
                                                   {
                                                       Modalidad = qfEfec.MODALIDAD ?? 0,
                                                       AltaTemprana = qfEfec.ALTA_TEMPRANA == null ? "N" : "S",
                                                       //Empresa =
                                                       //    new Empresa
                                                       //    {
                                                       //        NombreEmpresa = emp.N_EMPRESA,
                                                       //        Calle = emp.CALLE,
                                                       //        Numero = emp.NUMERO,
                                                       //        NombreLocalidad = emp.T_LOCALIDADES.N_LOCALIDAD,
                                                       //        Cuit = emp.CUIT
                                                       //    }
                                                   }
                                           }
                                       });

                    var fichasRec = (from qfRec in  //QVT_REPORTES_PPP(nombre, apellido, cuil, numeroDocumento, idPrograma, conApoderados, modalidad, discapacitado, altaTemprana, idEstado, apellidonombreapoderado,idEtapa, "", 0, 0 , nrotramite)

                                           _mdb.VT_REPORTES_REC_PROD
                                       where (qfRec.ID_EST_FIC == (int)Enums.EstadoFicha.Beneficiario || qfRec.ID_EST_FIC == (int)Enums.EstadoFicha.EtapaFinalizada)

                                       && ((qfRec.APELLIDO.ToLower().Contains(apellido.ToLower()) || (qfRec.APO_APELLIDO ?? "").ToLower().Contains(apellido.ToLower())) || String.IsNullOrEmpty(apellido))
                                       && ((qfRec.NOMBRE.ToLower().Contains(nombre.ToLower()) || (qfRec.APO_NOMBRE ?? "").ToLower().Contains(nombre.ToLower())) || String.IsNullOrEmpty(nombre))
                                             && ((qfRec.NUMERO_DOCUMENTO.ToLower() == numeroDocumento.ToLower() || qfRec.APO_DNI.ToLower() == numeroDocumento.ToLower()) || String.IsNullOrEmpty(numeroDocumento)) &&
                                              (qfRec.BEN_ID_ESTADO == idEstado || idEstado == 0) &&
                                              (modalidad != "T" ? (qfRec.MODALIDAD == 1 ? "E" : "C") == modalidad : modalidad == "T") &&//(fichaqfRec.MODALIDAD != null || string.IsNullOrEmpty(fichaqfRec.MODALIDAD.HasValue))) &&
                                              (conApoderados != "T" ? qfRec.TIENE_APODERADO == conApoderados : (qfRec.TIENE_APODERADO != null || string.IsNullOrEmpty(qfRec.TIENE_APODERADO))) &&
                                              (discapacitado != "T" ? qfRec.ES_DISCAPACITADO == discapacitado : (true || true)) &&
                                              (altaTemprana != "T" ? qfRec.ALTA_TEMPRANA == altaTemprana : altaTemprana == "T") &&//(fichaqfRec.ALTA_TEMPRANA != null || string.IsNullOrEmpty(fichaqfRec.ALTA_TEMPRANA))) &&
                                              (qfRec.CUIL.ToLower() == cuil.ToLower() || String.IsNullOrEmpty(cuil))
                                              && (qfRec.IDETAPA == idEtapa || idEtapa == 0)
                                       //&& (qfRec.NRO_TRAMITE.ToLower().Contains(nrotramite.ToLower()) || String.IsNullOrEmpty(nrotramite.Trim()))


                                       select new Beneficiario
                                       {
                                           IdBeneficiario = (int)qfRec.ID_BENEFICIARIO,
                                           IdFicha = qfRec.ID_FICHA,
                                           IdEstado = (int)qfRec.BEN_ID_ESTADO,
                                           Programa = "RECONVERSIÓN PRODUCTIVA",
                                           IdPrograma = 6,
                                           NombreEstado = qfRec.BEN_N_ESTADO,
                                           TieneApoderado = qfRec.TIENE_APODERADO,
                                           //Sucursal = suc.COD_BCO_CBA + " - " + suc.DESCRIPCION,
                                           Apoderado = new Apoderado
                                           {
                                               Apellido = qfRec.APO_APELLIDO,
                                               Nombre = qfRec.APO_NOMBRE,
                                               NumeroDocumento = qfRec.APO_DNI ?? "."
                                           },
                                           TipoPrograma = 0,
                                           Ficha = new Ficha
                                           {
                                               IdEstadoFicha = qfRec.ID_EST_FIC,
                                               Apellido = qfRec.APELLIDO,
                                               Barrio = qfRec.BARRIO,
                                               IdFicha = qfRec.ID_FICHA,
                                               Cuil = qfRec.CUIL,
                                               EsDiscapacitado = qfRec.ES_DISCAPACITADO == "S" ? true : false,
                                               FechaNacimiento = qfRec.FER_NAC,
                                               Nombre = qfRec.NOMBRE,
                                               NumeroDocumento = qfRec.NUMERO_DOCUMENTO,
                                               Sexo = qfRec.SEXO,
                                               TipoFicha = 6,
                                               idEtapa = qfRec.IDETAPA,
                                               NombreEtapa = "",//qfRec.N_ETAPA, 
                                               NroTramite = "",//qfRec.NRO_TRAMITE,
                                               idCaja = 0,
                                               FichaPpp =
                                                   new FichaPPP
                                                   {
                                                       Modalidad = qfRec.MODALIDAD ?? 0,
                                                       AltaTemprana = qfRec.ALTA_TEMPRANA == null ? "N" : "S",
                                                       //Empresa =
                                                       //    new Empresa
                                                       //    {
                                                       //        NombreEmpresa = emp.N_EMPRESA,
                                                       //        Calle = emp.CALLE,
                                                       //        Numero = emp.NUMERO,
                                                       //        NombreLocalidad = emp.T_LOCALIDADES.N_LOCALIDAD,
                                                       //        Cuit = emp.CUIT
                                                       //    }
                                                   }
                                           }
                                       });
                    //fichasppp.Union(fichasPprof);
                    //fichasppp.Union(fichasTer);
                    //var objectQuery = fichasppp as ObjectQuery;
                    //string consultaSql = objectQuery.ToTraceString();
                    var total = fichasppp.ToList().Union(fichasTer.ToList().Union(fichasUni.ToList().Union(fichasEfect.ToList().Union(fichasRec.ToList()).Union(fichasPprof.ToList()))));


                    return total.AsQueryable();//fichasppp.Union(fichasPprof.Union(fichasTer));
            
        }




        // 23/02/2017

        public IList<IBeneficiario> GetBeneficiariosHorarios(int idPrograma, int tipoprograma, int estadoBenef, DateTime fecInicioBenef, DateTime fecBenefHasta)
        {
            IList<IBeneficiario> listabeneficiariototal = QBeneficiarioHorarios(idPrograma, tipoprograma, estadoBenef, fecInicioBenef, fecBenefHasta).ToList();

            return listabeneficiariototal;

        }

        private IEnumerable<IBeneficiario> QBeneficiarioHorarios(int idPrograma, int tipoprograma, int estadoBenef , DateTime fecInicioBenef, DateTime fecBenefHasta)
        {
            switch (idPrograma)
            {
                #region "case (int) Enums.Programas.Ppp:"
                case (int)Enums.Programas.Ppp:
                    var beneficiariosPpp = (from c in _mdb.T_BENEFICIARIOS
                                            join fic in _mdb.T_FICHAS on c.ID_FICHA equals fic.ID_FICHA
                                            from fichappp in
                                                _mdb.T_FICHA_PPP.Where(fichappp => fichappp.ID_FICHA == c.ID_FICHA).DefaultIfEmpty()
                                            from ap in
                                                _mdb.T_APODERADOS.Where(ap => ap.ID_BENEFICIARIO == c.ID_BENEFICIARIO && ap.ID_ESTADO_APODERADO == (short)Enums.EstadoApoderado.Activo).DefaultIfEmpty()
                                            from loc in _mdb.T_LOCALIDADES.Where(loc => loc.ID_LOCALIDAD == fic.ID_LOCALIDAD).DefaultIfEmpty()
                                            from dep in _mdb.T_DEPARTAMENTOS.Where(dep => dep.ID_DEPARTAMENTO == loc.ID_DEPARTAMENTO).DefaultIfEmpty()
                                            from sub in _mdb.T_SUBPROGRAMAS.Where(sub=>sub.ID_SUBPROGRAMA == fichappp.ID_SUBPROGRAMA).DefaultIfEmpty()
                                            where 
                                            (c.ID_PROGRAMA == idPrograma  || idPrograma == 0) &&
                                            (c.ID_ESTADO == estadoBenef || estadoBenef == 0) &&
                                            (fichappp.TIPO_PPP == tipoprograma || tipoprograma == 0) &&
                                             c.FEC_INICIO >= fecInicioBenef 
                                                  && c.FEC_INICIO <= fecBenefHasta  
                                            select
                                                new Beneficiario
                                                {
                                                    IdBeneficiario = c.ID_BENEFICIARIO,
                                                    IdEstado = c.ID_ESTADO ?? 0,
                                                    FechaSistema = c.FEC_SIST,
                                                    IdFicha = c.ID_FICHA ?? 0,
                                                    IdPrograma = c.ID_PROGRAMA ?? 0,
                                                    IdUsuarioSistema = c.ID_USR_SIST,
                                                    IdConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                    NumeroConvenio = c.T_PROGRAMAS.CONVENIO_BCO_CBA,
                                                    CodigoActivacionBancaria = c.COD_ACT_BANCARIO ?? 0,
                                                    CodigoNaturalezaJuridica = c.COD_ACT_BANCARIO ?? 0,
                                                    
                                                    Nacionalidad = c.NACIONALIDAD ?? 0,
                                                    Residente = c.RESIDENTE,
                                                    TipoPersona = c.TIPO_PERSONA,
                                                    
                                                    
                                                    NombreEstado = c.T_ESTADOS.N_ESTADO,
                                                    
                                                    ImportePagoPlan = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                    
                                                    Programa = c.T_PROGRAMAS.N_PROGRAMA,
                                                    MontoPrograma = c.T_PROGRAMAS.MONTO_PROG ?? 0,
                                                    TieneApoderado = c.TIENE_APODERADO,
                                                    FechaNotificacion = c.FEC_NOTIF,
                                                    Notificado = c.NOTIFICADO == "S" ? true : false,
                                                    FechaInicio = c.FEC_INICIO,
                                                    
                                                    
                                                    
                                                    UsuarioSistema = c.T_USUARIOS.LOGIN,
                                                    Ficha =
                                                        new Ficha
                                                        {
                                                            Apellido = fic.APELLIDO,
                                                            Barrio = fic.BARRIO,
                                                            Localidad = loc.N_LOCALIDAD,
                                                            IdLocalidad = loc.ID_LOCALIDAD,
                                                            IdFicha = fic.ID_FICHA,
                                                            Calle = fic.CALLE,
                                                            CodigoPostal = fic.CODIGO_POSTAL,
                                                            Cuil = fic.CUIL,
                                                            EsDiscapacitado =
                                                                fic.ES_DISCAPACITADO == "S"
                                                                    ? true
                                                                    : false,
                                                            Dpto = fic.DPTO ?? " ",
                                                            FechaNacimiento = fic.FER_NAC,
                                                            Mail = fic.MAIL,
                                                            Nombre = fic.NOMBRE,
                                                            Numero = fic.NUMERO,
                                                            NumeroDocumento = fic.NUMERO_DOCUMENTO,
                                                            Piso = fic.PISO ?? " ",
                                                            TipoDocumento = fic.TIPO_DOCUMENTO,
                                                            TipoFicha = fic.TIPO_FICHA,
                                                            IdEstadoFicha = fic.ID_ESTADO_FICHA ?? 0,
                                                            NombreEstadoFicha =
                                                                fic.T_ESTADOS_FICHA.N_ESTADO_FICHA,
                                                            FechaSistema = fic.FEC_SIST,
                                                            IdUsuarioSistema = fic.ID_USR_SIST,
                                                            UsuarioSistema = fic.T_USUARIOS.LOGIN,
                                                            FichaPpp =
                                                                new FichaPPP
                                                                {
                                                                    IdEmpresa = fichappp.ID_EMPRESA,
                                                                    IdNivelEscolaridad = fichappp.ID_NIVEL_ESCOLARIDAD,
                                                                    Modalidad = fichappp.MODALIDAD,
                                                                    IdSede = fichappp.ID_SEDE,
                                                                    TIPO_PPP = fichappp.TIPO_PPP ?? 1,
                                                                    IdSubprograma = fichappp.ID_SUBPROGRAMA,
                                                                    Subprograma = sub.N_SUBPROGRAMA,
                                                                    Sede =
                                                                        new Sede
                                                                        {
                                                                            Calle = fichappp.T_SEDES.CALLE,
                                                                            Numero = fichappp.T_SEDES.NUMERO,
                                                                            Piso = fichappp.T_SEDES.PISO,
                                                                            Dpto = fichappp.T_SEDES.DPTO,
                                                                            CodigoPostal = fichappp.T_SEDES.CODIGO_POSTAL,
                                                                            IdLocalidad = fichappp.T_SEDES.ID_LOCALIDAD,
                                                                            NombreLocalidad = fichappp.T_SEDES.T_LOCALIDADES.N_LOCALIDAD
                                                                        },
                                                                    Empresa =
                                                                        new Empresa
                                                                        {
                                                                            Calle = fichappp.T_EMPRESAS.CALLE,
                                                                            CodigoPostal = fichappp.T_EMPRESAS.CODIGO_POSTAL,
                                                                            Cuit = fichappp.T_EMPRESAS.CUIT,
                                                                            DomicilioLaboralIdem = fichappp.T_EMPRESAS.DOMICLIO_LABORAL_IDEM,
                                                                            IdEmpresa = fichappp.ID_EMPRESA ?? 0,
                                                                            NombreEmpresa = fichappp.T_EMPRESAS.N_EMPRESA,
                                                                            Numero = fichappp.T_EMPRESAS.NUMERO,
                                                                            Piso = fichappp.T_EMPRESAS.PISO,
                                                                            Telefono = fichappp.T_EMPRESAS.PISO,
                                                                            IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD,
                                                                            LocalidadEmpresa =
                                                                                new Localidad
                                                                                {
                                                                                    IdLocalidad = fichappp.T_EMPRESAS.ID_LOCALIDAD ?? 0,
                                                                                    NombreLocalidad = fichappp.T_EMPRESAS.T_LOCALIDADES.N_LOCALIDAD,
                                                                                    Departamento =
                                                                                        new Departamento
                                                                                        {
                                                                                            IdDepartamento = fichappp.T_EMPRESAS.T_LOCALIDADES.ID_DEPARTAMENTO ?? 0,
                                                                                            NombreDepartamento = fichappp.T_EMPRESAS.T_LOCALIDADES.T_DEPARTAMENTOS.N_DEPARTAMENTO
                                                                                        }
                                                                                }
                                                                        }

                                                                },
                                                            LocalidadFicha =
                                                                            new Localidad
                                                                            {
                                                                                IdLocalidad = fic.ID_LOCALIDAD ?? 0,
                                                                                NombreLocalidad = loc.N_LOCALIDAD,
                                                                                Departamento =
                                                                                    new Departamento
                                                                                    {
                                                                                        IdDepartamento = loc.ID_DEPARTAMENTO ?? 0,
                                                                                        NombreDepartamento = dep.N_DEPARTAMENTO
                                                                                    }
                                                                            }

                                                        }
                                                }).OrderBy(x => new { x.IdFicha });
                    return beneficiariosPpp;
                #endregion


                default:
                    return null;
            }
        }


      }
 
    }
